{\rtf1\ansi \deff0{\fonttbl{\f0\froman Tms Rmn;}{\f1\froman Symbol;}{\f2\fswiss Helv;}{\f3\froman Times New Roman;}{\f4\fswiss Arial;}{\f5\froman Roman PS;}{\f6\fswiss Sans Serif PS;}{\f7\fmodern Sans Serif 10cpi;}
{\f8\fmodern Sans Serif 12cpi;}{\f9\fmodern Courier;}{\f10\fnil Preview;}{\f11\fswiss DIGITAL;}{\f12\fmodern Terminal;}{\f13\froman Roman;}{\f14\fscript Script;}{\f15\fmodern Modern;}{\f16\fnil 8514oem;}{\f17\fnil 8514fix;}{\f18\fswiss System;}
{\f19\fmodern Sans Serif 6cpi;}{\f20\fmodern Sans Serif 5cpi;}{\f21\fmodern Sans Serif 17cpi;}{\f22\fmodern Roman 6cpi;}{\f23\fmodern Roman 5cpi;}{\f24\fmodern Roman 17cpi;}{\f25\fmodern Roman 12cpi;}{\f26\fmodern Roman 10cpi;}{\f27\fmodern Courier New;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;}{\stylesheet{\s244 \f4\fs16\up6 
\sbasedon0\snext0 footnote reference;}{\s245 \f4\fs20 \sbasedon0\snext245 footnote text;}{\s246\li720 \i\f4\fs20 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\f4\fs20 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\f4\fs20 \sbasedon0\snext255 heading 7;}{
\s249\li720 \f4\fs20\ul \sbasedon0\snext255 heading 6;}{\s250\li720 \b\f4\fs20 \sbasedon0\snext255 heading 5;}{\s251\sa120\tx2880 \b\f4\fs20 \sbasedon0\snext255 heading 4;}{\s252\sa120\tx2880 \b\f4 \sbasedon0\snext255 heading 3;}{\s253\sa240\tx2880 
\b\f4\cf2 \sbasedon0\snext0 heading 2;}{\s254\qc\sa240 \b\f4\fs30\cf2 \sbasedon0\snext0 heading 1;}{\s255\li720 \f4\fs20 \sbasedon0\snext255 Normal Indent;}{\f4\fs20 \snext0 Normal;}{\s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 \sbasedon0\snext2 Func List;}{
\s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \sbasedon2\snext3 Binding;}{\s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 \sbasedon0\snext4 Example;}{\s5\sa240\tx2880 \f4\fs20\cf2 \sbasedon0\snext5 Title;}{\s6\sa120 \f4\fs20 
\sbasedon0\snext6 Main Text;}{\s7\fi-1080\li1440\sa120\tx1440\tx2880 \f4\fs20 \sbasedon2\snext7 Char List;}{\s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \sbasedon0\snext8 Steps;}{\s9\sa120\tx180\tx1980\tx3780\tx5580\tx8550 \f4\fs20 
\sbasedon6\snext9 Glossary;}{\s10\fi-2520\li2880\sa120\sl120\tx2880 \f4\fs20 \sbasedon2\snext10 interline;}{\s11\li360\sa120\tx2880 \f4\fs20 \sbasedon6\snext11 Jump List;}{\s12\fi-720\li720\sa120 \f4\fs20 \sbasedon6\snext12 Note;}{
\s13\fi-2880\li2880\sa120\tx900\tx2880 \f4\fs20 \sbasedon3\snext13 FunctionDesc;}{\s14\fi-900\li900\sa120\tqr\tx720\tx900 \f4\fs20 \sbasedon3\snext14 BindingShort;}}{\info{\title MicroEmacs main help topic file}{\author Pierre Perret}
{\operator Pierre & Beatrice Perret}{\creatim\yr1991\mo12\dy6\hr14\min36}{\revtim\yr1992\mo10\dy12\hr20\min33}{\version218}{\edmins6612}{\nofpages0}{\nofwords65537}{\nofchars65536}{\vern8368}}\paperh31680\widowctrl\ftnbj\hyphhotz0 \sectd \linex0\endnhere 
\pard\plain \s254\qc \b\f4\fs30\cf2 {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Index}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MainIndex}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 +} Index:0000}} MicroEMACS 4.0 for MS-Windows
\par \pard \s254\qc\sa240 Index
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 {\uldb Introduction}{\v Introduction}
\par \pard \s11\li360\tx2880 {\uldb Keyboard}{\v Keyboard}
\par {\uldb Procedures}{\v Procedures}
\par {\uldb Modes of Operation}{\v ModesOfOperation}
\par {\uldb Macro Language}{\v MacroLanguage}
\par {\uldb Start-up}{\v Startup}
\par {\uldb Memory Usage}{\v MemoryUsage}
\par \pard \s11\li360\sa120\tx2880 {\uldb MS-Windows Specifics}{\v Ms_WindowsSpecifics}
\par {\uldb Glossary}{\v Glossary}
\par \pard \s11\li360\tx2880 {\uldb History}{\v History}
\par {\uldb Support}{\v Support}
\par \pard \s11\li360\sa120\tx2880 {\uldb Copyright}{\v Copyright}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\cf2 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Introduction}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Introduction}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:0005}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} intro;introduction;beginning;basics}} Introduction
\par \pard\plain \f4\fs20 MicroEMACS is a tool for creating and changing documents, programs, and other text files. It is both relatively easy for the novice to use, but also very powerful in the hands of an expert. 
MicroEMACS can be extensively customized for the needs of the individual user.
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS allows several files to be edited at the same time. The display can be split into different {\ul windows}{\v Window} and {\ul screens}{\v Screen}, and text may be moved freely from one window on any s
creen to the next. Depending on the type of file being edited, MicroEMACS can change how it behaves to make editing simple. Editing standard text files, program files and word processing documents are all possible at the same time.
\par There are extensive capabilities to make word processing and editing easier. These include commands for string searching and replacing, paragraph reformatting and deleting, automatic word wrapping, word move and deletes, easy case controlling, and automat
ic word counts.
\par For complex and repetitive editing tasks editing {\ul macros}{\v Macro} can be written. These macros allow the user a great degree of flexibility in determining how MicroEMACS behaves. Also, any and all the {\ul commands}{\v Command}
 can be used by any keystroke by changing, or {\ul rebinding}{\v Binding}, what commands various keys invoke.
\par Special features are also available to perform a diverse set of operations such as file encryption, automatic backup file generation, entabbing and detabbing lines, executing operating system commands and fil
tering of text through other programs (like SORT to allow sorting text).
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} History}}{\plain \f4\fs16  }{\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} History}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:9010}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} history;author;credits}} History
\par \pard\plain \s6\sa120 \f4\fs20 EMACS was originally a text editor written by Richard Stallman at MIT in the early 1970s for Digital Equipment computers. Various versions, rewrites and clones have made an appearance since.
\par This version of MicroEMACS is derived from code written by David G. Conroy in 1985. Later modifications were performed by Steve Wilhite and George Jones. In December of 1985 {\uldb Daniel Lawrence}{\v DanielLawrence}
 picked up the then current source (version 2.0) and made extensive modifications and additions to it over the course of the next six years.
\par In November 1990, {\uldb Pierre Perret}{\v PierrePerret}
 produced a port of MicroEMACS 3.10e to the Microsoft Windows 3.0 environment (BETA version 0.6a which never enjoyed a full release). The first public version, 1.0, based on MicroEMACS 3.11c, was released in April 1992.
\par Update 1.1 included bug fixes, port to Windows NT, support of scroll bars and drag and drop mechanism. It was the first release to include a complete help file.
\par The new version 4.0 of MicroEMACS incorporates the port of the editor to MS-Windows, adding many new features, among which the capabilities to highlight selected regions of  text, and to undo arbitrary editing changes.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Support} #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Support}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:9020}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} support;bugs;author;credits;licence;updates}} Support
\par \pard\plain \s6\sa120 \f4\fs20 Updates and support for the current version are available. Commercial support and usage and resale licences are also available.
\par For questions regarding the official MicroEMACS editor, contact {\uldb Daniel Lawrence}{\v DanielLawrence}. For technical questions specific to the port of MicroEMACS to the Microsoft Windows environment, contact {\uldb Pierre Perret}{\v PierrePerret}.

\par The home BBS of MicroEMACS is "{\uldb The Programmer's Room}{\v TheProgrammersRoom}".
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Bulletin Board System}}{\plain \f4\fs16  }{\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 TheProgrammersRoom}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:9500}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} BBS;bulletin board;home;support;author;updates;programmer's room;modem}}
 Bulletin Board System
\par \pard\plain \s6\sa120 \f4\fs20 The latest executables, sources and documentations can be obtained from:
\par \pard\plain \s7\fi-1080\li1440\tx1440\tx2880 \f4\fs20 {\b The Programmer's Room
\par \tab }(317) 742-5533
\par \tab 486/33 running FREEBSD
\par \tab Interntet: aquest.com
\par \tab 19,200 bps (US Robotics HST)
\par \pard \s7\fi-1080\li1440\sa120\tx1440\tx2880 \tab (317) 742-5533  no parity  8 data bits  no stop bits
\par \pard\plain \s6\sa120 \f4\fs20 \page {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Daniel Lawrence}} {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} DanielLawrence}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 +} Index:9510}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} Lawrence;author;standard;address}} The current MicroEMACS author can be contacted by writing to:
\par \pard\plain \s7\fi-1080\li1440\tqr\tx1260\tx1440\tx2880 \f4\fs20 \tab USMAIL:\tab {\b Daniel Lawrence}
\par \tab  \tab 617 New York Street
\par \pard \s7\fi-1080\li1440\sa120\tqr\tx1260\tx1440\tx2880 \tab  \tab Lafayette, IN 47901
\par \tab Internet:\tab dan@aquest.com
\par      phone:\tab (317) 742-5153 (Please evenings only)
\par \pard \s7\fi-1440\li1440\tqr\tx1260\tx1440\tx2880 {\uldb The Programmer's Room}{\v TheProgrammersRoom} BBS:
\par \pard \s7\fi-1440\li1440\sa120\tqr\tx1260\tx1440\tx2880 \tab  \tab Daniel Lawrence
\par \pard\plain \s6\sa120 \f4\fs20 \page {\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Pierre Perret}} {\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} PierrePerret}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 +} Index:9510}} {\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} Perret;author;Microsoft Windows;MS Windows;address}} The author of the port of MicroEMACS to the Microsoft Windows environment can be contacted by writing to:
\par \pard\plain \s7\fi-1080\li1440\tqr\tx1260\tx1440\tx2880 \f4\fs20 \tab USMAIL:\tab {\b Pierre Perret}
\par \tab  \tab 4326 W Michigan Ave
\par \pard \s7\fi-1080\li1440\sa120\tqr\tx1260\tx1440\tx2880 \tab  \tab Glendale, AZ 85308
\par \tab Internet:\tab P.Perret@az05.bull.com
\par \pard \s7\fi-1440\li1440\sa120\tqr\tx1260\tx1440\tx2880 \tab CompuServe:\tab 73757,2337
\par \pard \s7\fi-1440\li1440\tqr\tx1260\tx1440\tx2880 {\uldb The Programmer's Room}{\v TheProgrammersRoom} BBS:
\par \pard \s7\fi-1440\li1440\sa120\tqr\tx1260\tx1440\tx2880 \tab  \tab Pierre Perret
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Copyright}}{\plain \f4\fs16  }{\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Copyright}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:9030}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} copyright;licence;author;credits}} Copyright
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS is Copyright \'a9 1988 thru 1996 by {\uldb Daniel M. Lawrence}{\v DanielLawrence}
. MicroEMACS 4.0 can be copied and distributed freely for any non-commercial purposes. Commercial users may use MicroEMACS 4.0 in house. Shareware distributors may redistribute MicroEMACS 4.0 for media costs only. MicroEMACS 4.0 can only be incorporated i
nto commercial software or resold with the permission of the current author.
\par This help file was originally authored by {\uldb Pierre Perret}{\v PierrePerret}.
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Keyboard}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Keyboard}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2010}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} keyboard;binding}} Keyboard
\par \pard\plain \s6\sa120 \f4\fs20 All the MicroEMACS documentation talks about {\ul commands}{\v Command} and the {\uldb keystrokes}{\v Keystroke} needed to use them. Each MicroEMACS command has a name, and most of them are {\ul bound}{\v Binding}
 to a sequence of keys. Some of them are bound to {\uldb mouse actions}{\v MouseAction}. The following commands are useful when looking for a binding:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-?}{\v Keystroke}\tab {\uldb apropos}{\v apropos}\tab looks up commands
\par \tab  \tab {\uldb describe-bindings}{\v describe_bindings}\tab lists all the bindings
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^X?}{\v Keystroke}\tab {\uldb describe-key}{\v describe_key}\tab displays the command bound to a keystroke
\par \pard\plain \s6\sa120 \f4\fs20 In this help file, when a command is mentioned, its default key binding is often shown. Note that these bindings can be {\uldb modified}{\v CustomizingCommandKeys}, in particular by the {\uldb start-up file}{\v StartupFile}.

\par Keystrokes for commands include one of several prefixes, and a command character. Command keystrokes look like these:
\par \pard\plain \s14\fi-900\li900\tqr\tx720\tx900 \f4\fs20 \tab {\ul ^A}{\v Keystroke}\tab hold down Ctrl, press 'A'
\par \tab {\ul M-A}{\v Keystroke}\tab press the {\ul meta key}{\v MetaKey}, release it and press 'A'
\par \tab {\ul ^XA}{\v Keystroke}\tab hold down Ctrl, press 'X', release, press 'A'
\par \tab {\ul ^X^A}{\v Keystroke}\tab hold down Ctrl, press 'X', release, hold Ctrl, press 'A'
\par \tab {\ul A-C}{\v Keystroke}\tab hold down Alt, press 'C'
\par \tab {\ul S-FN1}{\v Keystroke}\tab hold down Shift, press function key F1
\par \pard \s14\fi-900\li900\sa120\tqr\tx720\tx900 \tab {\ul FN^1}{\v Keystroke}\tab hold down Ctrl, press function key F1
\par \pard\plain \s6\sa120 \f4\fs20 Under Microsoft Windows, key bindings are displayed in front of {\uldb menu items}{\v UsingMenus}
, using a CUA type syntax instead of the above-mentioned one. Though this may seem inconsistent, it looks more familiar to inexperienced users and is far less cryptic when it comes to special keys (Ins, Del, Arrows...).
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 {\plain \f4\fs16\cf2 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Procedures}}{\fs16\up6  #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Procedures} }{\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2020}}{\fs16\up6  }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} procedures}}{\fs16\up6  }Procedures
\par \pard\plain \s6\sa120 \f4\fs20 {\uldb The Basics}{\v TheBasics}:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb Getting at Files}{\v GettingAtFiles}
\par {\uldb Searching and Replacing}{\v SearchingAndReplacing}
\par {\uldb Cutting and Pasting}{\v CuttingAndPasting}
\par {\uldb Using the Mouse}{\v UsingTheMouse}
\par {\uldb Using Menus}{\v UsingMenus}
\par {\uldb Customizing Command Keys}{\v CustomizingCommandKeys}
\par {\uldb Issuing Commands by Name}{\v IssuingCommands}
\par \pard \s11\li360\sa120\tx2880 {\uldb The Outside World}{\v TheOutsideWorld}
\par \pard\plain \s6\sa120 \f4\fs20 Juggling:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb Buffers}{\v Buffers}
\par {\uldb Regions}{\v Regions}
\par {\uldb Paragraphs}{\v Paragraphs}
\par {\uldb Words}{\v Words}
\par {\uldb Screens}{\v Screens}
\par {\uldb Windows}{\v Windows}
\par {\uldb Setting Colors}{\v Colors}
\par \pard \s11\li360\sa120\tx2880 {\uldb Setting the Font}{\v Fonts}
\par \pard\plain \s6\sa120 \f4\fs20 Advanced topics:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb Case Control}{\v CaseControl}
\par {\uldb Undoing Your Edits}{\v UndoingYourEdits}
\par {\uldb Controlling Tabs}{\v ControllingTabs}
\par {\uldb Repetitive Tasks}{\v RepetitiveTasks}
\par {\uldb Narrowing Your Scope}{\v NarrowingYourScope}
\par {\uldb Creating New Commands}{\v CreatingNewCommands}
\par \pard \s11\li360\sa120\tx2880 {\uldb Customizing Menus}{\v CustomizingMenus}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} The Basics}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} TheBasics}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\up6 +} Procedures:010}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} basics;introduction}} The Basics
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS is a very powerful tool to use for editing text files. It has many {\ul commands}{\v Command}, options and features to let you do
 just about anything you can imagine with text. But don't let this apparent complexity keep you from using it.... MicroEMACS can also be very simple.
\par To start editing text, all the keys you really need to know are the arrow keys. These keys let you move around in your file.
\par MicroEMACS also works by using control keys. Here are a few basic commands:
\par \pard\plain \s14\fi-900\li900\tqr\tx720\tx900 \f4\fs20 \tab {\ul ^P}{\v Keystroke}\tab Move upward
\par \tab {\ul ^B}{\v Keystroke}\tab Move backward
\par \tab {\ul ^F}{\v Keystroke}\tab Move forward
\par \tab {\ul ^N}{\v Keystroke}\tab Move downward
\par \tab {\ul ^X^S}{\v Keystroke}\tab Save your file
\par \pard \s14\fi-900\li900\sa120\tqr\tx720\tx900 \tab {\ul ^X^C}{\v Keystroke}\tab Exit MicroEMACS
\par \pard\plain \s6\sa120 \f4\fs20 A hat sign "{\b ^}" before a key means to hold the Ctrl key down and press the next character. For example, to exit MicroEMACS, hold down the Ctrl key and strike X and then C.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Getting at Files}}{\plain \f4\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} GettingAtFiles}
} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:020}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} file;open;save;read;write}} Getting at Files
\par \pard\plain \s6\sa120 \f4\fs20 The way you edit a file within MicroEMACS is by first reading it into a {\ul buffer}{\v\ul Buffer}, altering it and then saving it. Therefore, the most commonly used {\ul commands}{\v Command} to access files are:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X^F}{\v Keystroke}\tab {\uldb find-file}{\v find_file}\tab to read a file from disk for editing
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^X^S}{\v Keystroke}\tab {\uldb save-file}{\v save_file}\tab to save an edited file to disk
\par \pard\plain \s6\sa120 \f4\fs20 Other read commands are:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X^I}{\v Keystroke}\tab {\uldb insert-file}{\v insert_file}\tab to insert at the {\ul point}{\v Point}
\par \tab {\ul ^X^R}{\v Keystroke}\tab {\uldb read-file}{\v read_file}\tab to replace the whole buffer contents
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^X^V}{\v Keystroke}\tab {\uldb view-file}{\v view_file}\tab to read for viewing, preventing any alterations
\par \pard\plain \s6\sa120 \f4\fs20 To save a buffer to another file than the one MicroEMACS would normally access, use:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X^W}{\v Keystroke}\tab {\uldb write-file}{\v write_file}\tab to overwrite the file's previous contents
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^X^A}{\v Keystroke}\tab {\uldb append-file}{\v append_file}\tab to append to the end of the file
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Searching and Replacing}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SearchingAndReplacing}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:030}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} search;replace}} Searching and Replacing
\par \pard\plain \s6\sa120 \f4\fs20 Commands for searching for and replacing strings come in a number of different flavors. The simplest {\ul command}{\v Command} is:
\par \pard\plain \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^S}{\v Keystroke}\tab {\uldb search-forward}{\v search_forward}
\par \pard\plain \s6\sa120 \f4\fs20 Following that, you can search for yet another occurrence of the same string by using:
\par \pard\plain \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul A-S}{\v Keystroke}\tab {\uldb hunt-forward}{\v\uldb hunt_forward}
\par \pard\plain \s6\sa120 \f4\fs20 You can also search towards the beginning of the file instead of towards the end by using:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^R}{\v Keystroke}\tab {\uldb search-reverse}{\v\uldb search_reverse}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul A-R}{\v Keystroke}\tab {\uldb hunt-backward}{\v\uldb hunt_backward}
\par \pard\plain \s6\sa120 \f4\fs20 To replace strings, use:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-R}{\v Keystroke}\tab {\uldb replace-string}{\v\uldb replace_string}\tab to replace all occurrences
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul M-^R}{\v Keystroke}\tab {\uldb query-replace-string}{\v\uldb query_replace_string}\tab to get queried for each replacement{\uldb 
\par }\pard\plain \s6\sa120 \f4\fs20 MicroEMACS also supports incremental searching:
\par \pard\plain \s3\fi-3600\li3600\tqr\tx720\tx900\tx3600 \f4\fs20 \tab {\ul ^XS}{\v Keystroke}\tab {\uldb incremental-search}{\v incremental_search}\tab towards the beginning
\par \pard \s3\fi-3600\li3600\sa120\tqr\tx720\tx900\tx3600 \tab {\ul ^XR}{\v Keystroke}\tab {\uldb reverse-incremental-search}{\v reverse_incremental_search}\tab towards the end
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Cutting and Pasting}}{\plain \f4\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 CuttingAndPasting}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:040}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} cut;paste;move;kill;copy;clipboard}} Cutting and Pasting
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS allows you to manipulate text by blocks of any size. You can {\uldb copy}{\v CopyingText} or {\uldb move}{\v MovingText} text within MicroEMACS through the {\ul kill buffer}{\v\ul KillBuffer}.
\par Under Microsoft Windows, you can also exchange text with other Windows applications via the {\ul clipboard}{\v Clipboard}, using the {\uldb cut-region}{\v\uldb cut_region}, {\uldb clip-region}{\v\uldb clip_region} and {\uldb insert-clip}{\v\uldb 
insert_clip} commands.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Moving Text}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MovingText} +{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 +} CuttingAndPasting:movingtext} }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} move}}{\fs16\up6  }Moving Text
\par \pard\plain \s6\sa120 \f4\fs20 To move text from one place to another:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 1.\tab Move to the beginning of the text you want to move.
\par 2.\tab Set the {\ul mark}{\v\ul Mark} there with the {\uldb set-mark}{\v\uldb set_mark} ({\ul M- }{\v Keystroke}) command.
\par 3.\tab Move the {\ul point}{\v\ul Point} to the end of the text.
\par 4.\tab Use the {\uldb kill-region}{\v\uldb kill_region} ({\ul ^W}{\v Keystroke}) command to delete the {\ul region}{\v region} you just defined. The text will be saved in the {\ul kill buffer}{\v\uldb KillBuffer}.
\par 5.\tab Move the point to the place you want the text to appear.
\par 6.\tab Use the {\uldb yank}{\v yank} ({\ul ^Y}{\v Keystroke}) command to copy the text from the kill buffer to the current point.
\par \pard\plain \s6\sa120 \f4\fs20 Repeat steps 5 and 6 to insert more copies of the same text.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Copying Text}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CopyingText}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} CuttingAndPasting:copyingtext}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} copy}} Copying Text
\par \pard\plain \s6\sa120 \f4\fs20 To copy text from one place to another:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 1.\tab Move to the beginning of the text you want to copy.
\par 2.\tab Set the {\ul mark}{\v\ul Mark} there with the {\uldb set-mark}{\v\uldb set_mark} ({\ul M- }{\v Keystroke}) command.
\par 3.\tab Move the {\ul point}{\v\ul Point} to the end of the text.
\par 4.\tab Use the {\uldb copy-region}{\v copy_region} ({\ul M-W}{\v Keystroke}) command to copy the {\ul region}{\v Region} to the {\ul kill buffer}{\v\uldb KillBuffer}.
\par 5.\tab Move the point to the place you want the text to appear.
\par 6.\tab Use the {\uldb yank}{\v yank} ({\ul ^Y}{\v Keystroke}) command to copy the text from the kill buffer to the current point.
\par \pard\plain \s6\sa120 \f4\fs20 Repeat steps 5 and 6 to insert more copies of the same text.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Using the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} UsingTheMouse}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:050}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mouse}} Using the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS can use the mouse to perform many basic editing tasks. Unless mouse behavior has been altered by a {\ul macro}{\v Macro}, you can perform the following actions:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb Copying a Region}{\v CopyARegion}
\par {\uldb Killing a Region}{\v KillARegion}
\par {\uldb Moving a Mode Line}{\v MovingAModeLine}
\par {\uldb Pasting Text}{\v PastingText}
\par {\uldb Repositioning the Point}{\v RepositioningThePoint}
\par \pard \s11\li360\sa120\tx2880 {\uldb Scrolling Text Inside a Window}{\v ScrollingTextInsideAWindow}
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Repositioning the Point with the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 RepositioningThePoint}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingTheMouse:repositioningthepoint}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;point;mouse}}
 Repositioning the Point with the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 Move the mouse to where you want the {\ul point}{\v Point} to be, and click once with the left mouse button and release. The point will move there, making any {\ul screen}{\v Screen} or {\ul window}{\v Window}
 active to do so.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Scrolling Text Inside a Window with the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 ScrollingTextInsideAWindow}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingTheMouse:scrollingtextinsideawindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} scroll;mouse}}
 Scrolling Text Inside a Window with the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 Position the mouse on the text to drag, press the left button, move the mouse to where to display the text (horizontally or vertically), and release the mouse button.
\par If you are using the {\uldb CUA.CMD}{\v CUA.CMD} {\ul page}{\v\ul Page} (which is usually the case under Microsoft Windows), the above action is performed by pressing the {\b right} mouse button instead of the left one.
\par Note that if you drag diagonally and the {\uldb $diagflag}{\v _diagflag} {\ul variable}{\v Variable} is set to FALSE (the default value), the text will move only in the vertical direction.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Moving a Mode Line with the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MovingAModeLine}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingTheMouse:movingamodeline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mode line;mouse}} Moving a Mode Line with the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 Position the mouse on a {\ul mode line}{\v ModeLine} (except the bottom one which cannot be moved), press the left button, move to another position and release the button. The mode line will move, resizing the {\ul windows}{
\v Window} which are above and below. 
\par If you are using the {\uldb CUA.CMD}{\v CUA.CMD} {\ul page}{\v\ul Page} (which is usually the case under Microsoft Windows), the above action is performed by pressing the {\b right} mouse button instead of the left one.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Copying a Region with the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CopyARegion}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingTheMouse:copyingaregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} copy;region;mouse}} Copying a Region with the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 Position the mouse at the beginning of the text to be copied, press the right button, move the mouse to the other end of the text, release the button. This actually makes the selected text the current {\ul region}{\v Region}
 and then copies it into the {\ul kill buffer}{\v KillBuffer}.
\par If you are using the {\uldb CUA.CMD}{\v CUA.CMD} {\ul page}{\v\ul Page} (which is usually the case under Microsoft Windows), the above action is performed by pressing the {\b Shift }key and the {\b right}
 mouse button together instead of just the right mouse button.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Killing a Region with the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} KillARegion}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingTheMouse:killingaregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} kill;delete;region;mouse}} Killing a Region with the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 After {\uldb copying a region}{\v CopyARegion}, without moving the mouse, click the right mouse button once. The text will be deleted, but it will still be kept in the {\ul kill buffer}{\v KillBuffer}. 
\par If you are using the {\uldb CUA.CMD}{\v CUA.CMD} {\ul page}{\v\ul Page} (which is usually the case under Microsoft Windows), the above action is performed by pressing the {\b Shift }key and the {\b right}
 mouse button together instead of just the right mouse button.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Pasting Text with the Mouse}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} PastingText}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingTheMouse:pastingtext}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} paste;mouse}} Pasting Text with the Mouse
\par \pard\plain \s6\sa120 \f4\fs20 Move anywhere away from the place the mouse was last clicked, and click the right button once. The last text placed in the {\ul kill buffer}{\v KillBuffer} will be inserted there.
\par If you are using the {\uldb CUA.CMD}{\v CUA.CMD} {\ul page}{\v\ul Page} (which is usually the case under Microsoft Windows), the above action is performed by pressing the {\b Shift }key and the {\b right}
 mouse button together instead of just the right mouse button.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Using Menus}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} UsingMenus}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:060}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} menu}} Using menus
\par \pard\plain \s6\sa120 \f4\fs20 Under Microsoft Windows, MicroEMACS sports an extensive menu system. Menu items can point to a pop-up menu or directly invoke a {\ul command}{\v Command} or a {\ul macro}{\v Macro}
. A few menu items are not linked to any MicroEMACS commands or macro (for instance, the "{\ul A}bout..." item in the "{\ul H}elp" menu).
\par The text of each menu item can contain the following hints:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab Items that lead to the apparition of a dialog box are followed by an ellipsis "{\b ...}".
\par \tab Items that require the user to type additional information in the {\ul message line}{\v MessageLine} are followed by a colon "{\b :}".
\par \tab Items that require a {\ul numeric argument}{\v Argument} are preceded by an equal sign "{\b =}".
\par \tab Items that are equivalent to a key {\ul binding}{\v Binding} have the corresponding key sequence displayed on the right side of the menu.
\par \pard\plain \s6\sa120 \f4\fs20 The MicroEMACS menus can be {\uldb modified}{\v CustomizingMenus} by {\uldb macros}{\v MacroLanguage} to add/remove menus or menu items. The initial menus on the menu bar are:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb File}{\v FileMenu}
\par {\uldb Edit}{\v EditMenu}
\par {\uldb Search}{\v SearchMenu}
\par {\uldb Execute}{\v ExecuteMenu}
\par {\uldb Miscellaneous}{\v MiscellaneousMenu}
\par {\uldb Screen}{\v ScreenMenu}
\par \pard \s11\li360\sa120\tx2880 {\uldb Help}{\v HelpMenu}
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} File menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} FileMenu}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:050}} File menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Open...\tab invokes the {\uldb find-file}{\v find_file} command. If the {\uldb MDI.CMD}{\v MDI.CMD} {\ul page}{\v Page} is loaded, this menu item is modified and {\ul bound}{\v Binding} to the {\uldb 
open-file}{\v open_file} {\ul macro}{\v Macro}
\par View...\tab invokes the {\uldb view-file}{\v view_file} command
\par Insert...\tab invokes the {\uldb insert-file}{\v insert_file} command
\par Read over...\tab invokes the {\uldb read-file}{\v read_file} command
\par Rename...\tab invokes the {\uldb change-file-name}{\v change_file_name} command
\par Save\tab invokes the {\uldb save-file}{\v save_file} command
\par Save as...\tab invokes the {\uldb write-file}{\v write_file} command
\par Append...\tab invokes the {\uldb append-file}{\v append_file} command
\par Encryption key :\tab invokes the {\uldb set-encryption-key}{\v set_encryption_key} command
\par {\uldb Buffer}{\v BufferSubmenu}\tab submenu
\par {\uldb Window}{\v WindowSubmenu}\tab submenu
\par Mode...\tab brings up a dialog box to change the {\uldb modes of operation}{\v ModesOfOperation} for the current {\ul buffer}{\v Buffer}.
\par Global mode...\tab brings up a dialog box to change the {\uldb global modes of operation}{\v ModesOfOperation}.
\par Save + exit\tab invokes the {\uldb quick-exit}{\v quick_exit} command
\par Exit\tab invokes the {\uldb exit-emacs}{\v exit_emacs} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Buffer submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} BufferSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} FileMenu:050}} Buffer submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb File menu}{\v FileMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Next\tab invokes the {\uldb next-buffer}{\v next_buffer} command
\par Select :\tab invokes the {\uldb select-buffer}{\v select_buffer} command
\par Unmark\tab invokes the {\uldb unmark-buffer}{\v unmark_buffer} command
\par Rename :\tab invokes the {\uldb name-buffer}{\v name_buffer} command
\par Delete :\tab invokes the {\uldb delete-buffer}{\v delete_buffer} command
\par Narrow to region\tab invokes the {\uldb narrow-to-region}{\v narrow_to_region} command
\par Widen from region\tab invokes the {\uldb widen-from-region}{\v widen_from_region} command
\par List\tab invokes the {\uldb list-buffers}{\v list_buffers} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Window submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} WindowSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} FileMenu:060}} Window submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb File menu}{\v FileMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Split\tab invokes the {\uldb split-current-window}{\v split_current_window} command
\par Delete\tab invokes the {\uldb delete-window}{\v delete_window} command
\par Delete others\tab invokes the {\uldb delete-other-windows}{\v delete_other_windows} command
\par Next\tab invokes the {\uldb next-window}{\v next_window} command
\par Previous\tab invokes the {\uldb previous-window}{\v previous_window} command
\par {\uldb Scroll}{\v ScrollSubmenu}\tab submenu
\par {\uldb Size}{\v WSizeSubmenu}\tab submenu
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Window Scroll submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ScrollSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} WindowSubmenu:050}} Window Scroll submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Window submenu}{\v WindowSubmenu} of the {\uldb File menu}{\v FileMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 = Up\tab invokes the {\uldb move-window-up}{\v move_window_up} command
\par = Down\tab invokes the {\uldb move-window-down}{\v move_window_down} command
\par = Next up\tab invokes the {\uldb scroll-next-up}{\v scroll_next_up} command
\par = Next down\tab invokes the {\uldb scroll-next-down}{\v scroll_next_down} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Window Size submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} WSizeSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} WindowSubmenu:060}} Window Size submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Window submenu}{\v WindowSubmenu} of the {\uldb File menu}{\v FileMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 = Grow\tab invokes the {\uldb grow-window}{\v grow_window} command
\par = Shrink\tab invokes the {\uldb shrink-window}{\v shrink_window} command
\par = Height\tab invokes the {\uldb resize-window}{\v resize_window} command
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Edit menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} EditMenu}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:060}} Edit menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 {\uldb Clipboard}{\v ClipboardSubmenu}\tab submenu
\par {\uldb Mark}{\v MarkSubmenu}\tab submenu
\par Yank\tab invokes the {\uldb yank}{\v yank} command
\par {\uldb Region}{\v RegionSubmenu}\tab submenu
\par {\uldb Paragraph}{\v EParagraphSubmenu}\tab submenu
\par {\uldb Line}{\v ELineSubmenu}\tab submenu
\par {\uldb Word}{\v EWordSubmenu}\tab submenu
\par Delete blank lines\tab invokes the {\uldb delete-blank-lines}{\v delete_blank_lines} command
\par Transpose characters\tab invokes the {\uldb transpose-characters}{\v transpose_characters} command
\par Tab\tab invokes the {\uldb handle-tab}{\v handle_tab} command
\par Quote\tab invokes the {\uldb quote-character}{\v quote_character} command
\par = Fill column\tab Resets the {\uldb $fillcol variable}. The {\uldb emacs.rc}{\v StartupFile} {\ul page}{\v Page} modifies this menu item slightly so that it prompts you for the fill column value.
\par \pard\plain \s6\sa120 \f4\fs20 If the {\uldb CUA.CMD}{\v CUA.CMD} page is loaded, the menu is modified by the addition of the following item (before "Region"):
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 {\uldb Selection}{\v SelectionSubmenu}\tab submenu
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Clipboard submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ClipboardSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:010}} Clipboard submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Edit menu}{\v EditMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Cut region\tab invokes the {\uldb cut-region}{\v cut_region} command
\par Copy region\tab invokes the {\uldb clip-region}{\v clip_region} command
\par Paste\tab invokes the {\uldb insert-clip}{\v insert_clip} command
\par \pard\plain \s6\sa120 \f4\fs20 If the {\uldb CUA.CMD}{\v CUA.CMD} page is loaded, the menu is modified and, instead, contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Cut\tab deletes and copies to the {\ul clipboard}{\v Clipboard} the text contained in the current {\ul selection}{\v Selection}
\par Copy\tab copies (without deleting) to the clipboard the text contained in the selection
\par Paste\tab inserts the text from the clipboard at the {\ul point}{\v Point}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Mark submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MarkSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:020}} Mark submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Edit menu}{\v EditMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Set\tab invokes the {\uldb set-mark}{\v set_mark} command
\par Remove\tab invokes the {\uldb remove-mark}{\v remove_mark} command
\par Exchange\tab invokes the {\uldb exchange-point-and-mark}{\v exchange_point_and_mark} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Selection submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SelectionSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:025}} Selection submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Edit menu}{\v EditMenu} when the {\uldb CUA.CMD}{\v CUA.CMD} {\ul page}{\v Page} is loaded. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Upper case\tab converts all the {\ul selected}{\v Selection} text to upper case
\par Lower case\tab converts all the selected text to lower case
\par Count words\tab displays on the {\ul message line}{\v MessageLine} the number of words, characters and lines that compose the selected text
\par Flip\tab exchanges the {\ul point}{\v Point} with the other end of the selection
\par Select region\tab makes the current {\ul region}{\v Region} the current selection
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Region submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} RegionSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:030}} Region submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Edit menu}{\v EditMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Kill\tab invokes the {\uldb kill-region}{\v kill_region} command
\par Copy\tab invokes the {\uldb copy-region}{\v copy_region} command
\par Upper case\tab invokes the {\uldb case-region-upper}{\v case_region_upper} command
\par Lower case\tab invokes the {\uldb case-region-lower}{\v case_region_lower} command
\par Entab\tab invokes the {\uldb entab-region}{\v entab_region} command
\par Detab\tab invokes the {\uldb detab-region}{\v detab_region} command
\par Trim\tab invokes the {\uldb trim-region}{\v trim_region} command
\par Indent\tab invokes the {\uldb indent-region}{\v indent_region} command
\par Undent\tab invokes the {\uldb undent-region}{\v undent_region} command
\par Count words\tab invokes the {\uldb count-words}{\v count_words} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Edit Paragraph submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} EParagraphSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:040}} Edit Paragraph submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Edit menu}{\v EditMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Kill\tab invokes the {\uldb kill-paragraph}{\v kill_paragraph} command
\par Fill\tab invokes the {\uldb fill-paragraph}{\v fill_paragraph} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Edit Line submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ELineSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:050}} Edit Line submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Edit menu}{\v EditMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Kill to end\tab invokes the {\uldb kill-to-end-of-line}{\v kill_to_end_of_line} command
\par Open\tab invokes the {\uldb open-line}{\v open_line} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Edit Word submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} EWordSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} EditMenu:060}} Edit Word submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Kill next\tab invokes the {\uldb delete-next-word}{\v delete_next_word} command
\par Kill previous\tab invokes the {\uldb delete-previous-word}{\v delete_previous_word} command
\par Capitalize\tab invokes the {\uldb case-word-capitalize}{\v case_word_capitalize} command
\par Lower case\tab invokes the {\uldb case-word-lower}{\v case_word_lower} command
\par Upper case\tab invokes the {\uldb case-word-upper}{\v case_word_upper} command
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Search menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SearchMenu}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:070}} Search menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Search forward :\tab invokes the {\uldb search-forward}{\v search_forward} command
\par Search backward :\tab invokes the {\uldb search-reverse}{\v search_reverse} command
\par Hunt forward\tab invokes the {\uldb hunt-forward}{\v hunt_forward} command
\par Hunt backward\tab invokes the {\uldb hunt-backward}{\v hunt_backward} command
\par Incremental search :\tab invokes the {\uldb incremental-search}{\v incremental_search} command
\par Reverse incremental :\tab invokes the {\uldb reverse-incremental-search}{\v reverse_incremental_search} command
\par Replace :\tab invokes the {\uldb replace-string}{\v replace_string} command
\par Query replace :\tab invokes the {\uldb query-replace-string}{\v query_replace_string} command
\par {\uldb Goto}{\v GotoSubmenu}\tab submenu
\par {\uldb Page}{\v PageSubmenu}\tab submenu
\par {\uldb Paragraph}{\v SParagraphSubmenu}\tab submenu
\par {\uldb Line}{\v SLineSubmenu}\tab submenu
\par {\uldb Word}{\v SWordSubmenu}\tab submenu
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Goto submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} GotoSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} SearchMenu:010}} Goto submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Search menu}{\v SearchMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Mark\tab invokes the {\uldb goto-mark}{\v goto_mark} command
\par Line\tab invokes the {\uldb goto-line}{\v goto_line} command
\par Matching fence\tab invokes the {\uldb goto-matching-fence}{\v goto_matching_fence} command
\par Beginning of file\tab invokes the {\uldb beginning-of-file}{\v beginning_of_file} command
\par End of file\tab invokes the {\uldb end-of-file}{\v end_of_file} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Page submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} PageSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} SearchMenu:020}} Page submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Search menu}{\v SearchMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Next\tab invokes the {\uldb next-page}{\v next_page} command
\par Previous\tab invokes the {\uldb previous-page}{\v previous_page} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Search Paragraph submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SParagraphSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} SearchMenu:030}} Search Paragraph submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Search menu}{\v SearchMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Next\tab invokes the {\uldb next-paragraph}{\v next_paragraph} command
\par Previous\tab invokes the {\uldb previous-paragraph}{\v previous_paragraph} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Search Line submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SLineSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} SearchMenu:040}} Search Line submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Search menu}{\v SearchMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Next\tab invokes the {\uldb next-line}{\v next_line} command
\par Previous\tab invokes the {\uldb previous-line}{\v previous_line} command
\par Beginning of\tab invokes the {\uldb beginning-of-line}{\v beginning_of_line} command
\par End of\tab invokes the {\uldb end-of-line}{\v end_of_line} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Search Word submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SWordSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} SearchMenu:050}} Search Word submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Search menu}{\v SearchMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Next\tab invokes the {\uldb next-word}{\v next_word} command
\par Previous\tab invokes the {\uldb previous-word}{\v previous_word} command
\par End of\tab invokes the {\uldb end-of-word}{\v end_of_word} command
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Execute menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ExecuteMenu}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:080}} Execute menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Windows program :\tab invokes the {\uldb execute-program}{\v execute_program} command
\par Shell program :\tab invokes the {\uldb shell-command}{\v shell_command} command
\par Pipe-in :\tab invokes the {\uldb pipe-command}{\v pipe_command} command
\par Filter :\tab invokes the {\uldb filter-buffer}{\v filter_buffer} command
\par Shell\tab invokes the {\uldb i-shell}{\v i_shell} command
\par {\uldb EMACS command}{\v EmacsCommandSubmenu}\tab submenu
\par {\uldb Keyboard macro}{\v KeyboardMacroSubmenu}\tab submenu
\par Abort command\tab invokes the {\uldb abort-command}{\v abort_command} command
\par \pard\plain \s6\sa120 \f4\fs20 If the {\uldb DEV.CMD}{\v DEV.CMD} {\ul page}{\v Page} is loaded, the menu is modified by the addition of the following item:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Make\tab invokes the {\uldb run-makefile}{\v run_makefile} macro.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} EMACS command submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} EMACSCOMMANDSUBMENU}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} ExecuteMenu:050}} EMACS command submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Execute menu}{\v ExecuteMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Named command :\tab invokes the {\uldb execute-named-command}{\v execute_named_command} command
\par Command line :\tab invokes the {\uldb execute-command-line}{\v execute_command_line} command
\par Procedure :\tab invokes the {\uldb execute-procedure}{\v execute_procedure} command
\par Buffer :\tab invokes the {\uldb execute-buffer}{\v execute_buffer} command
\par File...\tab invokes the {\uldb execute-file}{\v execute_file} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Keyboard macro submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} KeyboardMacroSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} ExecuteMenu:060}} Keyboard macro submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Execute menu}{\v ExecuteMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Play\tab invokes the {\uldb execute-macro}{\v execute_macro} command
\par Start recording\tab invokes the {\uldb begin-macro}{\v begin_macro} command
\par End recording\tab invokes the {\uldb end-macro}{\v end_macro} command
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Miscellaneous menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MiscellaneousMenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:090}} Miscellaneous menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 {\uldb Key bindings}{\v KeyBindingsSubmenu}\tab submenu
\par {\uldb Menu bindings}{\v MenuBindingsSubmenu}\tab submenu
\par {\uldb Variable}{\v Variable}\tab submenu
\par Show position\tab invokes the {\uldb buffer-position}{\v buffer_position} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Key bindings submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} KeyBindingsSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} MiscellaneousMenu:050}} Key bindings submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Miscellaneous menu}{\v MiscellaneousMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Bind to Command\tab invokes the {\uldb bind-to-key}{\v bind_to_key} command
\par Bind to Macro\tab invokes the {\uldb macro-to-key}{\v macro_to_key} command
\par Unbind\tab invokes the {\uldb unbind-key}{\v unbind_key} command
\par Describe key\tab invokes the {\uldb describe-key}{\v describe_key} command
\par List\tab invokes the {\uldb describe-bindings}{\v describe_bindings} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Menu bindings submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MenuBindingsSubmenu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} MiscellaneousMenu:060}} Menu bindings submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Miscellaneous menu}{\v MiscellaneousMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Bind to Command\tab invokes the {\uldb bind-to-menu}{\v bind_to_menu} command
\par Bind to Macro\tab invokes the {\uldb macro-to-menu}{\v macro_to_menu} command
\par Unbind\tab invokes the {\uldb unbind-menu}{\v unbind_menu} command
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Variable submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} VariableSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} MiscellaneousMenu:070}} Variable submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Miscellaneous menu}{\v MiscellaneousMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Set\tab invokes the {\uldb set}{\v set} command
\par Display\tab invokes the {\uldb display}{\v display} command
\par List\tab invokes the {\uldb describe-variables}{\v describe_variables} command
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Screen menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ScreenMenu}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:100}} Screen menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Cascade\tab invokes the {\uldb cascade-screens}{\v cascade_screens} command
\par {\uldb Tile}{\v TileSubmenu}\tab submenu
\par Arrange Icons\tab causes iconized {\ul screens}{\v Screen} to be rearranged at the bottom left of the MicroEMACS frame window.
\par Open\tab invokes the {\uldb find-screen}{\v find_screen} command
\par Rename\tab invokes the {\uldb rename-screen}{\v rename_screen} command
\par {\uldb Size}{\v SSizeSubmenu}\tab submenu
\par Font...\tab brings up a dialog box to {\uldb change the font}{\v Fonts} used by MicroEMACS
\par \pard\plain \s6\sa120 \f4\fs20 If the {\uldb MDI.CMD}{\v MDI.CMD} {\ul page}{\v Page} is loaded, the menu is modified by the addition of the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Rebuild\tab rebuilds the set of screens, to have a screen associated with each editing {\ul buffer}{\v Buffer}
\par Kill\tab deletes the current screen and release the corresponding buffer.
\par \pard\plain \s6\sa120 \f4\fs20 Additional items are added dynamically at the end of the "Screen" menu, listing the available screens. This allows quick switching between those screens.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Tile submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} TileSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} ScreenMenu:050}} Tile submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Screen menu}{\v ScreenMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Horizontally\tab causes all non-iconic {\ul screens}{\v Screen} to be rearranged in a tiling scheme, side by side if possible
\par Vertically\tab causes all non-iconic screens to be rearranged in a tiling scheme, on top of each other if possible
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Screen Size submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} SSizeSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} ScreenMenu:060}} Screen Size submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Screen menu}{\v ScreenMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 = Height\tab invokes the {\uldb change-screen-size}{\v change_screen_size} command
\par = Width\tab invokes the {\uldb change-screen-width}{\v change_screen_width} command
\par Normalize\tab causes the current {\ul screens}{\v Screen} to be resized so that it is as small as possible while retaining the same height and width in characters.
\par \pard\plain \s6\sa120 \f4\fs20 If the {\uldb MDI.CMD}{\v MDI.CMD} {\ul page}{\v Page} is loaded, the menu is modified by the replacement of "= Height" and "= Width" by the following item:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Set:\tab prompts you for the width and height of the screen, supplying the current values as defaults.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Help menu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} HelpMenu}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} UsingMenus:110}} Help menu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Index\tab brings up this help file, on the {\uldb main index}{\v MainIndex}.
\par Keyboard\tab brings up this help file, on the {\uldb keyboard}{\v Keyboard} topic
\par Commands\tab brings up this help file, on the {\uldb commands}{\v Commands} topic
\par Procedures\tab brings up this help file, on the {\uldb procedures}{\v Procedures} topic
\par {\uldb List}{\v ListSubmenu}\tab submenu
\par Apropos :\tab invokes the {\uldb apropos}{\v apropos} command
\par Describe key :\tab invokes the {\uldb describe-key}{\v describe_key} command
\par Display variable :\tab invokes the {\uldb display}{\v display} command
\par About...\tab brings up a dialog box giving some information about MicroEMACS and the people involved in its making.
\par \pard\plain \s6\sa120 \f4\fs20 If the {\uldb DEV.CMD}{\v DEV.CMD} {\ul page}{\v Page}
 is loaded, the menu is modified by the addition of items (before "List") that invoke the Windows help engine for, respectively, Windows 3.0, Windows 3.1 or Win32 Software Development Kits or for Turbo C++. Each of those attempt to select a help topic bas
ed on the word currently at the {\ul point}{\v Point}. You can eliminate the undesired items among these by editing the {\f27\fs18 macro-to-menu} commands in the DEV.CMD file.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} List submenu}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ListSubmenu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} HelpMenu:050}} List submenu
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb menu}{\v UsingMenus} is accessed via the {\uldb Help menu}{\v HelpMenu}. It contains the following items:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 Key bindings\tab invokes the {\uldb describe-bindings}{\v describe_bindings} command
\par Functions\tab invokes the {\uldb describe-functions}{\v describe_functions} command
\par Variables\tab invokes the {\uldb describe-variables}{\v describe_variables} command
\par Buffers\tab invokes the {\uldb list-buffers}{\v list_buffers} command
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Customizing Command Keys}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 CustomizingCommandKeys}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:070}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} keyboard;binding;command;macro}} Customizing Command Keys
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS lets you decide what keys activate what {\ul command}{\v Command} or {\ul macro}{\v Macro} through the use of: 
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-K}{\v Keystroke}\tab {\uldb bind-to-key}{\v bind_to_key}
\par \tab {\ul ^X^K}{\v Keystroke}\tab {\uldb macro-to-key}{\v macro_to_key}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul M-^K}{\v Keystroke}\tab {\uldb unbind-key}{\v unbind_key}
\par \pard\plain \s6\sa120 \f4\fs20 These commands can be used to permanently change your key {\ul bindings}{\v Binding} by placing them in your start up file. For example, if you have one of those nasty keyboards with a tilde "{\b ~}" i
n the upper left corner, where the Escape key should be, and you want the tilde to become the {\ul meta key}{\v MetaKey}, add this line to {\uldb emacs.rc}{\v StartupFile}: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 bind-to-key   meta-prefix   ~
\par \pard\plain \s6\sa120 \f4\fs20 You can use this to make MicroEMACS feel similar to another editor by changing what keys activate which commands. 
\par The {\uldb unbind-key}{\v unbind_key} command is useful if you have a function key you keep tripping over, or if you are trying to make MicroEMACS look like a much more minimalist editor. 
\par You can get a list of all the key bindings that MicroEMACS uses by using the {\uldb describe-bindings}{\v describe_bindings} command. Just do {\ul M-X}{\v Keystroke} and type:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 describe-bindings
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Issuing Commands}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} IssuingCommands}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:080}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} command}} Issuing Commands
\par \pard\plain \s6\sa120 \f4\fs20 {\ul Commands}{\v Command} within MicroEMACS have descriptive names which you can use to invoke them, or {\ul bind}{\v Binding} them to a {\uldb keystroke}{\v Keyboard} or a {\uldb menu}{\v UsingMenus}
. To invoke one of these commands by name, you can use: 
\par \pard\plain \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-X}{\v Keystroke}\tab {\uldb execute-named-command}{\v execute_named_command}
\par \pard\plain \s6\sa120 \f4\fs20 You can supply {\uldb numeric arguments}{\v NumericArguments} to a such a command by prefixing it. You can also use a {\uldb command line}{\v CommandLines} invocation.
\par To get a list of all the commands in your current MicroEMACS, do {\ul M-X}{\v Keystroke} and type: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 describe-bindings
\par \pard\plain \s6\sa120 \f4\fs20 The {\uldb describe-bindings}{\v describe_bindings} command will display a paged list of all legal commands and the keystrokes to use to invoke them. 
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Interactive Numeric Arguments}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} NumericArguments}} 
{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} repeat;argument}} Interactive Numeric Arguments
\par \pard\plain \s6\sa120 \f4\fs20 Some {\ul commands}{\v Command} take a number as an argument. For example, to move to a particular line within a file, you use the {\uldb goto-line}{\v goto_line} ({\ul M-G}{\v Keystroke}
) command. To go to a particular line, precede the command with a number by striking the {\ul meta key}{\v MetaKey}, typing a number, and then the keys {\ul bound}{\v Binding} to the command. To go to the 123rd line of a file, use: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\i Meta} 123   {\i Meta} g
\par \pard\plain \s6\sa120 \f4\fs20 If a command does not need a numeric argument, it is usually taken as a repeat count. This also works when typing any character. To make a line of 50 dashes type: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\i Meta} 50   -
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Command Lines}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CommandLines}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} :commandlines}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} command}} Command Lines
\par \pard\plain \s6\sa120 \f4\fs20 {\uldb execute-command-line}{\v execute_command_line} ({\ul M-^X}{\v Keystroke}) lets you type in a full command line. MicroEMACS {\ul macros}{\v Macro}
 are made from sequences of these command lines. A command line has three parts: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\i Numeric argument   Command   Arguments}
\par \pard\plain \s6\sa120 \f4\fs20 The numeric argument is optional and has the same effect as an {\uldb interactive numeric argument}{\v NumericArguments} prefixing an interactive invocation of the same command.
\par {\uldb Arguments}{\v Arguments} following the command are not always required. If needed arguments have been omitted, the user will be prompted for them on the {\ul message line}{\v MessageLine}.
\par To insert the string "<*><*><*>" at the {\ul point}{\v Point}, do {\ul M-^X}{\v Keystroke} and then: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 3   insert-string   "<*>"
\par \pard\plain \s6\sa120 \f4\fs20 or to set the current fill column to 64, do {\ul M-^X}{\v Keystroke} and then: 
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 64   set $fillcol
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} The Outside World}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} TheOutsideWorld}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:090}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute;spawn;filter;pipe;shell;DOS}} The Outside World
\par \pard\plain \s6\sa120 \f4\fs20 The following commands let you interact with the Operating System or with other applications:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X^C}{\v Keystroke}\tab {\uldb exit-emacs}{\v exit_emacs}\tab terminates MicroEMACS
\par \tab {\ul M-Z}{\v Keystroke}\tab {\uldb quick-exit}{\v quick_exit}\tab same as above, but saves all changed {\ul buffers}{\v Buffer} first
\par \tab {\ul ^X!}{\v Keystroke}\tab {\uldb shell-command}{\v shell_command}\tab executes a program within an Operating System "shell"
\par \tab {\ul ^X$}{\v Keystroke}\tab {\uldb execute-program}{\v execute_program}\tab launches another application
\par \tab {\ul ^X@}{\v Keystroke}\tab {\uldb pipe-command}{\v pipe_command}\tab pipes a program's output into a buffer
\par \tab {\ul ^X#}{\v Keystroke}\tab {\uldb filter-buffer}{\v filter_buffer}\tab filters a buffer through a program
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^XC}{\v Keystroke}\tab {\uldb i-shell}{\v i_shell}\tab opens an Operating System "shell"
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Synchronizing With Another Program}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 SynchronizingWithADosBox}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} DOS;pipe;filter;synchronize}} Synchronizing With Another Program
\par \pard\plain \s6\sa120 \f4\fs20 When the {\uldb pipe-command}{\v pipe_command} or the {\uldb filter-buffer}{\v filter_buffer} commands are used under Microsoft Windows, MicroEMACS creates a {\ul DOS box}{\v DosBox}
 (or "shell box" under Windows NT) and waits for it to terminate.Also, if the {\uldb execute-program}{\v execute_program} or the {\uldb shell-command}{\v shell_command} command is invoked with a {\ul numeric argument}{\v Argument}
, MicroEMACS waits for the launched application to terminate.
\par You can cancel the wait by pressing the Esc key or clicking on the "Cancel" button. Note that doing so does not terminate the other program.
\par For synchronization to work with a DOS box, the {\uldb DOSExec profile}{\v DosExecProfile} must be set properly. Under Windows NT, shell boxes can be parametrized by setting the {\uldb Shell}{\v ShellProfile} and the {\uldb ShellExecOption}{\v 
ShellProfile} profiles.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Buffers}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Buffers}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:100}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} buffer}} Buffers
\par \pard\plain \s6\sa120 \f4\fs20 A buffer is where MicroEMACS stores text. Normally that text is read from a file, and is visible in an editing {\ul window}{\v Window}. But text stored in buffers can also be MicroEMACS {\ul macros}{\v Macro}
, temporary storage for macros, or lists of {\ul screens}{\v Screen}, files, buffers, {\ul variables}{\v Variables}, {\ul commands}{\v Command} or {\ul bindings}{\v Binding} created by MicroEMACS commands. Commands that deal with buffers include: \tab 

\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^XB}{\v Keystroke}\tab {\uldb select-buffer}{\v select_buffer}
\par \tab {\ul ^XK}{\v Keystroke}\tab {\uldb delete-buffer}{\v delete_buffer}
\par \tab {\ul ^X^B}{\v Keystroke}\tab {\uldb list-buffers}{\v list_buffers}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^XX}{\v Keystroke}\tab {\uldb next-buffer}{\v next_buffer}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Regions}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Regions}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:110}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} region}} Regions
\par \pard\plain \s6\sa120 \f4\fs20 Regions are used in MicroEMACS to specify what text is acted on by many {\ul commands}{\v Command}. A region is defined as all the text between the {\ul point}{\v\ul Point}, and the last placed {\ul mark}{\v\ul Mark}
. To define a region:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 1.\tab Move the point to the beginning of the text you want to effect
\par 2.\tab Use the {\uldb set-mark}{\v\uldb set_mark} ({\ul M- }{\v Keystroke}) command to position the mark at the current point
\par 3.\tab Move the point to the end of the text you want to affect
\par \pard\plain \s6\sa120 \f4\fs20 At this time, the text between the mark and the point is the current region which will be affected by many commands. Regions can be defined backwards as well as forwards, and can include the entire {\ul buffer}{\v Buffer}
, or as little as one character.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Paragraphs}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Paragraphs}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:120}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} paragraph}} Paragraphs
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS defines a paragraph as any group of lines of text surrounded by blank lines. A line starting with one of the characters in the {\uldb $paralead}{\v _paralead} {\ul variable}{\v Variable}
 is considered the first line of a paragraph. Also, if line starts with one of the characters in the {\uldb $fmtlead}{\v _fmtlead} variable, the following line is considered to be the beginning of a paragraph.
\par {\ul Commands}{\v command} that deal with paragraphs include:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-N}{\v Keystroke}\tab {\uldb next-paragraph}{\v next_paragraph}
\par \tab {\ul M-P}{\v Keystroke}\tab {\uldb previous-paragraph}{\v previous_paragraph}
\par \tab {\ul M-^W}{\v Keystroke}\tab {\uldb kill-paragraph}{\v kill_paragraph}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul M-Q}{\v Keystroke}\tab {\uldb fill-paragraph}{\v fill_paragraph}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Words}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Words}} {\fs16\up6 +{\footnote \pard\plain 
\s245 \f4\fs20 {\fs16\up6 +} Procedures:130}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} word}} Words
\par \pard\plain \s6\sa120 \f4\fs20 Words are defined, by default, as a string of characters consisting of alphabetic, numeral and the underscore "{\b _}" character. You can change this by setting the {\uldb $wchars}{\v _wchars} {\ul variable}{\v Variable}
 to a list of all the characters you want considered as part of a word. 
\par The commands that deal with words include: 
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-F}{\v Keystroke}\tab {\uldb next-word}{\v next_word}
\par \tab {\ul M-B}{\v Keystroke}\tab {\uldb previous-word}{\v previous_word}
\par \tab {\ul M-D}{\v Keystroke}\tab {\uldb delete-next-word}{\v delete_next_word}
\par \tab {\ul M-^H}{\v Keystroke}\tab {\uldb delete-previous-word}{\v delete_previous_word}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul M-^C}{\v Keystroke}\tab {\uldb count-words}{\v count_words}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Screens}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Screens}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:140}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} screen}} Screens
\par \pard\plain \s6\sa120 \f4\fs20 A screen is a collection of {\ul windows}{\v Window}
 which are displayed together. On some non-graphically oriented systems, only one screen is displayed at a time. Under other graphical oriented operating systems like Microsoft Windows, X-Windows, the Macintosh or the Amiga, each screen may be displayed i
n an operating system "window". Notice that the MicroEMACS usage of the word window is different from the meaning used in these graphical systems:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\ul MicroEMACS}{\b \tab }{\ul Operating System} {\b  }
\par Window\tab Pane
\par \pard \s11\li360\sa120\tx2880 Screen\tab Window
\par \pard\plain \s6\sa120 \f4\fs20 Each screen has its own set of {\uldb windows}{\v Windows}. Switching from one screen to another (for instance by clicking on that screen) will preserve the window setup, the colors and the {\ul buffers}{\v Buffer}
 being displayed.
\par When MicroEMACS starts up, it displays a single screen named "MAIN". Extra screens can be created by the command:
\par \pard\plain \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul A-F}{\v Keystroke}\tab {\uldb find-screen}{\v find_screen}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Windows}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Windows}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:150}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} window}} Windows
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS uses windows to display and allow you to edit the contents of {\ul buffers}{\v Buffer}. A single {\ul screen}{\v Screen} will show one or more windows, separated by a {\ul mode line}{\v ModeLine}
 which describes the contents of the window above it.
\par You can scroll text vertically and horizontally within a window by using the arrow keys or the page-up, page-down, home and end keys. Note that if a line of text extends beyond the boundary of a window, a dollar "{\b $}
" sign is displayed instead of the last visible character.
\par Here are some window-related commands: 
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X2}{\v Keystroke}\tab {\uldb split-current-window}{\v split_current_window}
\par \tab {\ul ^X1}{\v Keystroke}\tab {\uldb delete-other-windows}{\v delete_other_windows}
\par \tab {\ul ^X0}{\v Keystroke}\tab {\uldb delete-window}{\v delete_window}
\par \tab {\ul ^XO}{\v Keystroke}\tab {\uldb next-window}{\v next_window}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^XP}{\v Keystroke}\tab {\uldb previous-window}{\v previous_window}
\par \pard\plain \s6\sa120 \f4\fs20 Notice that the MicroEMACS usage of the word window is different from the meaning used in graphical systems:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\ul MicroEMACS}\tab {\ul Operating System}
\par Window\tab Pane
\par Screen\tab Window
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Setting Colors}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Colors}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:160}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} color}} Setting Colors
\par \pard\plain \s6\sa120 \f4\fs20 On systems which are capable of displaying colors, the mode commands can be used to set the background and foreground character colors. Using {\uldb add-mode}{\v add_mode} ({\ul ^XM}{\v Keystroke}) or {\uldb delete-mode}{\v 
delete_mode} ({\ul ^X^M}{\v Keystroke}) and typing a lowercase color will set the background color in the current window. An uppercase color will set the foreground color in the current window.
\par In a similar manner, {\uldb add-global-mode}{\v add_global_mode} ({\ul M-M}{\v Keystroke}) and {\uldb delete-global-mode}{\v delete_global_mode} ({\ul M-^M}{\v Keystroke}) will set the background or foreground colors of future windows.
\par Colors that MicroEMACS knows about are: {\b white}, {\b gray} (dark grey), {\b grey} (light grey), {\b cyan}, {\b lcyan} (light cyan), {\b magenta}, {\b lmagenta} (light magenta), {\b yellow}, {\b lyellow} (light yellow), {\b blue}, {\b lblue}
 (light blue), {\b red}, {\b lred} (light red), {\b green}, {\b lgreen} (light green) and {\b black}
. If the computer you are running on does not have enough colors, MicroEMACS will attempt to guess at what color to use when you ask for one which is not there (systems with only 8 colors support: white, cyan, magenta, yellow, blue, red, green and black).

\par Under Microsoft Windows, the whole 16 colors above are available if the display system supports them (depending on the value of the {\uldb Colors profile}{\v ColorsProfile}). In that case, {\ul Mode lines}{\v ModeLine}
 are displayed as black characters on a light grey background. The {\ul message line}{\v MessageLine}
 and desktop colors can be modified through the Windows "control panel" as "window text", "window background" and "application workspace". The value of the {\uldb $deskcolor}{\v _deskcolor} {\ul variable}{\v Variable} is always irrelevant.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Setting the Font}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Fonts}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:170}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} font}} Setting the Font
\par \pard\plain \s6\sa120 \f4\fs20 Under Microsoft Windows, the font used by MicroEMACS to display text within the {\ul screens}{\v Screen} and the {\ul message line}{\v MessageLine} can be selected by using the {\b\ul F}{\b ont...} item in the {\b S}{\b\ul c
}{\b reen} menu. This brings up a dialog box in which you can select:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 The character set\tab "{\ul A}NSI" is the usual default within Windows application. "{\ul O}EM" is useful when displaying files that contain pseudo-graphics characters.
\par The face name\tab You can chose any of the available fixed-pitch faces.
\par The size of the font\tab You can either chose one of the font heights listed or type one if you have scalable fonts. All heights are expressed in pixels.
\par The font weight\tab Normal unless you check the "{\ul B}old" box.
\par \pard\plain \s6\sa120 \f4\fs20 A sample of the selected font is shown, specifying its height and width. The maximum screen size is calculated as the number of columns and rows (including {\ul mode lines}{\v ModeLine}
) that would be displayed in a maximized {\ul screen}{\v Screen} when the MicroEMACS frame is maximized.
\par Pressing the Enter key or the {\b OK} button effects the change of font in MicroEMACS. Pressing the Alt+S keys or the {\b\ul S}{\b ave} button has the same effect, but also saves the font selection in the {\uldb profiles}{\v Profiles}
 so that next time MicroEMACS is started, it uses that font. Pressing the Escape key or the {\b Cancel} button returns to MicroEMACS without changing the font.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Case Control}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CaseControl}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:180}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} case;uppercase;lowercase;capitals}} Case Control
\par \pard\plain \s6\sa120 \f4\fs20 The following {\ul commands}{\v Command} let you change the case of the {\uldb word}{\v Words} at or following the {\ul point}{\v Point}:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-C}{\v Keystroke}\tab {\uldb case-word-capitalize}{\v case_word_capitalize}
\par \tab {\ul M-L}{\v Keystroke}\tab {\uldb case-word-lower}{\v case_word_lower}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul M-U}{\v Keystroke}\tab {\uldb case-word-upper}{\v case_word_upper}
\par \pard\plain \s6\sa120 \f4\fs20 Setting a {\ul mark}{\v Mark}, moving to the other end of the {\uldb region}{\v Regions} and using one of these commands will change the case of all the words in the selected region:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X^L}{\v Keystroke}\tab {\uldb case-region-lower}{\v case_region_lower}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^X^U}{\v Keystroke}\tab {\uldb case-region-upper}{\v case_region_upper}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Controlling Tabs}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ControllingTabs}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:190}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} tabs}} Controlling Tabs
\par \pard\plain \s6\sa120 \f4\fs20 By default, MicroEMACS sets the default tab stops every eighth column. This behavior can be changed (usually within the {\uldb start-up file}{\v StartupFile}).
\par The behavior of the {\uldb handle-tab}{\v handle_tab} ({\ul ^I}{\v Keystroke} or Tab key) {\ul command}{\v Command} depends on the {\ul numeric argument}{\v Argument} that is supplied to it:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab With no argument, {\b handle-tab} inserts space characters or a single tab character to get to the next tab stop, depending on its configuration...
\par \tab With an non-zero argument {\i n}, tabs stops are reset to every {\i n}{\fs16\up6 th} column and {\b handle-tab} is reconfigured to insert {\ul space characters} in sufficient number to get to the next tab stop. This also sets the {\uldb $softtab}{\v 
_softtab} {\ul variable}{\v Variable} to {\i n}.
\par \tab With an argument of zero, {\b handle-tab} is reconfigured so that it inserts {\ul true tab characters} (its default behavior) and the tab stop interval is reset to its default value of 8.
\par \pard\plain \s6\sa120 \f4\fs20 The distance which a true tab character moves the cursor is reflected by the value of the {\uldb $hardtab}{\v _hardtab} {\ul variable}{\v Variable}
. Initially set to 8, this determines how far each tab stop is placed from the previous one.
\par Tab characters can be globally replaced by the appropriate number of spaces by the {\uldb detab-region}{\v detab_region} ({\ul ^X^D}{\v Keystroke}) command. The reverse, {\uldb entab-region}{\v entab_region} ({\ul ^X^E}{\v Keystroke}
) changes multiple spaces to tab characters.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Repetitive Tasks}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} RepetitiveTasks}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:200}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} repeat;macro;keyboard}} Repetitive Tasks
\par \pard\plain \s6\sa120 \f4\fs20 To perform any repetitive task, where you have a list of things that need to be changed, for instance one per line, follow these steps: 
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 1)\tab Position the {\ul point}{\v Point} to the beginning of the line to change
\par 2)\tab Invoke {\uldb begin-macro}{\v begin_macro} ({\ul ^X(}{\v Keystroke})to start recording
\par 3)\tab make the change, staying on that line
\par 4)\tab move to the beginning of the next line
\par 5)\tab Invoke {\uldb end-macro}{\v end_macro} ({\ul ^X)}{\v Keystroke}) to stop recording
\par \pard\plain \s6\sa120 \f4\fs20 Do {\uldb execute-macro}{\v execute_macro} ({\ul ^XE}{\v Keystroke}) once to test your change on the next line. If it is satisfactory, count how many lines need to yet be changed, strike the {\ul meta key}{\v MetaKey}
 followed by that number and {\ul ^XE}{\v Keystroke}. This causes your change to be made on all the lines.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Undoing Your Edits}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} UndoingYourEdits}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:210}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} scope;buffer;region}} Undoing Your Edits{\fs16 
\par }\pard\plain \s6\sa120 \f4\fs20 
It is all too easy to make mistakes while editing. But mistakes need not be permament. While MicroEMACS edits your file, it keeps track of the changes it makes to each buffer.  At any time you can undo each change done to your current buffer, starting wit
h the last and moving backwards. This is done with the
\par \tab {\ul ^_}{\v Keystroke}\tab {\uldb undo}{\v undo}
\par command. You can also get a look at what MicroEMACS remembers of these editing changes by issuing the
\par \tab {\ul ^XU}{\v Keystroke}\tab {\uldb list-undos}{\v list_undos}
\par command. There are also some environment variables responcible for deciding how the undo command currently work. These are:
\par {\uldb $undoflag}{\v _undoflag}\tab if FALSE, the undo mechinism is disabled
\par {\uldb $dispundo}{\v _dispundo}\tab if TRUE, the number of basic editing operations in the undo stack of the current buffer is \tab \tab displayed on the mode line.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Narrowing Your Scope}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} NarrowingYourScope}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:210}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} scope;buffer;region}} Narrowing Your Scope
\par \pard\plain \s6\sa120 \f4\fs20 Many times you will want to do something to a part of the text when the {\ul command}{\v Command} works on all the text. Also it is helpful to see or edit just a portion of the text. 
\par This kind of editing can be performed by narrowing the {\ul buffer}{\v Buffer} and later restoring the invisible portions, using the following commands:
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^X<}{\v Keystroke}\tab {\uldb narrow-to-region}{\v narrow_to_region}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul ^X>}{\v Keystroke}\tab {\uldb widen-from-region}{\v widen_from_region}
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Creating New Commands}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CreatingNewCommands}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:220}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} command;macro}} Creating New Commands
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS lets you create your own {\ul macros}{\v Macro} to perform any editing tasks, simple or complex. These macros are written in the MicroEMACS {\uldb macro language}{\v MacroLanguage}
. Macros can be invoked by other macros and they can be bound to keystrokes by the {\uldb macro-to-key}{\v macro_to_key} ({\ul ^X^K}{\v Keystroke}) command.
\par For examples of macros, look at the .CMD files supplied with MicroEMACS for Windows. In that package, {\uldb EMACS.RC}{\v StartupFile}
 is the file which is executed automatically whenever MicroEMACS is started. and all the ???.CMD files contain the code for each {\ul page}{\v Page}.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Customizing Menus}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CustomizingMenus}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:230}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} menu;binding;command;macro}} Customizing Menus
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS {\uldb menus}{\v UsingMenus} can be modified by the following commands (usually employed in the {\uldb start-up file}{\v StartupFile}):
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab  \tab {\uldb bind-to-menu}{\v bind_to_menu}\tab creates a menu item bound to a {\ul command}{\v Command}
\par \tab  \tab {\uldb macro-to-menu}{\v macro_to_menu}\tab creates a menu item bound to a {\ul macro}{\v Macro}
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab  \tab {\uldb unbind-menu}{\v unbind_menu}\tab deletes a menu item
\par \pard\plain \s6\sa120 \f4\fs20 With these three commands, menus are specified by using the MicroEMACS {\uldb menu name syntax}{\v MenuName}.
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Menu Name Syntax}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MenuName}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} CustomizingMenus:010menuname}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} menu}} Menu Name Syntax
\par \pard\plain \s6\sa120 \f4\fs20 Menu names used by the {\uldb bind-to-menu}{\v bind_to_menu}, {\uldb macro-to-menu}{\v macro_to_menu} and {\uldb unbind-menu}{\v unbind_menu} commands follow a common syntax. A menu name is composed of {\uldb menu item}{\v 
MenuItem} names separated by right brackets:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 >{\i item1}>{\i item2}>{\i item3}
\par \pard\plain \s6\sa120 \f4\fs20 When a menu name begins by a right bracket "{\b >}", it means that the menu item immediately following this right bracket is located within the menu bar. A menu name can also be specified as:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\i item1}>{\i item2}
\par \pard\plain \s6\sa120 \f4\fs20 In this case {\i item1} is located within the last accessed menu. One or more left brackets "{\b <}" can appear before the first item, meaning it is located as many levels up in the menu hierarchy:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 <<{\i item1}>{\i item2}
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Notes:\tab The tilde character "~" cannot be used to escape the meaning of the brackets ("{\b <}" or "{\b >}") and ampersand "{\b &}
" characters within menu names. The brackets simply cannot be escaped. The ampersand can be escaped (i.e. considered as a real ampersand instead of indicating the underscoring of a character) by using two consecutive ampersands: "{\b &&}".
\par \tab It is good practice to enclose menu names in double quotes. This is necessary when there are embedded spaces within a name. Also, when a menu name begins by an ampersand, MicroEMACS may misinterpret it as a function name.
\par \pard\plain \s6\sa120 \f4\fs20 See the {\uldb examples}{\v MenuExamples} for a more practical explanation...
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Menu Item Syntax}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MenuItem}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} CustomizingMenus:020menuitem}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} menu}} Menu Item Syntax
\par \pard\plain \s6\sa120 \f4\fs20 Menu item names are used as parts of {\uldb menu names}{\v MenuName}. They specify a single menu item within a given popup menu or within the menu bar. A menu item name can be formed of an {\i item text} and/or an {\i 
item index}:
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f27\fs18 {\i item text}@{\i item index}
\par \pard\plain \s6 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f27\fs18 {\i item text}
\par \pard\plain \s6 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 @{\i item index}
\par \pard\plain \s6\sa120 \f4\fs20 The {\i item text} specifies the text of the item that appears within the menu, using an ampersand "{\b &}
" as a prefix for the underlined character. Note that the key binding description, if any, is automatically generated by MicroEMACS and should not be part of the {\i item text}.
\par The {\i item index} is a decimal number that specifies the index of the item within the menu. Indexes start at zero.
\par If the specified item is being created:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab The {\i item text} is mandatory.
\par \tab Separators (horizontal lines between parts of a popup menu) are specified by the {\i item text} being a single dash "{\b -}". Note that either {\uldb bind-to-menu}{\v bind_to_menu} or {\uldb macro-to-menu}{\v macro_to_menu}
 can be used for this, since the bound command or macro is irrelevant (although it has to be a valid one).
\par \tab The {\i item index} can be used to specify the position where the new item will be placed
\par \tab If the {\i item index} is not specified, the new item is placed at the end of the menu or just after the item that was used in a previous menu binding command.
\par \pard\plain \s6\sa120 \f4\fs20 If the specified item already exists:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab If the item is not a separator, only one of {\i item text} or {\i item index} is needed (but both can be specified).
\par \tab If the item is a separator, the {\i item index} should be specified but {\b not} the  {\i item text}.
\par \pard\plain \s6\sa120 \f4\fs20 See the {\uldb examples}{\v MenuExamples} for a more practical explanation...
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Menu Examples}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MenuExamples}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} CustomizingMenus:030menuexamples}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} menu}} Menu Examples
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f27\fs18 bind-to-menu  forward-character  ">&Search>&Character@15>&Next"
\par bind-to-menu  nop                "-"
\par \pard \s4\fi-2160\li2880\sa120\tx2880 bind-to-menu  backward-character  "&Previous"
\par \pard\plain \s6\sa120 \f4\fs20 This creates a new popup menu named "{\ul C}haracter" under the "{\ul S}earch" menu, containing the two items "{\ul N}ext" and "{\ul P}revious", with a separator (for the sake of the demonstration) between the two.
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f27\fs18 unbind-menu    ">&Search>&Character>@1"
\par \pard\plain \s6\sa120 \f4\fs20 removes the above-created separator.
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f27\fs18 macro-to-menu  load-c-page    ">Code &page@4>&Load>&C"
\par macro-to-menu  load-cpp-page  "C&++"
\par macro-to-menu  load-p-page    "&Pascal"
\par macro-to-menu  remove-c-page  "<&Remove>&C"
\par macro-to-menu  remove-cpp-page   "C&++"
\par macro-to-menu  remove-p-page  "&Pascal"
\par bind-to-menu   nop            "<-"
\par \pard \s4\fi-2160\li2880\sa120\tx2880 macro-to-menu  remove-all-pages  "Remove &all"
\par \pard\plain \s6\sa120 \f4\fs20 This (assuming the specified macros actually exist) creates a new menu "Code {\ul p}age", located between the "E{\ul x}ecute" and the "{\ul M}iscellaneous" menus in the menu bar. This new menu contains the "{\ul L}oad", "{
\ul R}emove" and "Remove {\ul a}ll" items, the later being preceded by a separator. Both the "{\ul L}oad" and "{\ul R}emove" items actually lead to sub-menus that both contain "{\ul C}", "C{\ul +}+" and "{\ul P}ascal".
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Drag and Drop}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} DragAndDrop}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Procedures:240}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} drag and drop;file;drop}} Drag and Drop
\par \pard\plain \s6\sa120\tx6750 \f4\fs20 
Under MS-Windows 3.1 and above, MicroEMACS supports a "drag and drop" file-selection mechanism. If you select one or more files in the Windows File Manager and drag them with the mouse, dropping them over MicroEMACS generates a pseudo mouse action: {\ul 
MS!}{\v\ul MouseAction} that can be used by {\ul binding}{\v Binding} it to a {\ul macro}{\v Macro}.
\par \pard \s6\sa120 For instance, the following command causes a macro named "drop-files" to be invoked every time a group of files is dropped on MicroEMACS:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 macro-to-key  drop-files  MS!
\par \pard\plain \s6\sa120 \f4\fs20 The macro that handles the drag and drop mechanism acquires the necessary information from a buffer named "{\b Dropped files}":
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 The first line of that buffer contains the name of the {\ul screen}{\v Screen}
 on which the drop occurred. It is empty if the files were not dropped on any specific screen (for instance if they were dropped on the {\ul message line}{\v MessageLine}).
\par The second and following lines contain the list of dropped files, one pathname per line.
\par \pard\plain \s6\sa120 \f4\fs20 In addition, the {\uldb $xpos}{\v _xpos} and {\uldb $ypos}{\v _ypos} {\ul variables}{\v Variable}
 are set to the text coordinates where the drop occurred (or to the value 255 if the files were not dropped on any specific screen).
\par The {\uldb MDI.CMD}{\v MDI.CMD} {\ul page}{\v Page} contains a sample macro that handles drag and drop.
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Modes of Operation}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ModesOfOperation}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2030}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mode}} Modes of Operation
\par \pard\plain \s6\sa120 \f4\fs20 Modes determine how MicroEMACS will treat text. Modes affect the contents of a {\ul buffer}{\v Buffer}. Global modes determine the modes of newly created buffers.
\par \pard\plain \s3\fi-2880\li2880\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul ^XM}{\v Keystroke}\tab {\uldb add-mode}{\v\uldb add_mode}\tab Adds a mode to the current buffer
\par \tab {\ul ^X^M}{\v Keystroke}\tab {\uldb delete-mode}{\v\uldb delete_mode}\tab Removes a mode from the current buffer
\par \tab {\ul M-M}{\v Keystroke}\tab {\uldb add-global-mode}{\v\uldb add_global_mode}\tab Adds a global mode
\par \pard \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \tab {\ul M-^M}{\v Keystroke}\tab {\uldb delete-global-mode}{\v delete_global_mode}\tab Removes a global mode
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS's modes are:
\par \pard\plain \s7\fi-1080\li1440\tx1440\tx2880 \f4\fs20 {\uldb ASAVE}{\v ASAVE}\tab Automatically Save
\par {\uldb CMODE}{\v CMODE}\tab Editing C programs
\par {\uldb CRYPT}{\v CRYPT}\tab Encryption
\par {\uldb EXACT}{\v EXACT}\tab Character Case during Searches
\par {\uldb MAGIC}{\v\uldb MAGIC}\tab Regular Expression Pattern Matching
\par {\uldb OVER}{\v\uldb OVER}\tab Overstrike Mode
\par {\uldb REP}{\v\uldb REP}\tab Replace Mode
\par {\uldb VIEW}{\v\uldb VIEW}\tab No Changes Permitted
\par \pard \s7\fi-1080\li1440\sa120\tx1440\tx2880 {\uldb WRAP}{\v\uldb WRAP}\tab Wrap entered text
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} ASAVE Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ASAVE} +{\footnote \pard\plain \s245 
\f4\fs20 {\fs16\up6 +} ModesOfOperation:asave} }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} ASAVE;mode;autosave;save}}{\fs16\up6  }ASAVE Mode
\par \pard\plain \s6\sa120 \f4\fs20 When this mode is on, MicroEMACS automatically saves the contents of your current {\ul buffer}{\v Buffer} to disk every time you have typed 256 characters. The buffer is saved to the file named on the {\ul mode line}{\v 
ModeLine} of the buffer. This mode assures you that you will loose very little text should your computer crash while you are editing. Be sure you are willing to have your original file replaced automatically before you add this mode.
\par The frequency of saving can be altered by changing the contents of the {\uldb $asave}{\v _asave} {\ul variable}{\v Variable }.Use the {\uldb set}{\v set} ({\ul ^XA}{\v Keystroke}) {\ul command}{\v Command} like this:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\f7 ^XA $asave 2048
\par }\pard\plain \s6\sa120 \f4\fs20 to tell MicroEMACS to automatically save the current buffer after 2048 characters are typed.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the {\uldb $acount}{\v _acount} variable contains the count down to the next auto-save.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} CMODE Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CMODE}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:cmode}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} CMODE;mode;C language;brace;parenthesis;bracket}} CMODE Mode
\par \pard\plain \s6\sa120 \f4\fs20 This mode is specifically for editing programs written in the C language. When CMODE is active, MicroEMACS will try to anticipate what indentation is needed when the {\uldb newline}{\v newline} ({\ul ^M}{\v Keystroke}
 or Enter key) {\ul command}{\v Command} is used. It will always bring a pound sign "#" with only leading white space back to the left margin. 
It will also attempt to flash the cursor over the proper opening fence character matching any closing fence character (one of "{\b )\}]}") that is typed (the duration of this flashing can be controlled by setting the {\uldb $tpause}{\v _tpause} {\ul 
variable}{\v Variable}).
\par Note that the standard start-up files for MicroEMACS install a {\ul macro}{\v Macro} which checks any file being read into MicroEMACS and sets CMODE if the file ends with a .c or .h extension.
\par Related {\ul command}{\v Command}:
\par \pard\plain \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul M-^F}{\v Keystroke}\tab {\uldb goto-matching-fence}{\v\uldb goto_matching_fence}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} CRYPT Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CRYPT}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:crypt}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} CRYPT;mode;encryption;secret}} CRYPT Mode
\par \pard\plain \s6\sa120 \f4\fs20 For files of a sensitive nature, MicroEMACS can encrypt text as it is written or read. The encryption algorithm is a Beaufort Cipher with a variant key. This is reasonably difficult to decrypt.
\par When you write out text, if CRYPT mode is active and there is no encryption key, MicroEMACS will ask:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\f7 Encryption String:
\par }\pard\plain \s6\sa120 \f4\fs20 Type in a word or phrase of at least five and up to 128 characters for the encryption to use. I
f you look at the file which is then written out, all the printable characters have been scrambled.To read such a file later, you can use the {\b -k} {\uldb switch}{\v CommandLineSwitches} when calling up MicroEMACS:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\f7 emacs -k }{\i\f7 filename}{\f7 
\par }\pard\plain \s6\sa120 \f4\fs20 and you will be asked the encryption key before the file is read.
\par You can modify the encryption key by using the {\uldb set-encryption-key}{\v set_encryption_key} ({\ul M-E}{\v Keystroke}) command.
\par Note: previous versions of MicroEMACS used a defective encryption method. For compatibility, you can chose to use the older algorithm by setting the {\uldb $oldcrypt}{\v _oldcrypt} {\ul variable}{\v Variable} to TRUE.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} EXACT Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} EXACT}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:exact}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} EXACT;mode;search;replace;case}} EXACT Mode
\par \pard\plain \s6\sa120 \f4\fs20 Normally, when using search or replace {\ul commands}{\v Command}, MicroEMACS ignores the case of letters for comparisons. With EXACT mode set, the case of the characters must be the same for a match to occur.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} MAGIC Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MAGIC}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:magic}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} MAGIC;mode;search;replace;regular expressions}} MAGIC Mode
\par \pard\plain \s6\sa120 \f4\fs20 Normally, MicroEMACS uses the string you type in response to a search or replace {\ul command}{\v Command}
 as the string to find.  When magic mode is enabled, MicroEMACS considers the string you type as a pattern or template to use in finding a string to match.  Many characters in this template have special meaning:
\par \pard\plain \s7\fi-1080\li1440\sa120\tx1440\tx2880 \f4\fs20 {\b .}\tab any single character, except newline.
\par {\b [}{\i set}{\b ]}\tab any single character from the bracketed {\i set}.
\par {\b ^}\tab beginning of a line.
\par {\b $}\tab end of a line.
\par {\b \\}\tab the next character has no special meaning, take the next character literally (unless it is a parenthesis)
\par {\b ?}\tab the preceding character (or "{\b .}" or {\b [}{\i set}{\b ]}) is optional.
\par {\b *}\tab the preceding character (or "{\b .}" or {\b [}{\i set}{\b ]}) matches zero to many times.
\par {\b +}\tab the preceding character (or "{\b .}" or {\b [}{\i set}{\b ]}) matches one to many times.
\par {\b \\(}{\i group}{\b \\)}\tab define a {\ul group}{\v Group} for the replacement string, or for the {\uldb &group}{\v .group} {\ul function}{\v Function}.
\par \pard\plain \s6\sa120 \f4\fs20 Some characters in the replacement string can have special meanings:
\par \pard\plain \s7\fi-1080\li1440\sa120\tx1440\tx2880 \f4\fs20 {\b &}\tab insert all of the text matched by the search.
\par {\b \\}\tab the next character has no special meaning (but see groups below...)
\par {\b \\1} to {\b \\9}\tab insert the text defined by the {\i n}{\fs18\up6 th} group in the search string.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} OVER Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} OVER}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:over}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} OVER;mode;insert;REP}} OVER Mode
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS is normally in what many other editors consider "ins
ert" mode. This means when you strike a character, MicroEMACS makes room for that character in the current line, inserting it between the existing characters. In OVER mode, MicroEMACS instead overwrites characters, replacing the existing character under t
he {\ul point}{\v Point} with the character you type. OVER mode will maintain the position of text lined up using tabs while replacing existing text.
\par Be wary of editing Japanese KANJI characters while in this mode: it is possible to overwrite the first byte of the character, leaving the second byte meaningless and alone. {\uldb REP mode}{\v REP} is more appropriate for such files.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} WRAP Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} WRAP}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:wrap}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} WRAP;mode;fill;word}} WRAP Mode
\par \pard\plain \s6\sa120 \f4\fs20 This mode causes the {\ul point}{\v Point} and the previous {\uldb word}{\v Words}
 to jump down to the next line when you type a space and are beyond the current fill column. This is normally set to column 72, allowing you to enter text non-stop on a standard screen without bothering to use the return key.
\par To change the column that text is wrapped past, use the {\uldb set}{\v set} ({\ul ^XA}{\v Keystroke}) {\ul command}{\v Command} to change the value of the {\uldb $fillcol}{\v\uldb _fillcol} {\ul variable}{\v Variable}, like this:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\f7 ^XA $fillcol }{\i\f7 new_value}{\f7 
\par }\pard\plain \s6\sa120 \f4\fs20 MicroEMACS will then be set to wrap words past column {\i new_value}.
\par The {\uldb $wraphook}{\v _wraphook} {\ul variable}{\v Variable} contains the command or {\ul macro}{\v Macro} used to perform word wrapping. By default, it is the {\uldb wrap-word}{\v wrap_word} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} VIEW Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} VIEW}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:view}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} VIEW;mode}} VIEW Mode
\par \pard\plain \s6\sa120 \f4\fs20 When in VIEW mode, no {\ul command}{\v Command} which would change the text is allowed. If you attempt any such command, or try to type in any text, MicroEMACS responds with:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\f7 [Key Illegal in View Mode]
\par }\pard\plain \s6\sa120 \f4\fs20 This mode is very useful when you want to just look at some existing text, as it will prevent you from changing that text. Also MicroEMACS will not attempt a {\ul file lock}{\v FileLocking}
 if a file is read in VIEW mode, allowing you to view files which you don't have write access to, or other people have locked. To launch MicroEMACS and read a file in VIEW mode, use the -v {\uldb switch}{\v CommandLineSwitches}:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 {\f7 emacs -v }{\i\f7 filename}{\f7 
\par }\pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} REP Mode}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} REP}} {\fs16\up6 +{\footnote \pard\plain 
\s245 \f4\fs20 {\fs16\up6 +} ModesOfOperation:rep}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} REP;mode;insert;OVER}} REP Mode
\par \pard\plain \s6\sa120 \f4\fs20 
MicroEMACS is normally in what many other editors consider "insert" mode. This means when you strike a character, MicroEMACS makes room for that character in the current line, inserting it between the existing characters. In REP mode, MicroEMACS instead r
eplaces the existing character under the {\ul point}{\v Point}
 with the character you type. REP mode will not maintain the position of text which takes up multiple columns using tabs since it will replace a single tab character with the typed character which will not take up the same space on screen. For this purpos
e, the {\uldb OVER mode}{\v OVER} is more appropriate
\par However, Japanese KANJI characters will correctly replace and be replaced in this mode as the two bytes will be considered together when either style character is used.
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Start-up}}{\plain \f4\fs16  }{\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Startup}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2050}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} start-up}} Start-up
\par \pard\plain \s6\sa120 \f4\fs20 There are different things that can be specified on the {\uldb MicroEMACS command line}{\v CommandLineSwitches} to control the way the editor operates. These can be switches, which are a dash "{\b -}
" followed by a letter, and possible other parameters, or a {\uldb start-up file}{\v StartupFile} specifier, which is an at sign "{\b @}" followed by a file name that overrides the default "EMACS.RC".
\par Under Microsoft Windows, MicroEMACS also uses some {\uldb profiles}{\v Profiles} from the WIN.INI file.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16\cf2 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Start-up File}}{\plain \f4\fs16\cf2  }{\plain \f4\fs16\cf2\up6 #{\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 #} StartupFile}} {\plain \f4\fs16\cf2\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2050startupfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} start-up;emacs.rc}} Start-up File
\par \pard\plain \s6\sa120 \f4\fs20 When MicroEMACS starts executing, it looks for a start-up file which it will execute as a {\ul macro}{\v Macro} before it reads in any other file. This start-up macro usually redefines some {\ul bindings}{\v Binding}
 (for instance to use function keys) and loads various useful macros.
\par The name of the start-up file can be specified on the {\uldb MicroEMACS command line}{\v CommandLineSwitches}. By default, it is: EMACS.RC.
\par Unless the pathname of the start-up file is fully qualified, MicroEMACS searches for the file along the {\ul path}{\v Path}.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16\cf2 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Command Line Switches}}{\plain \f4\fs16\cf2  }{\plain \f4\fs16\cf2\up6 #{\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 #} CommandLineSwitches}} {\plain \f4\fs16\cf2\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2050startupcommandlineswitches}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} switches;start-up}}
 Command Line Switches
\par \pard\plain \s6\sa120 \f4\fs20 The command line used to launch MicroEMACS looks like this:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f27\fs18 EMACS.EXE   {\i switches    files to edit}
\par \pard\plain \s6\sa120 \f4\fs20 The following {\i switches} can be specified:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 {\b @}{\i file}\tab This causes the named {\i file} to be executed instead of the standard {\uldb EMACS.RC}{\v StartupFile}
 file before MicroEMACS reads in any other files. More than one of these can be placed on the command line, and they will be executed in the order that they appear.
\par {\b -C}\tab The following source files on the command line can be changed (as opposed to being in VIEW mode). This is mainly used to cancel the effects of the -v switch used previously in the same command line. 
\par {\b -E}\tab This flag causes emacs to automatically run the start-up file "error.cmd" instead of emacs.rc. This can be used by compilers for error processing.
\par {\b -G}{\i num} or {\b +}{\i num}\tab Upon entering MicroEMACS, position the cursor at the {\i num} line of the first file.
\par {\b -I}{\i var  value}\tab Initialize a MicroEMACS {\uldb variable}{\v Variables} with {\i value}.
\par {\b -K}{\i key}\tab This tells MicroEMACS to place the source files in {\uldb CRYPT mode}{\v CRYPT} and read it in using {\i key} as the encryption key. If no key is listed after the {\b -K}
 switch, you will be prompted for a key, and it will not be echoed as it is typed.
\par {\b -R}\tab This places MicroEMACS in "restricted mode" where any {\ul commands}{\v Commands}
 allowing the user to read or write any files other than the ones listed on the command line are disabled. Also all commands allowing the user access to the operating system are disabled. This makes MicroEMACS a "safe" environment for use within other app
lications and especially used as a remote editor for an electronic Bulletin Board System (BBS).
\par {\b -S}{\i string}\tab After MicroEMACS is started, it automatically {\uldb searches}{\v SearchingAndReplacing} for {\i string }in the first source file.
\par {\b -V}\tab This tells MicroEMACS that all the following files on the command line should be in {\uldb VIEW mode}{\v VIEW} to prevent any changes being made to them. 
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Profiles}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Profiles}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2050startupprofiles}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;start-up;WIN.INI}} Profiles
\par \pard\plain \s6\sa120 \f4\fs20 Profiles are entries in the WIN.INI file and are used only under Microsoft Windows. MicroEMACS uses a few profiles, all placed under the "[MicroEMACS]" section, to define the initial window size, the initial font and the p
ath names of some files.
\par The following profiles can be modified by editing the WIN.INI file:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 {\uldb Colors}{\v ColorsProfile}\tab number of colors supported by the display.{\uldb 
\par DOSExec}{\v DosExecProfile}\tab path name of a PIF file for {\uldb pipe-command}{\v pipe_command}, {\uldb filter-buffer}{\v filter_buffer} and {\uldb i-shell}{\v i_shell}
\par {\uldb DOSBox}{\v DosBoxProfile}\tab path name of a PIF file for {\uldb shell-command}{\v shell_command}
\par {\uldb HelpFile}{\v HelpFileProfile}\tab path name of this help file
\par {\uldb InitialSize}{\v InitialSizeProfile}\tab keywords: "maximize", "minimize" or "optimize"
\par {\uldb Shell}{\v ShellProfile}\tab path name of the shell executable under Windows NT.
\par {\uldb ShellExecOption}{\v ShellProfile}\tab command execution option for the shell under Windows NT.
\par {\uldb TimeSlice}{\v TimeSliceProfile}\tab number of milliseconds of processing before yielding to other applications
\par \pard\plain \s6\sa120 \f4\fs20 The font-related profiles ({\b FontName}, {\b FontWeight}, {\b FontWidth}, {\b FontHeight} and {\b CharSet}) are updated by MicroEMACS itself when a {\uldb font selection}{\v Fonts} is saved. 
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Colors Profile}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ColorsProfile}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:ColorsProfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;color}} Colors Profile
\par \pard\plain \s6\sa120 \f4\fs20 The Colors {\uldb profile}{\v Profiles} is used to force MicroEMACS to run in either color or monochrome mode. In color mode, the {\ul mode lines}{\v ModeLine}
 display back text over a light grey background and editable text is displayed as white on black (these colors can be {\uldb customized}{\v Colors}
). In monochrome mode, MicroEMACS uses the colors specified by the system (configurable through the Windows Control Panel), using highlighted text for the mode lines.
\par The value associated to the colors profile is the number of colors supported by the system, or zero (
to allow MicroEMACS to automatically determine the proper value). Monochrome mode is assumed for values 1 and 2. Values greater than 2 put MicroEMACS in color mode.
\par If this profile does not appear in the [MicroEMACS] section of the WIN.INI file, the default value is 0.
\par Setting this profile is particularly useful on monochrome displays that allow multiple shades of gray (in particular, laptop screens), as MicroEMACS mistakenly believes these to be actual color displays.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} DOSExec Profile}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} DosExecProfile}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:dosexecprofile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;DOS;PIF;filter;pipe;shell;WIN.INI}} DOSExec Profile
\par \pard\plain \s6\sa120 \f4\fs20 The DOSExec {\uldb profile}{\v Profiles} specifies the path name of a PIF file used by the {\uldb pipe-command}{\v pipe_command}, {\uldb filter-buffer}{\v filter_buffer} and {\uldb i-shell}{\v i_shell}
 commands under MS Windows 3.x. This profile is also used when the {\uldb shell-command}{\v shell_command} command is invoked with a {\ul numeric argument}{\v Argument}.
\par If this profile does not appear in the [MicroEMACS] section of the WIN.INI file, the file "DOSEXEC.PIF" is searched along the {\ul path}{\v Path}
. This is appropriate if, for instance, that file is located in the directory where the MicroEMACS executable resides.
\par \pard\plain \s252\sa120\tx2880 \b\f4 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} DOSBox Profile}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} DosBoxProfile}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:dosboxprofile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;DOS;PIF;shell;WIN.INI}} DOSBox Profile
\par \pard\plain \s6\sa120 \f4\fs20 The DOSBox {\uldb profile}{\v Profiles} specifies the path name of a PIF file used when the {\uldb shell-command}{\v shell_command} is invoked without a {\ul numeric argument}{\v Argument} under MS Windows 3.x.
\par If this profile does not appear in the [MicroEMACS] section of the WIN.INI file, the file "DOSBOX.PIF" is searched along the {\ul path}{\v Path}
. This is appropriate if, for instance, that file is located in the directory where the MicroEMACS executable resides.
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} HelpFile Profile}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} HelpFileProfile}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:helpfileprofile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;help;WIN.INI}} HelpFile Profile
\par \pard\plain \s6\sa120 \f4\fs20 The HelpFile {\uldb profile}{\v Profiles} specifies the path name of the Help file for MicroEMACS. It allows proper function of the menu items that call-up this Help file.
\par The default value is the file "MEWIN.HLP" within the directory where the MicroEMACS executable resides.
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} InitialSize Profile}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} InitialSizeProfile}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:initialsizeprofile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;size;WIN.INI}} InitialSize Profile
\par \pard\plain \s6\sa120 \f4\fs20 The InitialSize {\uldb profile}{\v Profiles} specifies options for the sizing of the initial MicroEMACS frame window. It can be one of the following keywords:
\par \pard\plain \s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 {\b maximize}\tab the frame window fills the whole display
\par {\b icon} or {\b minimize}\tab MicroEMACS starts as an icon
\par {\b optimize}\tab the frame window fills the whole display, except a single row of icons at the bottom.
\par \pard\plain \s6\sa120 \f4\fs20 If the InitialSize profile is not used, the initial size of the MicroEMACS frame window is decided by the operating system.
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Shell and ShellExecOption Profiles}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ShellProfile}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:ShellProfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;Shell}} Shell and ShellExecOption Profiles
\par \pard\plain \s6\sa120 \f4\fs20 The {\b Shell} {\uldb profile}{\v Profiles} specifies the path name of the shell executable used by the {\uldb pipe-command}{\v pipe_command}, {\uldb filter-buffer}{\v filter_buffer}, {\uldb i-shell}{\v i_shell} and {\uldb 
shell-command}{\v shell_command}
 commands under Windows NT. If this profile does not appear in the [MicroEMACS] section of the WIN.INI file, the default path name is "CMD.EXE". This is appropriate if that file is located in a directory that appears in the system path.
\par The {\b ShellExecOption} profile specifies the string to be inserted between the string specified by the Shell profile 
and the actual command to be executed (for pipe-command, filter-buffer and shell-command). If this profile does not appear in the [MicroEMACS] section of the WIN.INI file, the default is " /c ". This is appropriate for "CMD.EXE".
\par \pard\plain \s252\sa120\tx2880 \b\f4 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} TimeSlice Profile}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} TimeSliceProfile}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Profiles:timesliceprofile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} profile;timeslice;WIN.INI}} TimeSlice Profile
\par \pard\plain \s6\sa120 \f4\fs20 Under Microsoft Windows 3.x, when MicroEMACS performs a long operation (reading or writing a large file, searching text, moving large chunks of text to/from the {\ul kill buffer}{\v\uldb KillBuffer} or {\ul clipboard}{\v 
Clipboard}, killing a buffer, etc...), it allows other applications to run concurrently with itself.
\par The TimeSlice {\uldb profile}{\v Profiles} specifies how often MicroEMACS should relinquish the processor: when a long operation is in process, MicroEMACS does not yield to other applications until the number of milliseconds thus specified has elapsed.

\par The default value is 100 milliseconds.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Notes:\tab Under Windows NT, the preemptive multitasking nature of the operating system allev
iates the need for MicroEMACS to voluntarily yield to other applications. The TimeSlice profile is still used to determine how often input (like a command to exit the editor) is checked.
\par \tab If the {\uldb animated grinder}{\v _flicker} (replacing the hourglass mouse cursor) is enabled, the TimeSlice profile also determines the time interval between each change of the cursor image.
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} Memory Usage}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MemoryUsage}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2060}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} memory}} Memory Usage
\par \pard\plain \s6\sa120 \f4\fs20 The only limit to the number of {\ul buffers}{\v Buffer} is the memory of your computer. All the buffers, text, {\ul screens}{\v Screen} and {\ul windows}{\v Window} use memory for storage.
\par Under Microsoft Windows, the accessible storage can be rather large, depending on the amount of extended memory installed on you system. If you are running in Windows 3.x 386-enhanced mode, MicroEMACS is able to use virtual memory, allowing you to edit ve
ry large files.
\par Under MSDOS, the AMIGA, the Atari ST, the HP150 and other microcomputers you can estimate the memory used by adding up the size
 of all the files you want to edit simultaneously, multiply by 1.4, and add 170K for the size of MicroEMACS. This results in the amount of free memory needed to edit these files. On an MSDOS machine with 574K of conventional memory available, you can edit
 files totaling about 288K in size. If you are using the DOS-extended version of MicroEMACS, the memory available for editing is determined by the amount of extended memory installed in your computer, up to 16 Megabytes.
\par On UNIX, Windows NT and other systems with large virtual memory there is almost no limit to the number and size of files you edit.
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} MS-Windows Specifics}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} Ms_WindowsSpecifics}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Index:2070}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} MS-Windows;windows}} MS-Windows Specifics
\par \pard\plain \s6\sa120 \f4\fs20 The port of MicroEMACS to the Microsoft Windows environment exhibits a few particularities not encountered with other versions of the editor:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab All the standard {\ul commands}{\v Command} are available. {\uldb Additional commands}{\v AdditionalCommands} are available: they allow access to the {\ul clipboard}{\v 
Clipboard}, {\uldb menu customization}{\v CustomizingMenus}, invocation of the {\uldb help engine}{\v help_engine} and control of {\ul screens}{\v Screen} as MDI (Multiple Document Interface) windows.
\par \tab In interactive mode, the file access commands use a dialog box instead of the {\ul message line}{\v MessageLine} prompt.
\par \tab It is possible to {\uldb drag files}{\v DragAndDrop} from the Windows File Manager onto MicroEMACS, providing a {\ul macro}{\v Macro} has been set-up to handle them.
\par \tab MDI windows (aka screens) and the MicroEMACS frame window can be resized by dragging their border with the mouse or using the sizing buttons.
\par \tab Text can be scrolled into view by using the scroll bars located at the right and bottom of each screen.
\par \tab When MicroEMACS is running a {\ul macro}{\v Macro}
, waiting for user input on the message line, or reading/writing a file, it is possible to input menu or other mouse commands, but only a subset of features is available. In particular, resizing is disabled and most menu options are grayed.
\par \tab It is possible to terminate MicroEMACS at any time, using the "{\ul C}lose"{\b  }(Alt+F4) item of the upper-left corner menu box. If there are modified {\ul buffers}{\v Buffer}, or a file write operation is in progress, a confirmation is requested.

\par \tab The amount of {\uldb memory}{\v MemoryUsage} available for buffers is limited only by the actual (conventional and extended) memory available, including virtual memory when running Windows NT or Windows 3.x in 386-enhanced mode.
\par \tab MicroEMACS can {\uldb synchronize}{\v SynchronizingWithADosBox} with other applications it launches.
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS runs as a well-behaved Windows application, {\uldb sharing the processor}{\v TimeSliceProfile} with other applications, even when a lengthy operation is in process.
\par Under Windows 3.x, MicroEMACS is a protected mode-only application: {\b it does not support real mode}, and runs only under standard or 386-enhanced mode.
\par The following {\ul page}{\v Page} are distributed with MicroEMACS for Windows and loaded by the {\uldb emacs.rc}{\v StartupFile} start-up file supplied in the distribution package:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb CUA.CMD}{\v CUA.CMD}\tab Common User Access macros
\par {\uldb DEV.CMD}{\v DEV.CMD}\tab example macro for software development
\par \pard \s11\li360\sa120\tx2880 {\uldb MDI.CMD}{\v MDI.CMD}\tab macros to map files to MDI windows
\par \pard\plain \s6\sa120 \f4\fs20 In addition, if a page named CUSTOM.CMD (to be supplied by the user) is found in the path, it is loaded after the three above.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} CUA.CMD}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} CUA.CMD}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Pages:CUACMD}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} CUA.CMD}} CUA.CMD
\par \pard\plain \s6\sa120 \f4\fs20 This {\ul page}{\v Page} is distributed with MicroEMACS for Windows and loaded by the {\uldb emacs.rc}{\v StartupFile} start-up file. It contains a number of {\ul macros}{\v Macro} and {\ul rebinds}{\v Binding}
 many keys, in order make MicroEMACS more similar to other Windows applications that use the Common User Access standard.
\par To that end, a set of {\ul clipboard}{\v Clipboard}
-related macros are supplied and you can select a piece of text by dragging the mouse across it while holding the left button held down or by moving around with the arrows or page keys while holding the Shift key down. That selection can then be {\b 
deleted} by pressing the Delete key, {\b copied} to the clipboard with the Ctrl+Insert keys, {\b cut} with Shift+Delete and {\b pasted} from the clipboard with Shift+Insert
\par Additionally, the following general purpose macros that work on the {\ul selection}{\v Selection} are supplied:
\par \pard\plain \s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \tab {\ul A-U}{\v Keystroke}\tab {\b CUA-case-upper}\tab converts all the selected text to upper case
\par \tab {\ul A-L}{\v Keystroke}\tab {\b CUA-case-lower}\tab converts all the selected text to lower case
\par \tab {\ul A-W}{\v Keystroke}\tab {\b CUA-count-words}\tab displays on the {\ul message line}{\v MessageLine} the number of words, characters and lines that compose the selected text
\par \tab {\ul A-=}{\v Keystroke}\tab {\b CUA-flip-selection}\tab exchanges the {\ul point}{\v Point} with the other end of the selection
\par \tab {\ul A-^M}{\v Keystroke}\tab {\b CUA-select-region}\tab (Alt+Enter) makes the current {\ul region}{\v Region} the current selection
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} DEV.CMD}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} DEV.CMD}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Pages:DEVCMD}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} DEV.CMD}} DEV.CMD
\par \pard\plain \s6\sa120 \f4\fs20 This sample {\ul page}{\v Page} is distributed with MicroEMACS for Windows and loaded by the {\uldb emacs.rc}{\v StartupFile} start-up file. It contains a few of {\ul macros}{\v Macro}
 that demonstrate how some features of the macro language can be used to facilitate software development:
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 The {\b run-makefile} macro is added to the {\uldb Execute menu}{\v ExecuteMenu}. It spawns a shell to run the command specified by the {\b %make} {\uldb user variable}{\v UserVariables} and {\uldb synchronizes
}{\v SynchronizingWithADosBox} with it. When the make process is finished, its output is displayed in a {\ul buffer}{\v Buffer} named "{\b Results}".
\par A series of macros are added to the {\uldb Help menu}{\v HelpMenu}. They search a specific help file for a topic matching the word under the {\ul point}{\v Point}.
\par \pard\plain \s253\sa240\tx2880 \b\f4\cf2 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} MDI.CMD}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} MDI.CMD}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Pages:MDICMD}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} MDI.CMD}} MDI.CMD
\par \pard\plain \s6\sa120 \f4\fs20 This {\ul page}{\v Page} is distributed with MicroEMACS for Windows and loaded by the {\uldb emacs.rc}{\v StartupFile} start-up file. It contains {\ul macros}{\v Macro} that make it easier to associate each {\ul buffer}{\v 
Buffer} with a separate {\ul screen}{\v Screen} (i.e. an MDI window). To that end:
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 The {\b open-file} macro replaces the {\uldb find-file}{\v find_file} {\ul command}{\v Command} in the {\uldb File menu}{\v FileMenu} and in key bindings ({\ul ^X^F}{\v Keystroke}
). Instead of reusing the current screen, it creates a new screen to house each newly opened file.
\par The {\b rebuild-screens} macro, invoked from the {\uldb Screen menu}{\v ScreenMenu}, associates a screen to each {\ul buffer}{\v Buffer}.
\par The {\b kill-screen} macro ({\ul A-K}{\v Keystroke}) deletes a screen and the associated buffer.
\par \pard\plain \s6\sa120 \f4\fs20 MDI.CMD also contains the {\b drop-files} macro that handles {\uldb drag and drop}{\v DragAndDrop} actions by invoking the {\b open-file} macro for each dropped file.
\par \pard\plain \s254\qc\sa240 \b\f4\fs30\cf2 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} No help available}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} NoHelpAvailable}} {\plain \f4\fs16\up6 
K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} default}} Sorry, no help available on this topic
\par \pard\plain \s6\sa120 \f4\fs20 You have attempted to get Help for a term that the Help system does not recognize.
\par Here are some other ways to find Help for individual terms:
\par \pard \s6 {\b\ul Help Search}
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 1)\tab Choose the {\b\ul S}{\b earch} button (Alt+S) from the top of this Help window (just below the menu bar).
\par 2)\tab In the Help Search dialog box, under Search For, type in the term you want Help for. If the term is indexed in the Help, you will go to that term in the upper list box. If the term is not indexed, you will go to the closest lexical match instead.

\par 3)\tab Press Enter or choose the dialog's {\b Search} button. You will see a list of 1 or more Help topics in the Topics Found
\par \pard\plain \s6\sa120 \f4\fs20 Alternatively, within the Help Search list box, scroll through the list to find a specific topic, then press Enter or choose the {\b\ul G}{\b o To} button to jump to that Help topic.
\par \pard \s6 {\b\ul Help Index}
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 1)\tab Use the {\b\ul I}{\b ndex} button (Alt+I) and then choose the category that best fits your query. 
\par 2)\tab Then traverse Help links through the topics until you find what you are looking for. If it is documented in the Help system, you should be able to find it within 4 or 5 topics.
\par }