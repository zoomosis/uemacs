{\rtf1\ansi \deff0{\fonttbl{\f0\froman Tms Rmn;}{\f1\froman Symbol;}{\f2\fswiss Helv;}{\f3\froman Times New Roman;}{\f4\fswiss Arial;}{\f5\froman Courier PS;}{\f6\froman Roman PS;}{\f7\fswiss Sans Serif PS;}
{\f8\fmodern Sans Serif 10cpi;}{\f9\fmodern Courier;}{\f10\fmodern Sans Serif 12cpi;}{\f11\fmodern Roman 12cpi;}{\f12\fmodern Roman 17cpi;}{\f13\fmodern Sans Serif 17cpi;}{\f14\fnil Preview;}{\f15\fswiss DIGITAL;}{\f16\fmodern Terminal;}
{\f17\froman Roman;}{\f18\fscript Script;}{\f19\fmodern Modern;}{\f20\fnil 8514oem;}{\f21\fnil 8514fix;}{\f22\fswiss System;}{\f23\fmodern Sans Serif 6cpi;}{\f24\fmodern Sans Serif 5cpi;}{\f25\fmodern Roman 6cpi;}{\f26\fmodern Roman 5cpi;}
{\f27\fmodern Roman 10cpi;}{\f28\fswiss MS Sans Serif;}{\f29\fnil Wingdings;}{\f30\fswiss Small Fonts;}{\f31\froman MS Serif;}{\f32\froman Roman PX;}{\f33\fnil Fences;}{\f34\fmodern Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;}{\stylesheet{\s244 \f4\fs16\up6 \sbasedon0\snext0 footnote reference;}{\s245 \f4\fs20 
\sbasedon0\snext245 footnote text;}{\s246\li720 \i\f4\fs20 \sbasedon0\snext255 heading 9;}{\s247\li720 \i\f4\fs20 \sbasedon0\snext255 heading 8;}{\s248\li720 \i\f4\fs20 \sbasedon0\snext255 heading 7;}{\s249\li720 \f4\fs20\ul 
\sbasedon0\snext255 heading 6;}{\s250\li720 \b\f4\fs20 \sbasedon0\snext255 heading 5;}{\s251\sa120\tx2880 \b\f4\fs20 \sbasedon0\snext255 heading 4;}{\s252\sa120\tx2880 \b\f4 \sbasedon0\snext255 heading 3;}{\s253\sa240\tx2880 \b\f4\cf2 
\sbasedon0\snext0 heading 2;}{\s254\qc\sa240 \b\f4\fs30\cf2 \sbasedon0\snext0 heading 1;}{\s255\li720 \f4\fs20 \sbasedon0\snext255 Normal Indent;}{\f4\fs20 \snext0 Normal;}{\s2\fi-2520\li2880\sa120\tx2880 \f4\fs20 \sbasedon0\snext2 Func List;}{
\s3\fi-2880\li2880\sa120\tqr\tx720\tx900\tx2880 \f4\fs20 \sbasedon2\snext3 Binding;}{\s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 \sbasedon0\snext4 Example;}{\s5\sa240\tx2880 \f4\fs20\cf2 \sbasedon0\snext5 Title;}{\s6\sa120 \f4\fs20 
\sbasedon0\snext6 Main Text;}{\s7\fi-1080\li1440\sa120\tx1440\tx2880 \f4\fs20 \sbasedon2\snext7 Char List;}{\s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \sbasedon0\snext8 Steps;}{\s9\sa120\tx180\tx1980\tx3780\tx5580\tx8550 \f4\fs20 
\sbasedon6\snext9 Glossary;}{\s10\fi-2520\li2880\sa120\sl120\tx2880 \f4\fs20 \sbasedon2\snext10 interline;}{\s11\li360\sa120\tx2880 \f4\fs20 \sbasedon6\snext11 Jump List;}{\s12\fi-720\li720\sa120 \f4\fs20 \sbasedon6\snext12 Note;}{
\s13\fi-2880\li2880\sa120\tx900\tx2880 \f4\fs20 \sbasedon3\snext13 FunctionDesc;}{\s14\fi-900\li900\sa120\tqr\tx720\tx900 \f4\fs20 \sbasedon3\snext14 BindingShort;}}{\info{\title comand topic file}{\subject MicroEMACS help}
{\author Pierre & Beatrice Perret}{\doccomm contains individual command descriptions}{\operator Pierre & Beatrice Perret}{\creatim\yr1993\mo4\dy20\hr22\min36}{\revtim\yr1993\mo4\dy20\hr22\min41}{\version3}{\edmins352}{\nofpages59}{\nofwords84636}
{\nofchars32770}{\vern8368}}\widowctrl\ftnbj\hyphhotz0 \sectd \linex0\endnhere \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} abort-command}} {\plain \f4\fs16\up6 #{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 #} abort_command}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:abortcommand}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} abort;abort-command}}
 abort-command
\par \pard\plain \f4\fs20 Default binding: {\ul ^G}{\v Keystroke}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} is used interactively to abort out of any command that is waiting for input.
\par It can be used within a macro to sound a beep but, unless it is used with the {\uldb !FORCE}{\v .FORCE} directive, it causes the macro to abort.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} add-global-mode}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} add_global_mode}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:addglobalmode}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mode;color;add-global-mode}} add-global-mode
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-M}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 add-global-mode    {\i mode}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 add-global-mode    {\i color}
\par \pard\plain \f4\fs20 This {\uldb command}{\v Commands} causes the specified {\uldb mode}{\v ModesOfOperation} to be inherited by future (not yet created) {\ul buffers}{\v Buffer} (These global modes can later be revoked by the {\uldb delete-global-mode}{
\v delete_global_mode} command). It can also be used to specify the foreground or background {\uldb color}{\v Colors} for future {\ul windows}{\v Window}.
\par \pard\plain \s6\sa120 \f4\fs20 This command does not modify the modes/colors of the current buffer/window. To do so, use the {\uldb add-mode}{\v add_mode} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} add-mode}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} add_mode}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:addmode}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mode;color;add-mode}} add-mode
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XM}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 add-mode  {\i mode
\par }\pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 add-mode  {\i color}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} adds the specified {\uldb mode}{\v ModesOfOperation} to the current {\ul buffer}{\v Buffer}. It can also be used to specify the foreground or background {\uldb color}{\v Colors}
 for the current {\ul window}{\v Window}.
\par To set the default modes/colors for all future buffers/windows, use the {\uldb add-global-mode}{\v add_global_mode} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} append-file command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} append_file}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:appendfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} append;file;append-file}} append-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^A}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 append-file  {\i file name}
\par \pard\plain \s6\sa120 \f4\fs20 Similar to {\uldb write-file}{\v write_file}, this {\uldb command}{\v Commands} writes out the current {\ul buffer}{\v Buffer}
 to the named file, but rather than replacing its contents, it appends the buffer to the end of the existing text in the file. This does not change the filename of the current buffer. It is especially handy for building log files.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} apropos command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} apropos}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:apropos}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} apropos}} apropos
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-A}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 apropos  {\i string}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} builds a list of all the MicroEMACS {\ul commands}{\v Command} and {\ul macros}{\v Macro} whose name contains the specified {\i string}. The list is stored in a buffer named "{\b 
Binding list}" and is displayed either in a {\ul popup buffer}{\v PopupBuffer} or in a regular window, depending on the value of the {\uldb $popflag}{\v _popflag} variable.
\par Commands are listed first, followed by macros (macro names are enclosed in square brackets "{\b [}" and "{\b ]}"). For each command or macro listed, the associated {\ul bindings}{\v Binding} are also listed.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} backward-character}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} backward_character}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:backwardcharacter}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} character;position;point;backward-character}} backward-character
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul ^B}{\v Keystroke} and {\ul FNB}{\v Keystroke} (left arrow)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  backward-character
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} backward by {\i n} characters. If {\i n} is a negative number, the point is moved forward. If no {\ul numeric arguments}{\v Argument}
 is specified, the point is moved backward by one character.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab end of lines count as one character.
\par \pard\plain \s6\sa120 \f4\fs20 If the move would take the point beyond the boundaries of the buffer, this command fails and the point is left at said boundary.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} begin-macro command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} begin_macro}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:beginmacro}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} begin-macro;macro}} begin-macro
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X(}{\v Keystroke}
\par This {\uldb command}{\v Commands} tells MicroEMACS to begin recording all keystrokes, commands and mouse clicks into the {\ul keyboard macro}{\v KeyboardMacro}. MicroEMACS stops recording when the {\uldb end-macro}{\v end_macro} ({\ul ^X)}{\v Keystroke}
) command is given.
\par The recording can be replayed by {\uldb execute-macro}{\v execute_macro} ({\ul ^XE}{\v Keystroke}).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard \s6\fi-720\li720\sa120 Note:\tab mouse clicks are recorded with the {\ul screen}{\v Screen} (row/column) position they occurred at.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} beginning-of-file}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} beginning_of_file}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:beginningoffile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} beginning;position;point;beginning-of-file}} beginning-of-file
\par \pard\plain \s6\fi-720\li720\sa120 \f4\fs20 Default binding: {\ul M-<}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes the {\ul point}{\v Point} to move to the beginning of the buffer.
\par It is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} beginning-of-line}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} beginning_of_line}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:beginningofline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;point;beginning-of-line}} beginning-of-line
\par \pard\plain \s6\fi-720\li720\sa120 \f4\fs20 Default binding: {\ul ^A}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes the {\ul point}{\v Point} to move to the beginning of the current line.
\par It is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} bind-to-key command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} bind_to_key}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:bindtokey}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} bind-to-key;binding}} bind-to-key
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-K}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 bind-to-key  {\i command name}  {\i keystroke}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} associates a {\ul command}{\v Command} with a {\i keystroke}, thus creating a {\ul binding}{\v Binding}. A keystroke can be bound only to one command or {\ul macro}{\v Macro}
 at a time, so when you rebind it, the previous binding is forgotten. On the other hand, a command can have more than one keystroke bound to it.
\par The {\i keystroke} is specified using the {\uldb keystroke syntax}{\v Keystroke} or the {\uldb mouse syntax}{\v MouseAction}.
\par This command cannot be used to specify the key binding for a macro. That is performed by the {\uldb macro-to-key}{\v macro_to_key} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} bind-to-menu command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} bind_to_menu}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:bindtomenu}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} bind-to-menu;binding;menu}} bind-to-menu
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 bind-to-menu  {\i command name}  {\i menu name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} is available only under Microsoft Windows. It creates a menu item associated with the specified {\ul command}{\v Command}. The {\i menu name} is specified using the {\uldb menu name syntax}{
\v MenuName}.
\par If the {\i menu name} designates a menu item that already exists, the command fails.
\par If the {\i menu name} specifies menus that do not exist yet, they are created as part of the creation of the menu item.
\par This command cannot be used to bind a {\ul macro}{\v Macro} to a menu. That is performed by the {\uldb macro-to-menu}{\v macro_to_menu} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} buffer-position}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} buffer_position}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:bufferposition}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;point;buffer-position}} buffer-position
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X=}{\v Keystroke}
\par This {\uldb command}{\v Commands} displays, on the {\ul message line}{\v MessageLine}, the position of the {\ul point}{\v Point} within the current window. It lists:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab The line (starting at 1), followed by the total number of lines in the buffer
\par \tab The column (starting at 0), followed by the length of the current line
\par \tab The character offset (starting at 0, newlines counting as a single character) from the beginning of the buffer, followed by the total number of character in the buffer
\par \tab The percentage of text before the point
\par \tab The hexadecimal value of the current character
\par \pard\plain \s6\sa120 \f4\fs20 This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} cascade-screens}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} cascade_screens}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:cascadescreens}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} MDI;screen;cascade-screens}} cascade-screens
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par This {\uldb command}{\v Commands} is available only under Microsoft Windows. It causes all non-iconic {\ul screens}{\v Screen} to be rearranged in a cascading scheme. If the current screen is maximized (see {\uldb maximize-screen}{\v maximize_screen}
) at the time this command is invoked, it is restored to its non-maximized size first.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} case-region-lower}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} case_region_lower}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:caseregionlower}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} case;region;case-region-lower}} case-region-lower
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^L}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes all the upper case characters in the {\ul region}{\v Region} to be changed into their lower case counterpart.
\par The command fails if the {\ul mark}{\v Mark} is not defined in the current {\ul window}{\v Window}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} case-region-upper}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} case_region_upper}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:caseregionupper}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} case;region;case-region-upper}} case-region-upper
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^U}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes all the lower case characters in the {\ul region}{\v Region} to be changed into their upper case counterpart.
\par The command fails if the {\ul mark}{\v Mark} is not defined in the current {\ul window}{\v Window}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} case-word-capitalize}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} case_word_capitalize}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:casewordcapitalize}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} case;word;case-word-capitalize}} case-word-capitalize
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-C}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  case-word-capitalize
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} capitalizes {\i n}{\uldb  words}{\v Words} after the {\ul point}{\v Point}
: it causes the first character of each word to be forced to upper case and the other characters to be forced to lower case. After the command has executed, the point is located just after the last processed word.
\par Note that since it starts by capitalizing the fi
rst letter after the point, this command would normally be issued with the cursor positioned in front of the first letter of the word you wish to capitalize. If you issue it in the middle of a word, you can end up with some {\f10 strAnge} looking text.

\par The command fails if the {\ul numeric argument}{\v Argument} is negative or if it goes beyond the end of the buffer. If {\i n} is null, nothing happens. If the numeric argument is not specified, only one word is affected.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} case-word-lower}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} case_word_lower}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:casewordlower}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} case;word;case-word-lower}} case-word-lower
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-L}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  case-word-lower
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} forces to lower case {\i n} {\uldb words}{\v Words} after the {\ul point}{\v Point}. After the command has executed, the point is located just after the last processed word.
\par Note that since it starts by processing the first letter after the point, this command would normally be issued with the cursor positioned in front of the first letter of the word you wish to make lower case.
\par The command fails if the {\ul numeric argument}{\v Argument} is negative or if it goes beyond the end of the buffer. If {\i n} is null, nothing happens. If the numeric argument is not specified, only one word is affected.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} case-word-upper}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} case_word_upper}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:casewordupper}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} case;word;case-word-upper}} case-word-upper
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-U}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  case-word-upper
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} forces to upper case {\i n} {\uldb words}{\v Words} after the {\ul point}{\v Point}. After the command has executed, the point is located just after the last processed word.
\par Note that since it starts by processing the first letter after the point, this command would normally be issued with the cursor positioned in front of the first letter of the word you wish to make upper case.
\par The command fails if the {\ul numeric argument}{\v Argument} is negative or if it goes beyond the end of the buffer. If {\i n} is null, nothing happens. If the numeric argument is not specified, only one word is affected.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} change-file-name command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} change_file_name}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:changefilename}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} change-file-name;file;name}} change-file-name
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XN}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 change-file-name  {\i file name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} lets you change the file name associated with the current {\ul buffer}{\v Buffer}. It does not change the buffer name. The disk file is unaffected.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} change-screen-column command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} change_screen_column}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:changescreencolumn}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} change-screen-column;screen}} change-screen-column
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  change-screen-column
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} modifies the offset of the current {\ul screen}{\v Screen}'s left column on the desktop. The {\ul numeric argument}{\v Argument} {\i n} specifies that offset in number of characters. If {\i 
n} is not specified, it is taken as zero.
\par Using this command is equivalent to setting the {\uldb $orgcol}{\v _orgcol} variable.
\par If {\i n} is negative or if it is positive but would cause the right border of the screen to be moved off the desktop, the command fails.
\par Under Microsoft Windows, this command always resets $orgcol to zero and it has no other effect.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} change-screen-row command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} change_screen_row}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:changescreenrow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} change-screen-row;screen}} change-screen-row
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  change-screen-row
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} modifies the offset of the current {\ul screen}{\v Screen}'s top row on the desktop. The {\ul numeric argument}{\v Argument} {\i n} specifies that offset in number of characters. If {\i n}
 is not specified, it is taken as zero.
\par Using this command is equivalent to setting the {\uldb $orgrow}{\v _orgrow} variable.
\par If {\i n} is negative or if it is positive but would cause the bottom border of the screen to be moved off the desktop, the command fails.
\par Under Microsoft Windows, this command  always resets $orgrow to zero and it has no other effect.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} change-screen-size command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} change_screen_size}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:changescreensize}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} change-screen-size;screen}} change-screen-size
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  change-screen-size
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} modifies the height of the current {\ul screen}{\v Screen}, causing it to be {\i n} lines. If the {\ul numeric argument}{\v Argument} {\i n}
 is not specified, it is taken to be the height of the whole desktop.
\par As the height of the screen changes, the bottom {\ul window}{\v Window} is resized to fit. If the height is decreased, windows that do not fit any more are eliminated, starting from the bottom one.
\par Using this command is equivalent to setting the {\uldb $pagelen}{\v _pagelen} variable.
\par If {\i n} is lower than 3 or if it is greater than the height of the desktop, the command fails.
\par Under Microsoft Windows:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab The height of a screen does not include the {\ul message line}{\v MessageLine}.
\par \tab If {\i n} is not specified, the command fails.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} change-screen-width command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} change_screen_width}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:changescreenwidth}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} change-screen-width;screen}} change-screen-width
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  change-screen-width
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} modifies the width of the current {\ul screen}{\v Screen}, causing it to be {\i n} characters. If the {\ul numeric argument}{\v Argument} {\i n}
 is not specified, it is taken to be the width of the whole desktop.
\par Using this command is equivalent to setting the {\uldb $curwidth}{\v _curwidth} variable.
\par If {\i n} is lower than 10 or if it is greater than the width of the desktop, the command fails.
\par Under Microsoft Windows, if {\i n} is not specified, the command fails.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} clear-and-redraw command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} clear_and_redraw}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:clearandredraw}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} clear-and-redraw;screen;window}} clear-and-redraw
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^L}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 clear-and-redraw
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  clear-and-redraw
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} performs two different functions, depending on the way it is invoked:
\par  wether it is invoked with a  or not:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab If the command is invoked without a {\ul numeric argument}{\v Argument}, it causes all {\ul screens}{\v Screen} to be completely repainted.
\par \tab If the command is invoked with a numeric argument, it centers the line containing the {\ul point}{\v Point} in the current {\ul window}{\v Window}. The value of the numeric argument is irrelevant.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} clear-message-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} clear_message_line}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:clearmessageline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} clear-message-line}} clear-message-line
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} erases the text (if any) displayed on the {\ul message line}{\v MessageLine}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} clip-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} clip_region}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:clipregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} clip-region;clipboard}} clip-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul FN^C}{\v Keystroke} (Control+Insert)
\par This {\uldb command}{\v Commands} copies the contents of the current {\ul region}{\v Region} into the {\ul clipboard}{\v Clipboard}, overwriting any previous clipboard data.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} copy-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} copy_region}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:copyregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} copy-region;region;kill}} copy-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-W}{\v Keystroke}
\par This {\uldb command}{\v Commands} copies the contents of the current {\ul region}{\v Region} into the {\ul kill buffer}{\v KillBuffer}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} count-words command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} count_words}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} :countwords}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} count-words;word}} count-words
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^C}{\v Keystroke}
\par This {\uldb command}{\v Commands} displays, on the {\ul message line}{\v MessageLine}, the number of {\uldb words}{\v Words} in the current {\ul region}{\v Region}, along with the number of characters, lines and the average number of characters per word.

\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} ctlx-prefix command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} ctlx_prefix}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:ctlxprefix}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} ctlx-prefix;control x}} ctlx-prefix
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X}{\v Keystroke}
\par This {\uldb command}{\v Commands} is rarely used for execution in the macro language. Its main purpose is to be mentioned in a {\uldb bind-to-key}{\v bind_to_key} command, to redefine the {\b ^X} prefix. For instance, the line:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 bind-to-key  ctlx-prefix  FN1
\par \pard\plain \s6\sa120 \f4\fs20 redefines function key {\b F1} as the prefix to be used in all keystrokes that begin by "{\b ^X-}". After this, keystrokes such as {\ul ^X^C}{\v Keystroke} would be actually typed by pressing and releasing the {\b F1}
 key and then pressing the {\b Control} key and the {\b C} key together.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} cut-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} cut_region}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:cutregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} cut-region}} cut-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul S-FND}{\v Keystroke} (Shift+Delete)
\par This {\uldb command}{\v Commands} deletes the contents of the current {\ul region}{\v Region} after copying them into the {\ul clipboard}{\v Clipboard}, overwriting any previous clipboard data.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} cycle-ring command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} cycle_ring}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:cyclering}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} cycle-ring;kill}} cycle-ring
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XY}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  cycle-ring
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the {\ul kill ring}{\v KillRing} to rotate by {\i n} positions. For instance, if the contents of the kill ring were K{\fs16\dn6 1}, K{\fs16\dn6 2} ... K{\fs16\dn6 14}, K{\fs16\dn6 15}
 and K{\fs16\dn6 16}, the {\ul kill buffer}{\v KillBuffer} would be K{\fs16\dn6 16}. After a command:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 2  cycle-ring
\par \pard\plain \s6\sa120 \f4\fs20 the kill buffer would be K{\fs16\dn6 14} and the kill ring would now be ordered: K{\fs16\dn6 15}, K{\fs16\dn6 16}, K{\fs16\dn6 1}, K{\fs16\dn6 2} ... K{\fs16\dn6 14}.
\par If no {\ul numeric arguments}{\v Argument} is specified, this command does not have any effect.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} cycle-screens command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} cycle_screens}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:cyclescreens}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} cycle-screens;screen}} cycle-screens
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul A-C}{\v Keystroke}
\par This {\uldb command}{\v Commands} takes the rearmost {\ul screen}{\v Screen} (actually, the last screen in the screen list) and moves it to the front.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-blank-lines command}}{\plain \f4\fs16  }{\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {
\fs16\up6 #} delete_blank_lines}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deleteblanklines}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-blank-lines;delete;line}}
 delete-blank-lines
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^O}{\v Keystroke}
\par If the {\ul point}{\v Point} is on an empty line, this {\uldb command}{\v Commands}
 deletes all the empty lines around (above and below) the current line. If the point is on a non empty line then this command deletes all of the empty lines immediately following that line.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-buffer command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_buffer}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletebuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-buffer;delete;buffer}} delete-buffer
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XK}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-buffer  {\i buffer name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} attempts to discard the named {\ul buffer}{\v Buffer}, reclaiming the memory it occupied. It will not allow the destruction of a buffer which is currently visible through any {\ul window}{
\v Window} on any {\ul screen}{\v Screen}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-global-mode command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_global_mode}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deleteglobalmode}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-global-mode;mode;color}} delete-global-mode
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^M}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-global-mode  {\i mode}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-global-mode  {\i color}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the specified {\uldb mode}{\v ModesOfOperation} to be removed from the ones inherited by future (not yet created) {\ul buffers}{\v Buffer}
 (such global modes would have been set by the {\uldb add-global-mode}{\v add_global_mode} command). It can also be used to specify the foreground or background {\uldb color}{\v Colors} for future {\ul windows}{\v Window}.
\par This command does not modify the modes/colors of the current buffer/window. To do so, use the {\uldb delete-mode}{\v delete_mode} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-kill-ring command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_kill_ring}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletekillring}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-kill-ring;kill}} delete-kill-ring
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^Y}{\v Keystroke}
\par This {\uldb command}{\v Commands} empties the {\ul kill ring}{\v KillRing} (this includes the current contents of the {\ul kill buffer}{\v KillBuffer}) and reclaims the memory space it occupied.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-mode command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_mode}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletemode}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-mode;mode;color}} delete-mode
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^M}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-mode  {\i mode
\par }\pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-mode  {\i color}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} removes the specified {\uldb mode}{\v ModesOfOperation} from the current {\ul buffer}{\v Buffer} (these modes would have been set by the {\uldb add-mode}{\v add_mode} or {\uldb 
add-global-mode}{\v add_global_mode} commands). It can also be used to specify the foreground or background {\uldb color}{\v Colors} for the current {\ul window}{\v Window}.
\par To set the default modes/colors for all future buffers/windows, use the {\uldb delete-global-mode}{\v delete_global_mode} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-next-character command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_next_character}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletenextcharacter}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-next-character;kill}} delete-next-character
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^D}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  delete-next-character
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-next-character
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is positive, this {\uldb command}{\v Commands} deletes, and stores into the {\ul kill buffer}{\v KillBuffer}, {\i n} characters after the {\ul point}{\v Point}. If {\i n} is negative, the {\i -n}
 characters preceding the point are deleted and stored into the kill buffer.
\par If no {\ul numeric argument}{\v Argument} is specified, the character following the point is deleted, but it is {\b not stored} into the kill buffer.
\par If an attempt to delete past the end or beginning of the {\ul buffer}{\v Buffer} is made, the command fails.
\par Note that end of lines are counted as one character each for the purpose of deletion.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-next-word command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_next_word}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletenextword}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-next-word;delete;kill;word}} delete-next-word
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-D}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  delete-next-word
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} deletes the text from the {\ul point}{\v Point} to the beginning of the next {\uldb word}{\v Words}, saving it into the {\ul kill buffer}{\v KillBuffer}.
\par If a positive {\ul numeric argument}{\v Argument} is present, it specifies the number of words to be deleted. A null numeric argument is treaded as a 1. A negative numeric argument causes the command to fail.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-other-windows command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_other_windows}}
 {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deleteotherwindows}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-other-windows;delete;window}} delete-other-windows
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X1}{\v Keystroke}
\par This {\uldb command}{\v Commands} deletes all other {\ul windows}{\v Window} but the active one from the current {\ul screen}{\v Screen}.  It does not discard or destroy any text, just stops looking at those {\ul buffers}{\v Buffer}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-previous-character command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 delete_previous_character}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletepreviouscharacter}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-previous-character;kill}}
 delete-previous-character
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^H}{\v Keystroke} (Backspace key) and {\ul FND}{\v Keystroke} (Delete key)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  delete-previous-character
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-previous-character
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is positive, this {\uldb command}{\v Commands} deletes, and stores into the {\ul kill buffer}{\v KillBuffer}, the {\i n} characters preceding the {\ul point}{\v Point}. If {\i n} is negative, the {\i -n}
 characters following the point are deleted and stored into the kill buffer.
\par If no {\ul numeric argument}{\v Argument} is specified, the character preceding the point is deleted, but it is {\b not stored} into the kill buffer.
\par If an attempt to delete past the end or beginning of the {\ul buffer}{\v Buffer} is made, the command fails.
\par Note that end of lines are counted as one character each for the purpose of deletion.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-previous-word command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_previous_word}}
 {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletepreviousword}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-previous-word;delete;kill;word}} delete-previous-word
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^H}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  delete-previous-word
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} deletes the text from the {\ul point}{\v Point} to the beginning of the previous {\uldb word}{\v Words}, saving it into the {\ul kill buffer}{\v KillBuffer}.
\par If a positive {\ul numeric argument}{\v Argument} is present, it specifies the number of words to be deleted. A negative or null numeric argument causes the command to fail.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-screen command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_screen}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-screen;delete;screen}} delete-screen
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul A-D}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 delete-screen  {\i screen name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} deletes the named {\ul screen}{\v Screen}, providing it is not the active one. Note that {\ul buffers}{\v Buffer} being displayed on that screen are not discarded.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} delete-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} delete_window}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:deletewindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} delete-window;delete;window}} delete-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X0}{\v Keystroke}
\par This {\uldb command}{\v Commands} removes the active {\ul window}{\v Window} from the {\ul screen}{\v Screen}
, giving its space to the window above (or, if there is none, the window below). It does not discard or destroy any text, just stops looking at that {\ul buffer}{\v Buffer}.
\par If the window is alone on the screen, it cannot be removed and the command fails.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} describe-bindings command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} describe_bindings}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:describebindings}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} describe-bindings;binding}} describe-bindings
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par This {\uldb command}{\v Commands} creates a list of all {\ul commands}{\v Commands} and {\ul macros}{\v Macro}, each with all the keys which are currently {\ul bound}{\v Binding} to it. Commands are listed first, followed by t
he macros (macro names are surrounded by square brackets "{\b [}" and "{\b ]}").
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard \s6\fi-720\li720\sa120 Note:\tab The list is actually built in a special buffer named "{\b Binding list}". It is displayed as a {\ul popup buffer}{\v PopupBuffer} or in a normal {\ul window}{\v Window}, depending on the value of the {\uldb $popflag}
{\v _popflag} {\ul variable}{\v Variable}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} describe-functions command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} describe_functions}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:describefunctions}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} describe-functions;function}} describe-functions
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} creates a list of all the {\ul functions}{\v Function} available in the MicroEMACS macro language..
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard \s6\fi-720\li720\sa120 Note:\tab The list is actually built in a special buffer named "{\b Function list}". It is displayed as a {\ul popup buffer}{\v PopupBuffer} or in a normal {\ul window}{\v Window}, depending on the value of the {\uldb $popflag
}{\v _popflag} {\ul variable}{\v Variable}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} describe-key command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} describe_key}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:describekey}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} describe-key;binding}} describe-key
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X?}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 describe-key  {\i keystroke}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} displays the {\ul command}{\v Command} or {\ul macro}{\v Macro} bound to the specified {\i keystroke} on the {\ul message line}{\v MessageLine}
 (macro names are surrounded by square brackets "{\b [}" and "{\b ]}"). If the {\i keystroke} has no binding, the text "Not Bound" is displayed.
\par When this command is used within a macro, the {\i keystroke} is specified using the {\ul MicroEMACS keystroke syntax}{\v Keystroke}  or the {\ul mouse syntax}{\v MouseAction }(a {\ul ^G}{\v Keystroke}, for instance, is typed as a hat character "{\b ^}
" followed by the letter "{\b G}").
\par When this command is used interactively mode, it displays a prompt: ": describe-binding" and the keystroke is expected to by typed as if the actual bound command or macro was being invoked (a {\ul ^G}{\v Keystroke}
, for instance, is typed by holding down the Control key and pressing the G key).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} describe-variables command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} describe_variables}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:describevariables}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} describe-variables;variable}} describe-variables
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: 
\par No default binding.
\par This {\uldb command}{\v Commands} creates a list of all the {\ul variables}{\v Variable} and their value. {\uldb Environmental variables}{\v EnvironmentalVariables} are listed first, followed by {\uldb user variables}{\v UserVariables}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard \s6\fi-720\li720\sa120 Note:\tab The list is actually built in a special buffer named "{\b Variable list}". It is displayed as a {\ul popup buffer}{\v PopupBuffer} or in a normal {\ul window}{\v Window}, depending on the value of the {\uldb $popflag
}{\v _popflag} variable.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} detab-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} detab_region}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:detabregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} detab-region;region;tabs}} detab-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^D}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  detab-region
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 detab-region
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes tab characters to be changed into the appropriate number of spaces in the affected lines (the spacing between tab stops is considered to be the value of the {\uldb $hardtab}{\v 
_hardtab} {\ul variable}{\v Variable}).
\par If a {\ul numeric arguments}{\v Argument} is specified, {\i n} lines, starting from the one containing the {\ul point}{\v Point}, are affected. If {\i n} is null, the command modifies no line.
\par If no numeric argument is specified, all the lines belonging to the current {\ul region}{\v Region} are affected. If no region is defined, the command modifies no line.
\par After this command has executed, the point is left at the beginning of the last affected line. The {\ul buffer}{\v Buffer} is marked as modified, even if no modification actually took place.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} display command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} display}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:display}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} display;variable}} display
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XG}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 display  {\i variable}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} displays the value of the specified {\ul variable}{\v Variable} on the {\ul message line}{\v MessageLine}. If {\i variable} is not an existing {\uldb environmental variable}{\v 
EnvironmentalVariables} or {\uldb user variable}{\v UserVariables}, the command fails.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} end-macro command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} end_macro}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:endmacro}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} end-macro;macro}} end-macro
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X)}{\v Keystroke}
\par This {\uldb command}{\v Commands} stops the recording of keystrokes, commands or mouse clicks into the {\ul keyboard macro}{\v KeyboardMacro}.
\par The command fails if MicroEMACS is not currently in recording mode.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par See also: {\uldb begin-macro}{\v begin_macro} and {\uldb execute-macro}{\v execute_macro}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} end-of-file command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} end_of_file}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:endoffile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} end-of-file}} end-of-file
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul M->}{\v Keystroke} and {\ul FN>}{\v Keystroke} (End key)
\par This {\uldb command}{\v Commands} places the {\ul point}{\v Point} at the end of the {\ul buffer}{\v Buffer}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} end-of-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} end_of_line}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:endofline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} end-of-line}} end-of-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^E}{\v Keystroke}
\par This {\uldb command}{\v Commands} places the {\ul point}{\v Point} at the end of the current line.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} end-of-word command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} end_of_word}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:endofword}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} end-of-word}} end-of-word
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  end-of-word
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the end of the {\i n}{\up6 th} following {\uldb word}{\v Words}
. If the point was located within a word before invoking the command, that word counts as the first one (thus, if {\i n} is 1, the point moves to the first character following the current word). If an attempt is made to move past the {\ul buffer}{\v 
Buffer}'s end, the command fails but the point is still moved to the end of the buffer.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 1.
\par If {\i n} is null, the command has no effect.
\par If {\i n} is negative, it causes the command to behave like {\uldb previous-word}{\v previous_word} (invoked with the numeric argument {\i -n}).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} entab-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} entab_region}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:entabregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} entab-region;region;tabs}} entab-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^E}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  entab-region
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 entab-region
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes space characters to be compressed into tab characters wherever possible in the affected lines (the spacing between tab stops is considered to be the value of the {\uldb $hardtab}{\v 
_hardtab} {\ul variable}{\v Variable}).
\par If a {\ul numeric arguments}{\v Argument} is specified, {\i n} lines, starting from the one containing the {\ul point}{\v Point}, are affected. If {\i n} is null, the command modifies no line.
\par If no numeric argument is specified, all the lines belonging to the current {\ul region}{\v Region} are affected. If no region is defined, the command modifies no line.
\par After this command has executed, the point is left at the beginning of the last affected line. The {\ul buffer}{\v Buffer} is marked as modified, even if no modification actually took place.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} exchange-point-and-mark command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} exchange_point_and_mark}}
 {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:exchangepointandmark}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} exchange-point-and-mark;position;point;mark}} exchange-point-and-mark

\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^X}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  exchange-point-and-mark
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} swaps the {\ul point}{\v Point} and the {\ul mark}{\v Mark} number {\i n}.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 0.
\par If mark{\i n} does not exist, the command fails.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-buffer command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_buffer}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executebuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-buffer;macro}} execute-buffer
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  execute-buffer  {\i buffer}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} executes the {\uldb macro language}{\v MacroLanguage} statements from the specified {\ul buffer}{\v Buffer}.
\par The command fails if the {\i buffer} does not exist or if an executed macro statement (within the {\i buffer}) fails.
\par If a positive {\ul numeric argument}{\v Argument} is specified, the buffer is executed {\i n} times. If {\i n} is negative or null, the command has no effect.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-command-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_command_line}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executecommandline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-command-line;command}} execute-command-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^X}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 execute-command-line  {\i command line}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} executes the specified {\i command line} exactly as if it were part of a {\ul macro}{\v Macro}
. This is mostly used interactively to invoke a command but prevent it from fetching its own arguments interactively.
\par This command is unaffected by {\ul numeric arguments}{\v Argument} (note that the {\i command line} itself may have its own numeric argument).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-file and source commands}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_file}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executefile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-file;source;macro}} execute-file {\plain \f4\fs20 or} source
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^S}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  execute-file  {\i file}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  source  {\i file}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} executes the {\uldb macro language}{\v MacroLanguage} statements from the specified {\i file}, after reading it into an invisible {\ul buffer}{\v Buffer}.
\par The {\i file} does not need to be a fully qualified path name: if it is a simple filename, it is searched along the {\ul path}{\v Path}.
\par The command fails if the {\i file} cannot be found or if an executed macro statement (within the {\i file}) fails.
\par If a positive {\ul numeric argument}{\v Argument} is specified, the {\i file} is executed {\i n} times. If {\i n} is negative or null, the command has no effect.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-macro command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_macro}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executemacro}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-macro;execute;macro}} execute-macro
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XE}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  execute-macro
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} replays the last recorded {\ul keyboard macro}{\v KeyboardMacro}.
\par If a negative or null {\ul numeric argument}{\v Argument} is specified, the command does nothing. If a positive numeric argument is given, the recorded keyboard macro is played {\i n}
 times. If no numeric argument is given, the recorded macro is played once.
\par The command fails if MicroEMACS is currently in recording mode.
\par See also: {\uldb begin-macro}{\v begin_macro} and {\uldb end-macro}{\v end_macro}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-macro-{\i n} command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_macro_n}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executemacron}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-macro-n;macro}} execute-macro-{\i n}
\par \pard\plain \s6 \f4\fs20 Default binding ({\i n} from 1 to 9): {\ul S-FN}{\i\ul n}{\i\v Keystroke}, for {\i n} = 10: {\ul S-FN0}{\v Keystroke}
\par \pard \s6\sa120 No default binding for {\i n} greater than 10.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i arg}  execute-macro-{\i n}
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS has 40 such {\uldb commands}{\v Commands} (i.e. {\i n} can be a number from 1 to 40). Each causes the execution of the corresponding numbered {\ul macro}{\v Macro} (created by the {\uldb store-macro}{\v 
store_macro} command).
\par If a strictly positive {\ul numeric argument}{\v Argument} is specified, the macro is executed repetitively {\i arg} times. If {\i arg} is negative or null, nothing happens.
\par See also: {\uldb execute-procedure}{\v execute_procedure}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-named-command command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_named_command
}} {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executenamedcommand}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-named-command;command}} execute-named-command
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-X}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  execute-named-command  {\i command}
\par \pard\plain \s6\sa120 \f4\fs20 In interactive mode, this {\uldb command}{\v Commands} causes a colon "{\b :}" to appear on the {\ul message line}{\v MessageLine}. You can then type the name of the {\ul command}{\v Command}
 you want to execute and strike Enter. If you type a space or the {\ul meta key}{\v MetaKey}, MicroEMACS will attempt to complete the name for you. This interactive use provides access to commands that do not have a key {\ul binding}{\v Binding}.
\par When used within a {\ul macro}{\v Macro}, {\b execute-named-command} makes the named {\i command} behave as if it had been called interactively, thus causing it to prompt the user for any arguments it needs.
\par If a {\ul numeric argument}{\v Argument} is specified, it is simply transmitted to the named {\i command}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-procedure or run commands}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_procedure}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executeprocedure}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-procedure;run;macro}} execute-procedure {\plain \f4\fs20 or} run
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^E}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  execute-procedure  {\i macro}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  run  {\i macro}
\par \pard\plain \s6\sa120 \f4\fs20 These two {\uldb commands}{\v Commands} are synonyms. They both cause the execution of the named {\i\ul macro}{\i\v Macro}{\i  }(created by the {\uldb store-procedure}{\v store_procedure} command).
\par If a strictly positive {\ul numeric argument}{\v Argument} is specified, the {\i macro} is executed repetitively {\i n} times. If {\i n} is negative or null, nothing happens.
\par See also: {\uldb execute-macro-}{\i\uldb n}{\i\v execute_macro_n}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} execute-program command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} execute_program}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:executeprogram}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} execute-program;execute;spawn}} execute-program
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X$}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 execute-program  {\i program
\par }\pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  execute-program  {\i program
\par }\pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} spawns an external {\i program}, without an intervening shell.
\par The {\i program} argument is a string. Note that if it contains spaces (as would be necessary to specify command line options), the string should be quoted.
\par Under MS-Windows:
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 \tab This command allows you to launch a Windows application from MicroEMACS. The current working directory where the application executes is set to the directory of the file in the current {\ul window}{\v 
Window} (or, if that window is not associated to a filename, to the last visited directory).
\par \tab If no {\ul numeric argument}{\v Argument} is specified, MicroEMACS and the launched application run independently. If a numeric argument is specified, MicroEMACS {\uldb synchronizes}{\v SynchronizingWithADosBox} with the application.
\par \pard\plain \s6\fi-720\li720\sa120 \f4\fs20 Note:\tab Under MS-DOS, you cannot use this command to invoke built-in system commands (like DIR, for instance). Use {\uldb shell-command}{\v shell_command} instead.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} exit-emacs command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} exit_emacs}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:exitemacs}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} exit-emacs;exit;quit}} exit-emacs
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^C}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  exit-emacs
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} terminates MicroEMACS.
\par If no {\ul numeric argument}{\v Argument} is specified and some buffers contain text that has been changed but not yet saved, you will be asked for a confirmation. If a numeric argument is specified, the command terminates MicroEMACS unconditionally.

\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} fill-paragraph command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} fill_paragraph}} {\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:fillparagraph}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} fill-paragraph;fill;paragraph}} fill-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-Q}{\v Keystroke}
\par This {\uldb command}{\v Commands} reformats the current {\uldb paragraph}{\v Paragraphs}, causing all of its text to be filled out to the current fill column (Which is 72 by default and is set with the {\uldb $fillcol}{\v _fillcol} {\ul variable}{\v 
Variable}).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} filter-buffer command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} filter_buffer}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:filterbuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} filter-buffer;filter;buffer;execute;spawn;shell;DOS}} filter-buffer
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X#}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 filter-buffer  {\i program}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} spawns the external filter {\i program} (for instance: SORT or FIND) and feeds it the contents of the current {\ul buffer}{\v Buffer}. The results replace the original text in the buffer.

\par Under Microsoft Windows, this command creates a {\ul DOS box}{\v DosBox} and {\uldb synchronizes}{\v SynchronizingWithADosBox} with it.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} find-file command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} find_file}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:findfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} find-file;file;open;read}} find-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^F}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 find-file  {\i file name}
\par \pard\plain \s6\sa120 \f4\fs20 If the named file is already loaded somewhere in the editor, this {\uldb command}{\v Commands} brings its {\ul buffer}{\v Buffer} up in the current {\ul window}{\v Window}
. Otherwise, the file is searched for on disk. If it is found, a new buffer is created and the contents of the file are read into it. If the file does not exist, a new empty buffer is created. In all cases, the buffer is brought up in the current window.

\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} find-screen command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} find_screen}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:findscreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} find-screen;screen}} find-screen
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul A-F}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 find-screen  {\i screen name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} brings up the named {\ul screen}{\v Screen}. If the {\i screen name}
 does not exist, a new screen is created. On text systems, this screen is displayed on top of the others. On graphic systems, the OS window containing this screen is brought to the foreground.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} forward-character command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} forward_character}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:forwardcharacter}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} character;position;point;forward-character}} forward-character
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^F}{\v Keystroke} and {\ul FNF}{\v Keystroke} (right arrow)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  forward-character
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} forward by {\i n} characters. If {\i n} is a negative number, the point is moved backward. If no {\ul numeric arguments}{\v Argument}
 is specified, the point is moved forward by one character.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab end of lines count as one character.
\par \pard\plain \s6\sa120 \f4\fs20 If the move would take the point beyond the boundaries of the buffer, this command fails and the point is left at said boundary.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} goto-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} goto_line}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:gotoline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;point;goto-line}} goto-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-G}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  goto-line
\par or
\par goto-line  {\i n}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the first character of line number {\i n} in the current {\ul buffer}{\v Buffer}.
\par The command fails if {\i n} is lower than 1 or if the buffer is empty. If {\i n} is greater than the number of lines in the buffer, the point is simply positioned at the end of the buffer.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} goto-mark command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} goto_mark}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:gotomark}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;mark;goto-mark}} goto-mark
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^G}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  goto-mark
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the location of the {\ul mark}{\v Mark} number {\i n}.
\par If no {\ul numeric arguments}{\v Argument} is specified, the mark number 0 is used.
\par If {\i n} is greater than 9, it is treated as the remainder of the division of {\i n} by 10.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} goto-matching-fence command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} goto_matching_fence}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:gotomatchingfence}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} goto-matching-fence;fence;brace;parenthesis;bracket}} goto-matching-fence
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^F}{\v Keystroke}
\par When the {\ul point}{\v Point} is located on a fence character (curly brace, bracket, or parenthesis), this {\uldb command}{\v Commands} will make it jump to the matching fence character.
\par If the point is not located on a fence character or there is no matching fence, a beep sounds and the command fails.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} grow-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} grow_window}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:growwindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} grow-window;resize;window}} grow-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^}{\v Keystroke} and {\ul ^XZ}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  grow-window
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} increases the height of the current {\ul window}{\v Window} by {\i n}
 lines. The window located immediately below the current window (or, if the current window is at the bottom of the {\ul screen}{\v Screen}, the window located immediately above it) shrinks by {\i n}
 lines. If that would cause the shrinking window to become too small to display any text, the command fails.
\par If the current screen contains only one window, the command fails.
\par If {\i n} is a negative number, this command acts as if the {\uldb shrink-window}{\v shrink_window} command had been invoked with the corresponding positive number (-{\i n}).
\par If no {\ul numeric arguments}{\v Argument} is specified, the height of the window is increased by one line.
\par To change the size of the current window by specifying an absolute value, use the {\uldb resize-window}{\v resize_window} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} handle-tab command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} handle_tab}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:handletab}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} tabs;handle-tab}} handle-tab
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^I}{\v Keystroke} (Tab key)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  handle-tab
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 handle-tab
\par \pard\plain \s6\sa120 \f4\fs20 The behavior of this {\uldb command}{\v Commands} depends on the {\ul numeric argument}{\v Argument} ({\i n}) that is supplied to it:
\par \pard\plain \s8\fi-360\li360\sa120\tx360\tx1440\tx2880\tx3600\tx4320 \f4\fs20 \tab With no argument, it simply inserts a single tab character or enough space characters (depending on its configuration...) to get to the next tab stop.
\par \tab With an non-zero argument {\i n}, tabs stops are reset to every {\i n}{\fs16\up6 th} column and {\b handle-tab} is reconfigured to insert {\ul space characters} in sufficient number to get to the next tab stop. This also sets the {\uldb $softtab}{\v 
_softtab} {\ul variable}{\v Variable} to {\i n}.
\par \tab With an argument {\i n} of zero, {\b handle-tab} is reconfigured so that it inserts {\ul true tab characters} (its default behavior) and the tab stop interval is reset to its default value of 8.
\par \pard\plain \s6\sa120 \f4\fs20 The distance which a true tab character moves the cursor is reflected by the value of the {\uldb $hardtab}{\v _hardtab} {\ul variable}{\v Variable}
. Initially set to 8, this determines how far each tab stop is placed from the previous one.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} help command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} help}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:help}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} help}} help
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-?}{\v Keystroke}
\par This {\uldb command}{\v Commands} brings up a {\ul window}{\v Window} to display the contents of a text file named EMACS.HLP located on the {\ul path}{\v Path}. This file usually contains a summary of the MicroEMACS commands and default key bindings.

\par The command fails if the EMACS.HLP file cannot be found.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} help-engine command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} help_engine}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:helpengine}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} help-engine;help}} help-engine
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 help-engine  {\i file}  {\i key}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 help-engine  {\i file}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} invokes the MS Windows WinHelp application to display the specified help {\i file}. If a {\i key}
 is specified, the WinHelp application is instructed to search and display the first topic that matches that {\i key}. Otherwise, the first topic displayed is the help file's table of content.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par This command is available only under the MS Windows version of MicroEMACS.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} hunt-backward command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} hunt_backward} +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:huntbackward} }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} hunt-backward;search}}{\fs16\up6  }hunt-backward
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul A-R}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  hunt-backward
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} searches backwards for the {\i n}th occurrence of the search string. That search string is the one that was used the last time a {\uldb search-forward}{\v 
search_forward} or {\uldb search-reverse}{\v search_reverse} command was issued. The interpretation of the search string is dependant on whether {\uldb MAGIC}{\v MAGIC} mode is set or not in the current {\ul buffer}{\v Buffer}.
\par If a matching text is found in the {\ul buffer}{\v Buffer}, the {\ul point}{\v Point} is moved to the first character of that text. Otherwise, the command fails. The command also fails if there is no search string.
\par If {\i n} is a negative number, this command acts as if the {\uldb hunt-forward}{\v hunt_forward} command had been invoked with the corresponding positive number (-{\i n}).
\par If no {\ul numeric arguments}{\v Argument} is specified, or if the numeric argument is null, it is equivalent to {\i n} = 1.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} hunt-forward command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} hunt_forward} +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:huntforward} }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} hunt-forward;search}}{\fs16\up6  }hunt-forward
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul A-S}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  hunt-forward
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} searches forward for the {\i n}th occurrence of the search string. That search string is the one that was used the last time a {\uldb search-forward}{\v 
search_forward} or {\uldb search-reverse}{\v search_reverse} command was issued. The interpretation of the search string is dependant on whether {\uldb MAGIC}{\v MAGIC} mode is set or not in the current {\ul buffer}{\v Buffer}.
\par If a matching text is found in the {\ul buffer}{\v Buffer}, the {\ul point}{\v Point} is moved to the first character following that text. Otherwise, the command fails. The command also fails if there is no search string.
\par If {\i n} is a negative number, this command acts as if the {\uldb hunt-backward}{\v hunt_backward} command had been invoked with the corresponding positive number (-{\i n}).
\par If no {\ul numeric arguments}{\v Argument} is specified, or if the numeric argument is null, it is equivalent to {\i n} = 1.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} i-shell command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} i_shell}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:ishell}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} i-shell;spawn;DOS;shell}} i-shell
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XC}{\v Keystroke}
\par This {\uldb command}{\v Commands} spawns a command line shell.
\par Under MS Windows, this command launches a {\ul DOS box}{\v DosBox} (a "shell box" under Windows NT). The current working directory where the shell starts is set to the directory of the file in the current {\ul window}{\v Window}
 (or, if that window is not associated to a filename, to the last visited directory).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} incremental-search command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} incremental_search}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:incrementalsearch}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} incremental-search;search}} incremental-search
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XS}{\v Keystroke}
\par This {\uldb command}{\v Commands} is always interactive. It prompts the user for  a search string but, unlike what happens with the {\uldb search-forward}{\v search_forward} command, the search happens and the display is u
pdated as each new search character is typed.
\par While searching towards the end of the {\ul buffer}{\v Buffer}, each successive character leaves the {\ul point}{\v Point} at the end of the entire matched string. Typing a {\ul ^S}{\v Keystroke}
 causes the next occurrence of the string to be searched for (where the next occurrence does not overlap the current occurrence). A {\ul ^R}{\v Keystroke} changes the direction to a backwards search (as performed by a {\uldb reverse-incremental-search}{
\v reverse_incremental_search} command), pressing the {\ul meta key}{\v MetaKey} terminates the search and {\ul ^G}{\v Keystroke} aborts the operation. Pressing the Backspace key (or using {\ul ^H}{\v Keystroke}
) backs up to the previous match of the string or, if the starting point is reached, it deletes the last character from the search string.
\par The characters composing the search string are always interpreted literally. {\uldb MAGIC}{\v MAGIC} mode has no effect on incremental searches.
\par If the search fails, a beep sounds and the search stalls until the search string is edited back into something that exists (or until the operation is aborted).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} indent-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} indent_region}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:indentregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} indent-region;tabs;region}} indent-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-)}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  indent-region
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts {\i n} tab characters in front of each line within the current {\uldb region}{\v Regions}.
\par If the {\ul numeric argument}{\v Argument} {\i n} is not specified, one tab is inserted per line.
\par If {\uldb CMODE}{\v CMODE} is set in the current {\ul buffer}{\v Buffer}, lines that begin by a pound sign "{\b #}" are not modified (this is to keep C preprocessor directives flush to the left).
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the {\uldb undent-region}{\v undent_region} command can be used to undo the effect of this command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} insert-clip command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} insert_clip}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:insertclip}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} insert-clip}} insert-clip
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul S-FNC}{\v Keystroke} (Shift + Insert)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  insert-clip
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} is only available under MS Windows. It inserts the contents of the Windows clipboard at the {\ul point}{\v Point}.
\par If the {\ul numeric argument}{\v Argument} {\i n} is specified, {\i n} copies of the clipboard's contents are inserted.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} insert-file command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} insert_file}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:insertfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} insert-file;file;read}} insert-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^I}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 insert-file  {\i file}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts the contents of the specified {\i file} into the current {\ul buffer}{\v Buffer}, at the {\ul point}{\v Point}. After the insertion, the point remains at its original place if the {
\uldb $yankflag}{\v _yankflag} {\ul variable}{\v Variable} is TRUE. Otherwise, the point is moved to the end of the inserted text.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} insert-space command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} insert_space}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:insertspace}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} insert-space}} insert-space
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^C}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  insert-space
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts {\i n} space characters at the {\ul point}{\v Point}. After the insertion, the point remains at its original place.
\par If the {\ul numeric argument}{\v Argument} {\i n} is not specified, a single space character is inserted.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} insert-string command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} insert_string}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:insertstring}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} insert-string}} insert-string
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  insert-string  {\i string}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts the specified {\i string} at the {\ul point}{\v Point}. After the insertion, the point is moved to the end of the inserted text.
\par If the {\ul numeric argument}{\v Argument} {\i n} is specified, {\i n} copies of the specified {\i string} are inserted (if {\i n} is negative, it is taken as -{\i n}). If {\i n} is 0, nothing happens.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} kill-paragraph command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} kill_paragraph}} {\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:killparagraph}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} kill-paragraph;delete;kill;paragraph}} kill-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^W}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  kill-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} deletes the current {\uldb paragraph}{\v Paragraphs}, leaving a copy of it in the {\ul kill buffer}{\v KillBuffer}.
\par If a positive {\ul numeric argument}{\v Argument} {\i n} is specified, {\i n} paragraphs, starting with the current one, are deleted. If {\i n} is negative or null, nothing happens.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} kill-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} kill_region}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:killregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} kill-region;kill;region}} kill-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^W}{\v Keystroke}
\par This {\uldb command}{\v Commands} deletes the characters belonging to the current {\uldb region}{\v Regions}, leaving a copy of the deleted text in the {\ul kill buffer}{\v KillBuffer}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} kill-to-end-of-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} kill_to_end_of_line}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:killtoendofline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} kill-to-end-of-line;kill}} kill-to-end-of-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^K}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  kill-to-end-of-line
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command's}{\v Commands} deletes text, leaving a copy of it in the {\ul kill buffer}{\v KillBuffer}. The text affected depends on the {\ul numeric arguments}{\v Argument} applied to the command:
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 If it is used without a numeric argument, kill-to-end-of-line truly behaves as its name indicates, deleting the text from the {\ul point}{\v Point}
 to the end of the current line, but preserving the newline character, unless the point is located at the end of a line in which case the command just deletes the newline character.
\par If the numeric argument is 0, the command deletes the text from the start of the current line up to the point.
\par If the numeric argument {\i n} is positive, the command deletes text from the point forward until {\i n} newlines have been removed.
\par If the numeric argument {\i n} is negative, the command deletes text from the point backwards until {\i n} newlines have been removed and the beginning of a line has been reached.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} list-buffers command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} list_buffers}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:listbuffers}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} list-buffers;buffer}} list-buffers
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^B}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 list-buffers
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  list-buffers
\par \pard\plain \f4\fs20 This {\uldb command}{\v Commands} creates a list of all the {\ul buffer}{\v Buffer} with, for each buffer, the file it was read from, its size, and the active {\uldb modes}{\v ModesOfOperation}. The list is stored in a buffer named "{
\b [Buffers]}" and is displayed in either a {\ul popup buffer}{\v PopupBuffer} 
\par \pard\plain \s6\sa120 \f4\fs20 or a regular {\ul window}{\v Window}, depending on the value of the {\uldb $popflag}{\v _popflag} {\ul variable}{\v Variable}.
\par Within the list, an at sign "{\b @}" in column one shows that a file has already been read into a buffer. A star "{\b *}" in column two means that the contents of the buffer have been modified since the last time they were written to disk. A pound sign "{
\b #}" in column three indicates the file was to large to read into memory and was truncated. A lower than sign "{\b <}" in column four indicates that the buffer has been {\uldb narrowed}{\v NarrowingYourScope}.
\par The {\uldb modes}{\v ModesOfOperation} are shown in columns 5 through 14, using a single letter code for each active mode:
\par \pard\plain \s7\fi-1080\li1440\sa120\tx1440\tx2880 \f4\fs20 {\b Code\tab Corresponding mode:}
\par \pard \s7\fi-1080\li1440\tx1440\tx2880 W\tab {\uldb WRAP}{\v WRAP}
\par C\tab {\uldb CMODE}{\v CMODE}
\par E\tab {\uldb EXACT}{\v EXACT}
\par V\tab {\uldb VIEW}{\v VIEW}
\par O\tab {\uldb OVER}{\v OVER}
\par M\tab {\uldb MAGIC}{\v MAGIC}
\par Y\tab {\uldb CRYPT}{\v CRYPT}
\par A\tab {\uldb ASAVE}{\v ASAVE}
\par \pard \s7\fi-1080\li1440\sa120\tx1440\tx2880 R\tab {\uldb REP}{\v REP}
\par \pard\plain \s6\sa120 \f4\fs20 Used without a {\uldb numeric argument}{\v NumericArguments}
, list-buffers does not list invisible buffers. If a numeric argument is given, this command lists all buffers, including those hidden buffers used by MicroEMACS for internal data and {\ul macros}{\v Macro} storage.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} list-screens command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} list_screens}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:listscreens}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} list-screens;screen}} list-screens
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul A-B}{\v Keystroke}
\par \pard\plain \f4\fs20 This {\uldb command}{\v Commands} creates a list of all the {\ul screens}{\v Screen} with, for each screen, the names of the {\ul buffers}{\v Buffer} visible in {\ul windows}{\v Window}
 on that screen. The list is stored in a buffer named "{\b [Screens]}" and is displayed in either a {\ul popup buffer}{\v PopupBuffer} 
\par \pard\plain \s6\sa120 \f4\fs20 or a regular {\ul window}{\v Window}, depending on the value of the {\uldb $popflag}{\v _popflag} {\ul variable}{\v Variable}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} list-screens command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} list_undos}} {\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:listscreens}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} list-screens;screen}} list-undos
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XU}{\v Keystroke}
\par This {\uldb command}{\v Commands} creates a list of all the memorized editing commands issued in the current {\ul buffers}{\v Buffer} visible in {\ul windows}{\v Window} on that screen. The list is stored in a buffer named "{\b [Undos]}
" and is displayed in either a {\ul popup buffer} or a regular {\ul window}{\v Window}, depending on the value of the {\uldb $popflag}{\v _popflag} {\ul variable}{\v Variable}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} macro-to-key command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} macro_to_key}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:macrotokey}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} macro-to-key;binding}} macro-to-key
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^K}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 macro-to-key  {\i macro name}  {\i keystroke}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} associates a {\ul macro}{\v Macro} with a {\i keystroke}, thus creating a {\ul binding}{\v Binding}. A keystroke can be bound only to one {\ul command}{\v Command}
 or macro at a time, so when you rebind it, the previous binding is forgotten. On the other hand, a macro can have more than one keystroke bound to it.
\par This command cannot be used to specify the key binding for a command. That is performed by the {\uldb bind-to-key}{\v bind_to_key} command.
\par The {\i keystroke} is specified using the {\uldb keystroke syntax}{\v Keystroke} or the {\uldb mouse syntax}{\v MouseAction}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} macro-to-menu command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} macro_to_menu}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:macrotomenu}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} macro-to-menu;binding;menu}} macro-to-menu
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 macro-to-menu  {\i macro name}  {\i menu name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} is available only under Microsoft Windows. It creates a menu item associated with the specified {\ul macro}{\v Macro}. The {\i menu name} is specified using the {\uldb menu name syntax}{\v 
MenuName}.
\par If the {\i menu name} designates a menu item that already exists, the command fails.
\par If the {\i menu name} specifies menus that do not exist yet, they are created as part of the creation of the menu item.
\par This command cannot be used to bind a {\ul command}{\v Command} to a menu. That is performed by the {\uldb bind-to-menu}{\v bind_to_menu} command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} maximize-screen command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} maximize_screen}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:maximizescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} MDI;screen;maximize-screen}} maximize-screen
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} is available only under Microsoft Windows. It causes the current {\ul screen}{\v Screen}
 to be enlarged so that it occupies all the available space on MicroEMACS's frame window. If the current screen is already maximized at the time this command is invoked, nothing happens.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par To restore the current screen to the size and position it had before invoking this command, use the {\uldb restore-screen}{\v restore_screen} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} meta-prefix command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} meta_prefix}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:metaprefix}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} meta-prefix}} meta-prefix
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^[}{\v Keystroke} (Escape key)
\par This is a dummy {\uldb command}{\v Commands} meant to be used in combination with the {\uldb bind-to-key}{\v bind_to_key} command in order to redefine the {\ul meta key}{\v MetaKey}.
\par For example, to define the F1 function key as being the meta key:
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f34\fs18 unbind-key  ^[
\par \pard \s4\fi-2160\li2880\sa120\tx2880 bind-to-key  meta-prefix  FN1
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} minimize-screen command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} minimize_screen}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:minimizescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} MDI;screen;minimize-screen}} minimize-screen
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} is available only under Microsoft Windows. It causes the current {\ul screen}{\v Screen}
 to be reduced to an icon. Unless there exists only one screen at the time this command is invoked another screen becomes the current one. If the screen being minimized was maximized (see {\uldb maximize-screen}{\v maximize_screen}
), the screen becoming current is also maximized.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par To restore the current screen to the size and position it had before invoking this command, use the {\uldb restore-screen}{\v restore_screen} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} mouse-move command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} mouse_move}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:mousemove}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mouse-move}} mouse-move
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul MSm}{\v MouseAction}, {\ul S-MSm}{\v MouseAction} and {\ul MS^m}{\v MouseAction} (mouse movement)
\par This {\uldb command}{\v Commands} is meant to be associated with a mouse movement. It updates the {\uldb $xpos}{\v _xpos} and {\uldb $ypos}{\v _ypos} {\ul variables}{\v Variable} to contain the coordinates of the mouse pointer.
\par If the {\uldb $hilight}{\v _hilight} variable is set to a value {\i n} between 0 and 14, this command updates the {\ul mark}{\v Mark} number {\i n}+1 so that the highlighted {\ul region}{\v Region} is automatically updated.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the mouse actions {\ul MSm}{\v MouseAction}, {\ul S-MSm}{\v MouseAction} or {\ul MS^m}{\v MouseAction} may not be generated for all mouse movements, depending on the value of the {\uldb $mmove}{\v 
_mmove} variable.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} mouse-move-down command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} mouse_move_down}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:mousemovedown}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mouse-move-down}} mouse-move-down
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul MSa}{\v MouseAction} (Press on left mouse button)
\par This {\uldb command}{\v Commands} is meant to be associated with a mouse action. It depends on the {\uldb $xpos}{\v _xpos} and {\uldb $ypos}{\v _ypos} {\ul variables}{\v Variable} to contain the coordinates of the mouse pointer. It makes the {\ul screen}{
\v Screen} and {\ul window}{\v Window} where the mouse was clicked the current ones. If the mouse pointer is within the text part of a window (as opposed to the {\ul mode line}{\v ModeLine}
) the point is placed at that position in the text (or at the end of the line if the mouse pointer lies beyond the end of a line).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab 
Under the MS-Windows version of MicroEMACS, the selection of the current screen is performed by the press on the left mouse button, regardless of the button's binding. Mouse commands themselves cannot select the current screen.
\par \pard\plain \s6\sa120 \f4\fs20 See also: {\uldb mouse-move-up}{\v mouse_move_up}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} mouse-move-up command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} mouse_move_up}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:mousemoveup}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mouse-move-up}} mouse-move-up
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul MSb}{\v MouseAction} (Release of left mouse button)
\par This {\uldb command}{\v Commands} is meant to be associated with a mouse action. It depends on the {\uldb $xpos}{\v _xpos} and {\uldb $ypos}{\v _ypos} {\ul variables}{\v Variable}
 to contain the coordinates of the mouse pointer. The actions performed by this command depend of where the previous {\uldb mouse-move-down}{\v mouse_move_down} command was invoked:
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 If the mouse pointer was in the {\ul mode line}{\v ModeLine} part of a {\ul window}{\v Window}
 and still is within that mode line, or if it was in the text part of the window and still is, the text in the window is scrolled as if it had been {\uldb dragged}{\v ScrollingTextInsideAWindow}
 by the mouse. Note that diagonal dragging is possible only if the {\uldb $diagflag}{\v _diagflag} {\ul variable}{\v Variable} is set to TRUE.
\par If the mouse pointer was on a mode line (except the bottom one), but has moved above or under it, the mode line is {\uldb moved}{\v MovingAModeLine} up or down as if it had been dragged by the mouse, thus resizing the affected windows.
\par Other cases produce no effect.
\par \pard\plain \s6\sa120 \f4\fs20 The command fails (putting FALSE in the {\uldb $status}{\v _status} variable) if the position of the mouse pointer is the s
ame as that for the last mouse-move-down command. This allows easy detection of lack of mouse movement when the command is used in a {\ul macro}{\v Macro}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab Under the MS-Windows version of MicroEMACS, the top left and bottom right corners of a {\ul screen}{\v Screen}
 have no special meaning. Under other versions, mouse-move-up will move the screen if the mouse-move-down was done in the top left corner and resize the screen if mouse-move-down was done in the bottom right corner.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} mouse-region-down and mouse-region-up commands}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 mouse_region_down}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:mouseregiondown}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mouse-region-down;mouse-region-up}} mouse-region-down 
{\plain \f4\fs20 and} mouse-region-up
\par \pard\plain \s6 \f4\fs20 Default binding:\tab {\ul MSe}{\v MouseAction} (Press on right mouse button)
\par \pard \s6\sa120 \tab and:\tab {\ul MSf}{\v MouseAction} (Release of right mouse button)
\par These {\uldb commands}{\v Commands} are meant to be associated with the two parts of a mouse click. Their rather complex behavior is dependant on where the last mouse action took place and is best described by the following topics:
\par \pard\plain \s11\li360\tx2880 \f4\fs20 {\uldb Copying a Region}{\v CopyARegion}
\par {\uldb Killing a Region}{\v KillARegion}
\par \pard \s11\li360\sa120\tx2880 {\uldb Pasting Text}{\v PastingText}
\par \pard\plain \s6\sa120 \f4\fs20 These commands are unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} mouse-resize-screen command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} mouse_resize_screen}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:mouseresizescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} mouse-resize-screen;screen}} mouse-resize-screen
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par This {\uldb command}{\v Commands} is meant to be associated with a mouse action. It depends on the {\uldb $xpos}{\v _xpos} and {\uldb $ypos}{\v _ypos} {\ul variables}{\v Variable}
 to contain the coordinates of the mouse pointer. It modifies the size of the current {\ul screen}{\v Screen}, bringing its lower right corner to where the mouse was clicked.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} move-window-down command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} move_window_down}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:movewindowdown}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} move-window-down;scroll;window}} move-window-down
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^N}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  move-window-down
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul window's}{\v Window} view into it's {\ul buffer}{\v Buffer} down by {\i n} lines, causing the text visible in the window to scroll up. If the {\ul point}{\v Point}
 scrolls out of view, it is repositioned on the first character of the line located at the center of the window.
\par If no {\ul numeric argument}{\v Argument} is specified, the text is scrolled by one line.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} move-window-up command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} move_window_up}} {\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:movewindowup}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} move-window-upscroll;window}} move-window-up
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^P}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  move-window-up
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul window's}{\v Window} view into it's {\ul buffer}{\v Buffer} up by {\i n} lines, causing the text visible in the window to scroll down. If the {\ul point}{\v Point}
 scrolls out of view, it is repositioned on the first character of the line located at the center of the window.
\par If no {\ul numeric argument}{\v Argument} is specified, the text is scrolled by one line.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} name-buffer command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} name_buffer}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:namebuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} name-buffer;buffer}} name-buffer
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^N}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 name-buffer  {\i name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} renames the current {\ul buffer}{\v Buffer}, giving it the specified {\i name}
. Note that when a buffer is associated with a file, changing the buffer's name has no effect on the file's name.
\par If a buffer bearing the specified {\i name} already exists, another argument is required, and so on until a unique name is supplied.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} narrow-to-region command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} narrow_to_region}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:narrowtoregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} narrow-to-region;region;buffer;scope}} narrow-to-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X<}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes the text that does not belong to the current {\ul region}{\v Region} to become inaccessible until the {\uldb widen-from-region}{\v widen_from_region} command is invoked. The {\ul mode line}{\v ModeLine}
 displays the symbol "{\b <>}" to indicate that the current {\ul window}{\v Window} is associated with a {\uldb narrowed}{\v NarrowingYourScope} {\ul buffer}{\v Buffer}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} newline command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} newline}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:newline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} newline}} newline
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^M}{\v Keystroke} (Return key)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  newline
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts {\i n} newline characters at the {\ul point}{\v Point}. If the {\ul numeric arguments}{\v Argument} is absent, it is taken as 1.
\par If {\i n} is equal to 1 and the {\ul buffer}{\v Buffer} is in {\uldb CMODE}{\v CMODE} mode, C language indentation is performed:
\par \pard\plain \s11\li360\sa120\tx2880 \f4\fs20 If the new line is not empty (i.e. the point was not at the end of a line), no other action takes place.
\par The new line is indented at the same level as the closest preceding non blank line
\par If the newline was inserted right after an opening brace "{\b \{}", the new line is further indented by one tab stop (as if the {\uldb handle-tab}{\v handle_tab} command had been used).
\par \pard\plain \s6\sa120 \f4\fs20 If the buffer is in {\uldb WRAP}{\v WRAP} mode and the point is past the fill column, wrapping is performed on the last word of the current line before the newline character is inserted.
\par The command fails if {\i n} is negative.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} newline-and-indent command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} newline_and_indent}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:newlineandindent}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} newline-and-indent;newline}} newline-and-indent
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^J}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  newline-and-indent
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts {\i n} newline characters at the {\ul point}{\v Point}. If the {\ul numeric arguments}{\v Argument} {\i n} is absent, it is taken as 1.
\par The new line is indented with enough tab and space characters to match the indentation of the preceding line (the one where the point was when newline-and-indent was invoked).
\par The command fails if {\i n} is negative.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} next-buffer command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} next_buffer}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nextbuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} next-buffer;buffer}} next-buffer
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XX}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  next-buffer
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the current {\ul window}{\v Window} to display the {\i n}{\up6 th} next {\ul buffer}{\v Buffer} in the circular list of buffers kept by MicroEMACS. If the {\ul numeric arguments}{\v 
Argument} {\i n} is absent, it is taken as 1.
\par The command fails if {\i n} is not positive.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} next-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} next_line}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nextline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;point;next-line}} next-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^N}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  next-line
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the {\i n}{\up6 th} next line. If the {\ul numeric arguments}{\v Argument} {\i n} is absent, it is taken as 1.
\par If {\i n} is negative, the point is moved to the {\i n}{\up6 th} previous line. If {\i n} is 0, nothing happens.
\par When line move commands ({\b next-line} or {\uldb previous-line}{\v previous_line}
) are used in a row, the point is kept at the same column it was at before the first of the line moves. If that column lies beyond the end of the current line the point is temporarily brought back to the end of that line.
\par The command fails if the point is already at the end of the {\ul buffer}{\v Buffer} (or the beginning if {\i n} is negative).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} next-page command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} next_page}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nextpage}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;next-page}} next-page
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul ^V}{\v Keystroke} and {\ul FNV}{\v Keystroke} (Page Down key)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 next-page
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  next-page
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} has two different behaviors, depending on the presence or absence of a {\ul numeric arguments}{\v Argument}:
\par If no numeric argument is specified, the {\ul window's}{\v Window} view into it's {\ul buffer}{\v Buffer} is paged down. The new view overlaps the previous one by the number of lines specified by the {\uldb $overlap}{\v _overlap} {\ul variable}{\v 
Variable}. By default, $overlap is equal to 2, so the last two lines of text in the initial view are displayed at the top of the window.
\par If a positive numeric argument {\i n} is specified, the window's view into it's buffer is moved down by {\i n} lines, causing the text visible in the window to scroll up.
\par If a negative numeric argument {\i n} is specified, the window's view into it's buffer is moved up by {\i n} lines, causing the text visible in the window to scroll down, as if the {\uldb previous-page}{\v previous_page}
 command had been invoked, with a numeric argument of -{\i n}.
\par In all cases, even if a numeric argument of 0 is given, the {\ul point}{\v Point} is moved to the first character at the top of the window.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} next-paragraph command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} next_paragraph}} {\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nextparagraph}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} next-paragraph;position;point;paragraph}} next-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-N}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  next-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 If used without a {\ul numeric arguments}{\v Argument}, this {\uldb command}{\v Commands} moves the {\ul point}{\v Point} just past the last character of the current {\uldb paragraph}{\v Paragraphs}
 or, if outside a paragraph, to the end of the next paragraph.
\par If this command is used with a positive numeric argument {\i n}, the point is moved to the {\i n}{\up6 th} next end of paragraph.
\par If {\i n} is negative, next-paragraph behaves as if the {\uldb previous-paragraph}{\v previous_paragraph} command had been invoked with an argument of {\i -n}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} next-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} next_window}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nextwindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} next-window;window}} next-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XO}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  next-window
\par \pard\plain \s6\sa120 \f4\fs20 If used without a {\ul numeric arguments}{\v Argument}, this {\uldb command}{\v Commands} makes the next {\ul window}{\v Window}
 immediately below the current one the new current window. MicroEMACS updates the highlight of the {\ul mode line}{\v ModeLine} to indicate the new current window, and places the blinking cursor at the {\ul point}{\v Point} within that window.
\par If this command is used with a positive numeric argument {\i n}, the {\i n}{\up6 th} window from the top of the {\ul screen}{\v Screen} is made the current one (window numbering starts at 1).
\par If {\i n} is negative, the {\i -n}{\up6 th} window from the bottom of the screen is made the current one.
\par The command fails if {\i n} (or {\i -n}) is greater than the number of windows in the screen.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} next-word command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} next_word}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nextword}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} next-word;word;position;point}} next-word
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul M-F}{\v Keystroke} and {\ul FN^F}{\v Keystroke} (Ctrl + Right arrow)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  next-word
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the first character of the {\i n}{\up6 th} next {\uldb word}{\v Words}. If an attempt is made to move past the {\ul buffer}{\v Buffer}
's end, the command fails but the point is still moved to the end of the buffer.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 1.
\par If {\i n} is null, the command has no effect.
\par If {\i n} is negative, it causes the command to behave like {\uldb previous-word}{\v previous_word} (invoked with the numeric argument {\i -n}).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} nop command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} nop}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:nop}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} nop}} nop
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} has no effect and is unaffected by {\ul numeric arguments}{\v Argument}. Its main purpose is to be the command pointed to by the {\uldb $bufhook}{\v _bufhook}, {\uldb $cmdhook}{\v _cmdhook}, {\uldb $exbhook}{\v _exbhook}
, {\uldb $readhook}{\v _readhook} and {\uldb $writehook}{\v _writehook} {\ul variables}{\v Variable}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} open-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} open_line}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:openline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} open-line;newline}} open-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^O}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  open-line
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} adds {\i n} newline characters after the {\ul point}{\v Point}. If the {\ul numeric arguments}{\v Argument} is absent, it is taken as 1.
\par The command fails if {\i n} is negative.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} overwrite-string command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} overwrite_string}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:overwritestring}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} overwrite-string;OVER}} overwrite-string
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 overwrite-string  {\i string}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} replaces the characters from the {\ul point}{\v Point} on with the characters from the specified {\i string}
. If the overwriting would extend past the end of the line, the remaining characters from the {\i string} are simply added at the end of the line (the newline character is not overwritten).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} pipe-command command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} pipe_command}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:pipecommand}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} pipe-command;execute;spawn;DOS;shell;pipe}} pipe-command
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X@}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 pipe-command  {\i program}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} uses the shell to execute a program, but rather than displaying what the program prints, it attempts to place it in a {\ul buffer}{\v Buffer}
 named "command" to let you edit it and/or save it. 
\par The {\i program} argument is a string. Note that if it contains spaces (as would be necessary to specify command line options), the string should be quoted.
\par The {\uldb VIEW}{\v VIEW} mode is set on the "command" buffer at completion of this command. 
\par Under Microsoft Windows, this command launches the {\i program} within a {\ul DOS box}{\v DosBox} and {\uldb synchronizes}{\v SynchronizingWithADosBox} with it. The current working directory where the {\i program}
 executes is set to the directory of the file in the current {\ul window}{\v Window} (or, if that window is not associated to a filename, to the last visited directory).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} pop-buffer command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} pop_buffer}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:popbuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} pop-buffer;buffer}} pop-buffer
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 pop-buffer  {\i buffer}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  pop-buffer  {\i buffer}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the specified {\ul buffer}{\v Buffer} to be displayed as a {\ul popup}{\v PopupBuffer} in the current {\ul screen}{\v Screen}.
\par If a {\ul numeric arguments}{\v Argument} is present, the buffer is marked as being invisible (hidden from the {\uldb next-buffer}{\v next_buffer} command).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} previous-line command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} previous_line}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:previousline}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;point;previous-line}} previous-line
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^P}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  previous-line
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the {\i n}{\up6 th} previous line. If the {\ul numeric arguments}{\v Argument} {\i n} is absent, it is taken as 1.
\par If {\i n} is negative, the point is moved to the {\i n}{\up6 th} next line. If {\i n} is 0, nothing happens.
\par When line move commands ({\uldb next-line}{\v next_line} or {\b previous-line}
) are used in a row, the point is kept at the same column it was at before the first of the line moves. If that column lies beyond the end of the current line the point is temporarily brought back to the end of that line.
\par The command fails if the point is already at the beginning of the {\ul buffer}{\v Buffer} (or the end if {\i n} is negative) 
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} previous-page command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} previous_page}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:previouspage}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} position;previous-page}} previous-page
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul M-V}{\v Keystroke} and {\ul FNZ}{\v Keystroke} (Page Up key)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 previous-page
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  previous-page
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} has two different behaviors, depending on the presence or absence of a {\ul numeric arguments}{\v Argument}:
\par If no numeric argument is specified, the {\ul window's}{\v Window} view into it's {\ul buffer}{\v Buffer} is paged up. The new view overlaps the previous one by the number of lines specified by the {\uldb $overlap}{\v _overlap} {\ul variable}{\v Variable}
. By default, $overlap is equal to 2, so the top two lines of text in the initial view are displayed at the bottom of the window.
\par If a positive numeric argument {\i n} is specified, the window's view into it's buffer is moved up by {\i n} lines, causing the text visible in the window to scroll down.
\par If a negative numeric argument {\i n} is specified, the window's view into it's buffer is moved down by {\i n} lines, causing the text visible in the window to scroll up, as if the {\uldb next-page}{\v next_page}
 command had been invoked, with a numeric argument of -{\i n}.
\par In all cases, even if a numeric argument of 0 is given, the {\ul point}{\v Point} is moved to the first character at the top of the window.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} previous-paragraph command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} previous_paragraph}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:previousparagraph}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} previous-paragraph;position;point;paragraph}} previous-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-P}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  previous-paragraph
\par \pard\plain \s6\sa120 \f4\fs20 If used without a {\ul numeric arguments}{\v Argument}, this {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the first character of the current {\uldb paragraph}{\v Paragraphs}
 or, if outside a paragraph, to the beginning of the previous paragraph.
\par If this command is used with a positive numeric argument {\i n}, the point is moved back to the {\i n}{\up6 th} beginning of paragraph.
\par If {\i n} is negative, next-paragraph behaves as if the {\uldb next-paragraph}{\v next_paragraph} command had been invoked with an argument of {\i -n}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} previous-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} previous_window}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:previouswindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} previous-window;window}} previous-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XP}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  previous-window
\par \pard\plain \s6\sa120 \f4\fs20 If used without a {\ul numeric arguments}{\v Argument}, this {\uldb command}{\v Commands} makes the {\ul window}{\v Window} immediately above the current one the new current window. MicroEMACS updates the highlight of the {
\ul mode line}{\v ModeLine} to indicate the new current window, and places the blinking cursor at the {\ul point}{\v Point} within that window.
\par If this command is used with a positive numeric argument {\i n}, the {\i n}{\up6 th} window from the bottom of the {\ul screen}{\v Screen} is made the current one (window numbering starts at 1).
\par If {\i n} is negative, the {\i -n}{\up6 th} window from the top of the screen is made the current one.
\par The command fails if {\i n} (or {\i -n}) is greater than the number of windows in the screen.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} previous-word command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} previous_word}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:previousword}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} previous-word;position;point;word}} previous-word
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul M-B}{\v Keystroke} and {\ul FN^B}{\v Keystroke} (Ctrl + Left arrow)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  previous-word
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} moves the {\ul point}{\v Point} to the beginning character of the {\i n}{\up6 th} preceding {\uldb word}{\v Words}
. If the point was located within a word before invoking the command, that word counts as the first one (thus, if {\i n} is 1, the point moves to the first character of the current word). If an attempt is made to move beyond the {\ul buffer}{\v Buffer}
's beginning, the command fails but the point is still moved to the beginning of the buffer.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 1.
\par If {\i n} is null, the command has no effect.
\par If {\i n} is negative, it causes the command to behave like {\uldb next-word}{\v next_word} (invoked with the numeric argument {\i -n}).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} query-replace-string command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} query_replace_string}
 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:queryreplacestring} }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} query-replace-string;replace}}{\fs16\up6  }query-replace-string
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^R}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  query-replace-string  {\i pattern}  {\i replacement}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} attempts to replace, from the {\ul point}{\v Point} onward, each piece of text that matches the {\i pattern} string by the {\i replacement} string. The {\i pattern}
 string is interpreted literally, unless {\uldb MAGIC}{\v MAGIC} mode is enabled in the current {\ul buffer}{\v Buffer}.
\par Each time a match is found, you are queried and can answer by one of the following keystrokes:
\par \pard\plain \s7\fi-1080\li1440\sa120\tx1440\tx2880 \f4\fs20 {\b Y}\tab replaces the current matching text
\par {\b N\tab }skips the current match
\par {\b !\tab }replaces the current matching text and all following matches without anymore queries.
\par {\b U\tab }jumps back to the last performed replacement and undoes it
\par {\ul ^G}{\v Keystroke}\tab aborts the command, leaving the {\ul point}{\v Point} at its current position
\par {\b .} (dot)\tab aborts and moves the point back to where the command was originally issued
\par {\b ?\tab }lists the above options
\par \pard\plain \s6\sa120 \f4\fs20 If no {\ul numeric arguments}{\v Argument} is specified, all the matching pieces of text are processed until the end of the buffer is reached. If a positive numeric argument is used, only the first {\i n}
 matches are taken into account. If {\i n} is negative, the command fails.
\par When this command is invoked interactively, the keystroke used to signal the end of the {\i pattern} or {\i replacement} string is specified by the {\uldb $sterm}{\v _sterm} {\ul variable}{\v Variable} (it is usually the {\ul Meta key}{\v MetaKey}
). Also, both strings may have default values (which are stored in the {\uldb $search}{\v _search} and {\uldb $replace}{\v _replace} variables). If you want to replace a string with nothing, and there is a non-empty default for the {\i replacement}
 string, striking {\ul ^K}{\v Keystroke} will override that default and enter an empty string instead.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab to perform global string replacements without interactive involvement, use the {\uldb replace-string}{\v replace_string} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} quick-exit command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} quick_exit}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:quickexit}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} quick-exit;exit;quit}} quick-exit
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-Z}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes MicroEMACS to terminate, but only after having written all the changed {\ul buffers}{\v Buffer} into their respective files.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab to terminate MicroEMACS without saving the changed buffers, use the {\uldb exit-emacs}{\v exit_emacs} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} quote-character command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} quote_character}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:quotecharacter}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} quote-character}} quote-character
\par \pard\plain \s6\sa120\tx360 \f4\fs20 Default binding: {\ul ^Q}{\v Keystroke}
\par \pard \s6\sa120 Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  quote
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts literally the next character typed by the user at the {\ul point}{\v Point}
. Even the newline character can be inserted this way, but this causes it to loose its line-splitting meaning.
\par If a positive {\ul numeric arguments}{\v Argument} is specified, the quoted character is inserted {\i n} times. If {\i n} is negative, the command fails. If {\i n} is null, nothing is inserted, but the typing of a character is still required.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} read-file command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} read_file}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:readfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} read-file;read;file}} read-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^R}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 read-file  file name
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} reads the named file into the current {\ul buffer}{\v Buffer},
 replacing the buffer's contents with the text from the file. The file name associated to the buffer is not changed, so you must make sure that replacing the text in the original file with that from the read one is what you are intending when you use this
 command.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} redraw-display command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} redraw_display}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:redrawdisplay}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} redraw-display;window}} redraw-display
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul M-^L}{\v Keystroke} and {\ul M-!}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  redraw-display
\par \pard\plain \s6\sa120 \f4\fs20 If a non zero {\ul numeric argument}{\v Argument} is specified, this {\uldb command}{\v Commands} scrolls the text in the current {\ul window}{\v Window} so that the current line is displayed as the {\i n}{\up6 th}
 line from the top of the window if {\i n} is positive, or as the {\i -n}{\up6 th} line from the bottom of the window if {\i n} is negative.
\par If no numeric argument is specified, or if {\i n} is zero, the current line is displayed at the center of the window.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} remove-mark command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} remove_mark}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:removemark}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} remove-mark;mark}} remove-mark
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X  }{\v Keystroke} (Ctrl+X Spacebar)
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  remove-mark
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} eliminates the {\ul mark}{\v Mark} number {\i n}.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 0.
\par If mark{\i n} does not exist, nothing happens.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} rename-screen command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} rename_screen}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:renamescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} rename-screen;screen}} rename-screen
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 rename-screen  {\i new name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} changes the name of the current {\ul screen}{\v Screen} to the specified {\i new name}. If the {\i new name} is already in use, the command fails.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} replace-string command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} replace_string} +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:replacestring} }{\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} replace-string;replace}}{\fs16\up6  }replace-string
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-R}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  replace-string  {\i pattern}  {\i replacement}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} replaces, from the {\ul point}{\v Point} onward, each piece of text that matches the {\i pattern} string by the {\i replacement} string. The {\i pattern}
 string is interpreted literally, unless {\uldb MAGIC}{\v MAGIC} mode is enabled in the current {\ul buffer}{\v Buffer}.
\par If no {\ul numeric arguments}{\v Argument} is specified, all the matching pieces of text are processed until the end of the buffer is reached. If a positive numeric argument is used, only the first {\i n} matches are processed. If {\i n}
 is negative, the command fails.
\par When this command is used interactively, the keystroke used to signal the end of the {\i pattern} or {\i replacement} string is specified by the {\uldb $sterm}{\v _sterm} {\ul variable}{\v Variable} (it is usually the {\ul Meta key}{\v MetaKey}). Also, bo
th strings may have default values (which are stored in the {\uldb $search}{\v _search} and {\uldb $replace}{\v _replace} variables). If you want to replace a string with nothing, and there is a non-empty default for the {\i replacement} string, striking 
{\ul ^K}{\v Keystroke} will override that default and enter an empty string instead.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab to have more interactive control over the replacement process, use the {\uldb query-replace-string}{\v query_replace_string} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} resize-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} resize_window}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:resizewindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} resize-window;resize;window}} resize-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XW}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  resize-window
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} changes the height of the current {\ul window}{\v Window} so that it displays {\i n}
 lines of text. The window located immediately below the current window (or, if the current window is at the bottom of the {\ul screen}{\v Screen}
, the window located immediately above it) shrinks accordingly. If that would cause the shrinking window to become too small to display any text, the command fails.
\par If the current screen contains only one window, or if {\i n} is a negative number, the command fails.
\par If no {\ul numeric arguments}{\v Argument} is specified, nothing happens.
\par To change the size of the current window by specifying a relative value, use the {\uldb grow-window}{\v grow_window} or the {\uldb shrink-window}{\v shrink_window} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} restore-screen command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} restore_screen}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:restorescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} restore-screen;screen}} restore-screen
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} is available only under Microsoft Windows. It causes the current {\ul screen}{\v Screen} to be restored to the size and position it had before it was maximized (see {\uldb maximize-screen}{\v maximize_screen}
) or iconized.(see {\uldb minimize-screen}{\v minimize_screen}). If the current screen is neither maximized nor iconized this command has no effect.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} restore-window command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} restore_window}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:restorewindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} restore-window;save-window}} restore-window
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} is only useful when there are multiple {\ul windows}{\v Window} displayed on the current {\ul screen}{\v Screen}. It causes the window that was current the last time the {\uldb save-window}{\v save_window}
 command was invoked to become the current window again.
\par If the window that was current the last time {\b save-window} was invoked no longer exists, or if the screen is not the same, this command fails.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} reverse-incremental-search command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #}
 reverse_incremental_search}} {\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:reverseincrementalsearch}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} reverse-incremental-search;search}}
 reverse-incremental-search
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XR}{\v Keystroke}
\par This {\uldb command}{\v Commands} is always interactive. It prompts the user for  a search string but, unlike what happens with the {\uldb search-reverse}{\v search_reverse}
 command, the search happens and the display is updated as each new search character is typed.
\par While searching towards the beginning of the {\ul buffer}{\v Buffer}, each successive character leaves the {\ul point}{\v Point} at the beginning of the matched string. Typing a {\ul ^R}{\v Keystroke}
 causes the next occurrence of the string to be searched for (where the next occurrence does not overlap the current occurrence). A {\ul ^S}{\v Keystroke} changes the direction to a forward search (as performed by an {\uldb incremental-search}{\v 
incremental_search} command), pressing the {\ul meta key}{\v MetaKey} terminates the search and {\ul ^G}{\v Keystroke} aborts the operation. Pressing the Backspace key (or using {\ul ^H}{\v Keystroke}
) returns to the previous match of the string or, if the starting point is reached, it deletes the last character from the search string.
\par The characters composing the search string are always interpreted literally. {\uldb MAGIC}{\v MAGIC} mode has no effect on incremental searches.
\par If the search fails, a beep sounds and the search stalls until the search string is edited back into something that exists (or until the operation is aborted).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} save-file command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} save_file}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:savefile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} save-file;save;file;write}} save-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^S}{\v Keystroke}
\par This {\uldb command}{\v Commands} writes the contents of the current {\ul buffer}{\v Buffer} to disk, if the buffer's contents have been changed since the last read or write operation or the last invocation of the {\uldb unmark-buffer}{\v unmark_buffer}
 command.
\par If the current buffer does not have a file name associated to it (for instance if the buffer has never been subjected to a {\uldb find-file}{\v find_file}, {\uldb read-file}{\v read_file}, {\uldb write-file}{\v write_file} or {\uldb change-file-name}{\v 
change_file_name} command), the save-file command fails.
\par If the current buffer is {\uldb narrowed}{\v NarrowingYourScope}, a confirmation is requested before writing the text to the file.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} save-window command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} save_window}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:savewindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} save-window;restore-window}} save-window
\par \pard\plain \s6\sa120 \f4\fs20 No default binding.
\par This {\uldb command}{\v Commands} saves a reference to the current {\ul window}{\v Window}, so that the next time the {\uldb restore-window}{\v restore_window} command is invoked, that window becomes the current window again.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} scroll-next-down command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} scroll_next_down}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:scrollnextdown}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} scroll-next-down;next-page}} scroll-next-down
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^V}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 scroll-next-down
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  scroll-next-down
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the equivalent of a {\uldb next-page}{\v next_page} command to be performed on the {\ul window}{\v Window}
 located just below the current one (or the top window if the current one is at the bottom of the {\ul screen}{\v Screen}).
\par If there is only one window displayed in the current screen, this command is equivalent to the next-page command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} scroll-next-up command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} scroll_next_up}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:scrollnextup}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} scroll-next-up;previous-page}} scroll-next-up
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: 
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 scroll-next-up
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  scroll-next-up
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the equivalent of a {\uldb previous-page}{\v previous_page} command to be performed on the {\ul window}{\v Window}
 located just below the current one (or the top window if the current one is at the bottom of the {\ul screen}{\v Screen}).
\par If there is only one window displayed in the current screen, this command is equivalent to the previous-page command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} search-forward command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} search_forward}} {\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:searchforward}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} search-forward;search}} search-forward
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^S}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  search-forward  {\i search string}
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} searches forward for the {\i n}th occurrence of the {\i search string}. The interpretation of the {\i search string} is dependant on whether {\uldb MAGIC}{\v 
MAGIC} mode is set or not in the current {\ul buffer}{\v Buffer}.
\par If a matching text is found in the {\ul buffer}{\v Buffer}, the {\ul point}{\v Point} is moved to the first character following that text. Otherwise, the command fails.
\par If {\i n} is a negative number, this command acts as if the {\uldb search-reverse}{\v search_reverse} command had been invoked with the corresponding positive number (-{\i n}).
\par If no {\ul numeric arguments}{\v Argument} is specified, or if the numeric argument is null, it is equivalent to {\i n} = 1.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the {\i search string} becomes the value of the {\uldb $search}{\v _search} {\ul variable}{\v Variable}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} search-reverse command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} search_reverse}} {\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:searchreverse}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} search-reverse;search}} search-reverse
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^R}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  search-reverse  {\i search string}
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} searches backwards for the {\i n}th occurrence of the {\i search string}. The interpretation of the {\i search string} is dependant on whether {\uldb MAGIC}{
\v MAGIC} mode is set or not in the current {\ul buffer}{\v Buffer}.
\par If a matching text is found in the {\ul buffer}{\v Buffer}, the {\ul point}{\v Point} is moved to the first character of that text. Otherwise, the command fails.
\par If {\i n} is a negative number, this command acts as if the {\uldb search-forward}{\v search_forward} command had been invoked with the corresponding positive number (-{\i n}).
\par If no {\ul numeric arguments}{\v Argument} is specified, or if the numeric argument is null, it is equivalent to {\i n} = 1.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the {\i search string} becomes the value of the {\uldb $search}{\v _search} {\ul variable}{\v Variable}
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} select-buffer command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} select_buffer}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:selectbuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} select-buffer;buffer}} select-buffer
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^XB}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 select-buffer  {\i buffer}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  select-buffer  {\i buffer}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} displays the named {\i buffer} in the current {\ul window}{\v Window}. If that {\ul buffer}{\v Buffer} does not yet exist, it is created.
\par If a {\ul numeric arguments}{\v Argument} is present, the buffer is marked as being invisible (hidden from the {\uldb next-buffer}{\v next_buffer} command).
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} set command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} set}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:set}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} set;variable}} set
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^A}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 set  {\i variable}  {\i value}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  set  {\i variable}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} sets the value of the specified {\uldb variable}{\v Variables} to {\i n} if a {\ul numeric arguments}{\v Argument} is present and to {\i value} otherwise.
\par The {\i variable} must be a {\uldb user variable}{\v UserVariables} or an {\uldb environmental variable}{\v EnvironmentalVariables} . In the latter case, if the environmental variable does not exist, the command fails.
\par If {\i value} is the string "ERROR", the command fails (this allows detection of error cases when {\i value} is actually a {\ul function}{\v Function}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} set-encryption-key command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} set_encryption_key}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:setencryptionkey}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} set-encryption-key;encryption}} set-encryption-key
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-E}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 set-encryption-key  {\i key}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} sets the current {\ul buffer's}{\v Buffer} encryption key (used when the buffer is in {\uldb CRYPT}{\v CRYPT}
 mode). The specified key can be up to 128 characters long. A length of at least 5 characters is recommended.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} set-mark command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} set_mark}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:setmark}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} set-mark;mark}} set-mark
\par \pard\plain \s6\sa120 \f4\fs20 Default bindings: {\ul M-  }{\v Keystroke} (Esc Spacebar) and {\ul M-.}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  set-mark
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} sets the {\ul mark}{\v Mark} number {\i n} at the {\ul point}{\v Point}.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 0.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} shell-command command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} shell_command}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:shellcommand}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} shell-command;execute;spawn;shell;DOS}} shell-command
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X!}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 shell-command  {\i program
\par }\pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  shell-command  {\i program
\par }\pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} uses the shell to execute the named {\i program}.
\par The {\i program} argument is a string. Note that if it contains spaces (as would be necessary to specify command line options), the string should be quoted.
\par Under MS-Windows:
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 \tab This command launches the {\i program} within a {\ul DOS box}{\v DosBox}. The current working directory where the {\i program} executes is set to the directory of the file in the current {\ul window}{\v 
Window} (or, if that window is not associated to a filename, to the last visited directory).
\par \tab If no {\ul numeric argument}{\v Argument} is specified, MicroEMACS and the launched {\i program} run independently. If a numeric argument is specified, MicroEMACS {\uldb synchronizes}{\v SynchronizingWithADosBox} with the {\i program}.
\par Note:\tab Under MS-Windows 3.x, you cannot use this command to launch a Windows application. Use {\uldb execute-program}{\v execute_program} instead.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} show-files command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} show_files}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:showfiles}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} show-files;file}} show-files
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 show-files  {\i starname}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} creates a list of all the files matching the specified {\i starname}. The starname can contain a directory specification.
\par For instance, under MS-Windows, the command:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 show-files  "C:\\WINDOWS\\*.INI"
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 \tab will create a list of all the files ending by ".INI" in the directory "C:\\WINDOWS".
\par \pard\plain \s6\sa120 \f4\fs20 MicroEMACS appends a star "{\b *}" to the end of the specified starname, and appends a dot-star "{\b .*}" if the starname does not contain a dot character. Thus:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 show-files  "C:\\WINDOWS\\A"
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 \tab is equivalent to specifying:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 show-files  "C:\\WINDOWS\\A*.*"
\par \pard\plain \s6\sa120 \f4\fs20 This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard \s6\fi-720\li720\sa120 Note:\tab The list is actually built in a special buffer named "{\b File List}". It is displayed as a {\ul popup buffer}{\v PopupBuffer} or in a normal {\ul window}{\v Window}, depending on the value of the {\uldb $popflag}{
\v _popflag} {\ul variable}{\v Variable}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} shrink-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} shrink_window}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:shrinkwindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} shrink-window;resize;window}} shrink-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^Z}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  shrink-window
\par \pard\plain \s6\sa120 \f4\fs20 If {\i n} is a positive number, this {\uldb command}{\v Commands} decreases the height of the current {\ul window}{\v Window} by {\i n}
 lines. The window located immediately below the current window (or, if the current window is at the bottom of the {\ul screen}{\v Screen}, the window located immediately above it) grows by {\i n}
 lines. If the decrease of height would cause the current window to become too small to display any text, the command fails.
\par If the current screen contains only one window, the command fails.
\par If {\i n} is a negative number, this command acts as if the {\uldb grow-window}{\v grow_window} command had been invoked with the corresponding positive number (-{\i n}).
\par If no {\ul numeric arguments}{\v Argument} is specified, the height of the window is decreased by one line.
\par To change the size of the current window by specifying an absolute value, use the {\uldb resize-window}{\v resize_window} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} split-current-window command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} split_current_window}}
 {\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:splitcurrentwindow}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} split-current-window;window}} split-current-window
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X2}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  split-current-window
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} splits the current {\ul window}{\v Window} into two windows. Both windows view the current {\ul buffer}{\v Buffer} at the current {\ul point}{\v Point}.
\par If a {\ul numeric arguments}{\v Argument} is present and not equal to 1, the lower of the two windows becomes current. If {\i n} = 1, the upper window becomes current.
\par If no numeric argument is present, the upper window is selected as current if the {\ul point}{\v Point} was in the upper half of the split window, otherwise, the lower window is selected.
\par The command fails if it would result in a window too small to display any line of text.
\par To rid the {\ul screen}{\v Screen} of extraneous windows, use the {\uldb delete-window}{\v delete_window} or the {\uldb delete-other-windows}{\v delete_other_windows} commands.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} store-macro command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} store_macro}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:storemacro}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} store-macro;macro}} store-macro
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f34\fs18 {\i n}  store-macro
\par {\i    contents
\par      of
\par    macro}
\par \pard \s4\fi-2160\li2880\sa120\tx2880 !endm
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} stores the commands and {\uldb directives}{\v Directives} that follow it, up to the next {\uldb !ENDM}{\v .ENDM} directive, into a "numbered macro". That {\ul macro}{\v Macro}
 can be invoked later by the {\uldb execute-macro-}{\i\uldb n}{\v execute_macro_}{\i\v n} command.
\par A {\ul numeric arguments}{\v Argument} must be specified and it must be a number from 1 to 40. Otherwise, the command fails.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} store-procedure command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} store_procedure}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:storeprocedure}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} store-procedure;macro}} store-procedure
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f34\fs18 store-procedure  {\i name}
\par {\i    contents
\par      of
\par    macro}
\par \pard \s4\fi-2160\li2880\sa120\tx2880 !endm
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\tx2880 \f34\fs18 {\i n}  store-procedure
\par {\i    contents
\par      of
\par    macro}
\par \pard \s4\fi-2160\li2880\sa120\tx2880 !endm
\par \pard\plain \s6\sa120 \f4\fs20 If no {\ul numeric arguments}{\v Argument} is specified, this {\uldb command}{\v Commands} stores the commands and {\uldb directives}{\v Directives} that follow it, up to the next {\uldb !ENDM}{\v .ENDM}
 directive, into a "named macro" or "{\ul procedure}{\v Procedure}". That procedure can be invoked later by the {\uldb run}{\v run} or {\uldb execute-procedure}{\v execute_procedure} command, with the argument {\i name}.
\par If a numeric argument is specified, this command is equivalent to {\uldb store-macro}{\v store_macro}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} tile-screens command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} tile_screens}} {\plain \f4\fs16\up6 
+{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:tilescreens}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} tile-screens;MDI;screen}} tile-screens
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  tile-screens
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} is available only under Microsoft Windows. It causes all non-iconic {\ul screens}{\v Screen} to be rearranged in a tiled scheme. If the current screen is maximized (see {\uldb 
maximize-screen}{\v maximize_screen}) at the time this command is invoked, it is restored to its non-maximized size first.
\par If a {\ul numeric arguments}{\v Argument}
 is present and equals 1, the screens are tiled vertically (i.e. on top of each other). Otherwise, the screens are tiled horizontally (i.e. side by side). However, if there are too many screens to tile (more than 3), the argument is ignored and a mix of v
ertical and horizontal tiling is used.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} transpose-characters command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} transpose_characters}} 
{\plain \f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:transposecharacters}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} transpose-characters}} transpose-characters
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^T}{\v Keystroke}
\par This {\uldb command}{\v Commands} swaps the character that is before the {\ul point}{\v Point} and the character that is at the point, unless the point is at the end of a line, in which case the two last characters of the line are swapped around.
\par This command fails if the point is located at the beginning of a line.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} trim-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} trim_region}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:trimregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} trim-region;region}} trim-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^T}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 trim-region
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  trim-region
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes all the trailing space and tab characters between the column position of the {\ul point}{\v Point} and the end of the processed lines to be deleted.
\par If a {\ul numeric arguments}{\v Argument} is present, {\i n} lines, starting from the current one, are processed.
\par If no numeric argument is present, the lines processed are the ones that belong to the current {\uldb region}{\v Regions}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} unbind-key command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} unbind_key}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:unbindkey}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} unbind-key;binding}} unbind-key
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-^K}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 unbind-key  {\i keystroke}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} removes the association between a {\i keystroke} and a {\ul macro}{\v Macro} or a {\ul command}{\v Command}, thus destroying a {\ul binding}{\v Binding}.
\par The {\i keystroke} is specified using the {\uldb keystroke syntax}{\v Keystroke} or the {\uldb mouse syntax}{\v MouseAction}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 \page {\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} unbind-menu command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} unbind_menu}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:unbindmenu}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} unbind-menu;binding;menu}} unbind-menu
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 unbind-menu  {\i menu name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} is available only under Microsoft Windows. It destroys a menu item. The {\i menu name} is specified using the {\uldb menu name syntax}{\v MenuName}.
\par If the {\i menu name} designates a menu item that does not exist, the command fails.
\par If the {\i menu name} specifies a menu (that itself contains menu items), all the menu hierarchy under it is destroyed.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} undent-region command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} undent_region}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:undentregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} undent-region;tabs;region}} undent-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-(}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  undent-region
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} deletes the first {\i n} tab characters in front of each line within the current {\uldb region}{\v Regions}.
\par If the {\ul numeric argument}{\v Argument} {\i n} is not specified, the first tab of each line is deleted.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab this command is often used to undo the effect of an {\uldb indent-region}{\v indent_region} command.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} undo command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} undo}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:undentregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} undo;tabs;region}} undo
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^_}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  undo
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} undoes the last {\i n} editing commands which have been executed within the current {\uldb region}{\v Regions}.
\par If the {\ul numeric argument}{\v Argument} {\i n} is not specified, only the most recent command is undone.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} universal-argument command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} universal_argument}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:universalargument}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} universal-argument;argument}} universal-argument
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^U}{\v Keystroke}
\par This is a dummy {\uldb command}{\v Commands} meant to be used in combination with the {\uldb bind-to-key}{\v bind_to_key} command in order to redefine the universal argument key.
\par To define the F1 function key as being the universal argument key:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 bind-to-key  universal-argument  FN1
\par \pard\plain \s6\sa120 \f4\fs20 Pressing the universal argument key causes a numeric argument of 4 to be generated. If digits (and the minus sign) are entered following the universal argument, they are interpreted to compose a {\ul numeric argument}{\v 
Argument}, much as if the {\ul meta key}{\v MetaKey} had been pressed. Also, each further action on the universal argument key multiplies the existing numeric argument by 4.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} unmark-buffer command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} unmark_buffer}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:unmarkbuffer}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} unmark-buffer;buffer}} unmark-buffer
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-~}{\v Keystroke}
\par This {\uldb command}{\v Commands} clears the change flag of the current {\ul buffer}{\v Buffer}. This causes MicroEMACS to forget that the buffer's contents have changed since they were last made equivalent to the contents of a disk file (by {\uldb 
append-file}{\v append_file}, {\uldb find-file}{\v find_file}, {\uldb read-file}{\v read_file}, {\uldb save-file}{\v save_file}, {\uldb view-file}{\v view_file} or {\uldb write-file}{\v write_file}).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the change flag of the current buffer can also be accessed via the {\uldb $cbflags}{\v _cbflags} {\ul variable}{\v Variable}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} update-screen command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} update_screen}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:updatescreen}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} update-screen;display}} update-screen
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par This {\uldb command}{\v Commands} immediately updates all elements of the MicroEMACS display during the execution of a {\ul macro}{\v Macro}. It has no visible effect when used interactively.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} view-file command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} view_file}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:viewfile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} view-file;file;open;read;VIEW}} view-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: 
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 find-file  {\i file name}
\par \pard\plain \s6\sa120 \f4\fs20 If the named file is already loaded somewhere in the editor, this {\uldb command}{\v Commands} brings its {\ul buffer}{\v Buffer} up in the current {\ul window}{\v Window}
. Otherwise, the file is searched for on disk. If it is found, a new buffer is created and the contents of 
the file are read into it. If the file does not exist, a new empty buffer is created. In all cases, the buffer is brought up in the current window, in {\uldb VIEW}{\v VIEW} mode.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} widen-from-region command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} widen_from_region}} {
\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:widenfromregion}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} widen-from-region;region;buffer;scope}} widen-from-region
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X>}{\v Keystroke}
\par This {\uldb command}{\v Commands} causes all the invisible text in the {\uldb narrowed}{\v NarrowingYourScope} {\ul buffer}{\v Buffer} becomes accessible and visible again.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} wrap-word command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} wrap_word}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:wrapword}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} wrap-word;word}} wrap-word
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par This {\uldb command}{\v Commands} replaces by a newline the first group of space or tab characters preceding the {\ul point}{\v Point} on the current line. The point is left where it was when the command was invoked.
\par If no space or tab character is found before the point, a new line is created after the current one and the point is moved to it.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s12\fi-720\li720\sa120 \f4\fs20 Note:\tab the {\uldb $wraphook}{\v _wraphook} {\ul variable}{\v Variable} (which points to the {\ul command}{\v Command} or {\ul macro}{\v Macro} use to perform line wrapping in {\uldb WRAP}{\v WRAP}
 mode) is set to wrap-word by default.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\fs16 \page }{\plain \f4\fs16\up6 ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} write-file command}}{\fs16  }{\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} write_file}} {\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:writefile}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} write-file;file;write;save}} write-file
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^X^W}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 write-file  {\i file name}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} writes the contents of the current {\ul buffer}{\v Buffer} to disk, using the specified {\i file name}. This file name becomes the one associated with the buffer (indicated by the {\uldb 
$cfname}{\v _cfname} {\ul variable}{\v Variable}).
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} write-message and print commands}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} write_message}} {\plain 
\f4\fs16\up6 +{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:writemessage}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} write-message;print;message}} write-message {\plain \f4\fs20 or} print
\par \pard\plain \s6\sa120 \f4\fs20 No default binding
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 print  {\i message}
\par \pard\plain \s6\sa120 \f4\fs20 or:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 write-message  {\i message}
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} causes the specified {\i message} to appear on the {\ul message line}{\v MessageLine}.
\par This command is unaffected by {\ul numeric arguments}{\v Argument}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} yank command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} yank}} {\plain \f4\fs16\up6 +{\footnote 
\pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:yank}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} yank;kill}} yank
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul ^Y}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  yank
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} inserts the contents of the {\ul kill buffer}{\v KillBuffer} at the {\ul point}{\v Point}. If a {\ul numeric arguments}{\v Argument} is present, the command is repeated {\i n} times.
\par If {\i n} is negative, the command fails.
\par The placement of the point after the execution of this command is determined by the value of the {\uldb $yankflag}{\v _yankflag} {\ul variable}{\v Variable}.
\par \pard\plain \s251\sa120\tx2880 \b\f4\fs20 {\plain \f4\fs16\up6 \page ${\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 $} yank-pop command}} {\plain \f4\fs16\up6 #{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 #} yank_pop}} {\plain \f4\fs16\up6 +
{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 +} Commands:yankpop}} {\plain \f4\fs16\up6 K{\footnote \pard\plain \s245 \f4\fs20 {\fs16\up6 K} yank-pop;yank;kill}} yank-pop
\par \pard\plain \s6\sa120 \f4\fs20 Default binding: {\ul M-Y}{\v Keystroke}
\par Syntax:
\par \pard\plain \s4\fi-2160\li2880\sa120\tx2880 \f34\fs18 {\i n}  yank-pop
\par \pard\plain \s6\sa120 \f4\fs20 This {\uldb command}{\v Commands} cycles the {\ul kill ring}{\v KillRing} {\i n} times (as done by the {\uldb cycle-ring}{\v cycle_ring} command) and inserts the contents of the {\ul kill buffer}{\v KillBuffer} at the {\ul 
point}{\v Point}. If the previous command was {\uldb yank}{\v yank} or yank-pop, the text inserted by that command is deleted before the new text is inserted.
\par If no {\ul numeric argument}{\v Argument} is specified, it is equivalent to {\i n} = 1.
\par The placement of the point after the execution of this command is determined by the value of the {\uldb $yankflag}{\v _yankflag} {\ul variable}{\v Variable}.
\par }